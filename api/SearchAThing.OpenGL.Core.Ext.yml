### YamlMime:ManagedReference
items:
- uid: SearchAThing.OpenGL.Core.Ext
  commentId: T:SearchAThing.OpenGL.Core.Ext
  id: Ext
  parent: SearchAThing.OpenGL.Core
  children:
  - SearchAThing.OpenGL.Core.Ext.AspectRatio(System.Drawing.Size@)
  - SearchAThing.OpenGL.Core.Ext.AverageColor(SearchAThing.OpenGL.Core.IGLLine)
  - SearchAThing.OpenGL.Core.Ext.BaseX(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.BaseY(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.BaseZ(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(SearchAThing.OpenGL.Core.IGLFigure,System.Single)
  - SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure},System.Single)
  - SearchAThing.OpenGL.Core.Ext.Center(SearchAThing.OpenGL.Core.IGLFigure)
  - SearchAThing.OpenGL.Core.Ext.Describe(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar},System.String)
  - SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line},System.Single)
  - SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line},System.Single)
  - SearchAThing.OpenGL.Core.Ext.EnsureDetached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  - SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector2@,System.Single,System.Nullable{System.Numerics.Vector2}@)
  - SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector3@,System.Single,System.Nullable{System.Numerics.Vector3}@)
  - SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector4@,System.Single,System.Nullable{System.Numerics.Vector4}@)
  - SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Single,System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests``1(System.Collections.Generic.IEnumerable{``0},System.Double,System.Collections.Generic.IEnumerable{``0},System.Double)
  - SearchAThing.OpenGL.Core.Ext.FlipX(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.FlipY(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.FlipZ(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Matrix4x4@,System.Int32,System.Int32)
  - SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.GL(SearchAThing.OpenGL.Core.GLPrimitiveType)
  - SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color}@,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol(System.Single,System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.GreatThanTol(System.Single,System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.GLTriangle,System.Single,SearchAThing.OpenGL.Core.GLTriangle,System.Boolean@)
  - SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.Line,System.Single,SearchAThing.OpenGL.Core.GLFigureBase)
  - SearchAThing.OpenGL.Core.Ext.Inverse(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.IsAttached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  - SearchAThing.OpenGL.Core.Ext.IsParallel(System.Numerics.Vector3@,System.Single,System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol(System.Single,System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.LessThanTol(System.Single,System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.LineTo(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  - SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3@,System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  - SearchAThing.OpenGL.Core.Ext.Lines(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color})
  - SearchAThing.OpenGL.Core.Ext.LoadTexture(SearchAThing.OpenGL.Core.GLModel,System.String)
  - SearchAThing.OpenGL.Core.Ext.MRound(System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.Magnitude(System.Single)
  - SearchAThing.OpenGL.Core.Ext.MakeFigure(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color}@)
  - SearchAThing.OpenGL.Core.Ext.Max(System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4@,System.Nullable{System.Numerics.Vector3}@)
  - SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4@,System.Single,System.Single,System.Single)
  - SearchAThing.OpenGL.Core.Ext.Move``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector3,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.Move``1(``0,System.Numerics.Vector3@,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.Move``1(``0,System.Single,System.Single,System.Single,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.Normalized(System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.OBBox(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase})
  - SearchAThing.OpenGL.Core.Ext.Origin(System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.PositionSignature(SearchAThing.OpenGL.Core.IGLVertex,System.Single)
  - SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
  - SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3@,System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.SaveTo(SkiaSharp.SKBitmap,System.String,SkiaSharp.SKEncodedImageFormat,System.Int32)
  - SearchAThing.OpenGL.Core.Ext.ScaleAbout(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Single)
  - SearchAThing.OpenGL.Core.Ext.Segments(SearchAThing.OpenGL.Core.IGLTriangle)
  - SearchAThing.OpenGL.Core.Ext.SetAlphaF(System.Drawing.Color@,System.Single)
  - SearchAThing.OpenGL.Core.Ext.SetAlpha``1(``0,System.Nullable{System.Single})
  - SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Drawing.Color@)
  - SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Numerics.Vector4@)
  - SearchAThing.OpenGL.Core.Ext.SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Drawing.Color@)
  - SearchAThing.OpenGL.Core.Ext.SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector4@)
  - SearchAThing.OpenGL.Core.Ext.SetColor``1(``0,System.Drawing.Color@)
  - SearchAThing.OpenGL.Core.Ext.SetColor``1(``0,System.Numerics.Vector4@)
  - SearchAThing.OpenGL.Core.Ext.SetOrder``1(``0,System.Int32)
  - SearchAThing.OpenGL.Core.Ext.SetOrigin(System.Numerics.Matrix4x4@,System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.SetScreenMode``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.SetScreenMode``1(``0,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.ShortString(SearchAThing.OpenGL.Core.CameraViewType)
  - SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.HSV)
  - SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.RGB)
  - SearchAThing.OpenGL.Core.Ext.ToColor(System.Numerics.Vector4@)
  - SearchAThing.OpenGL.Core.Ext.ToDxfColor(System.Drawing.Color)
  - SearchAThing.OpenGL.Core.Ext.ToDxfLine(SearchAThing.OpenGL.Core.IGLLine)
  - SearchAThing.OpenGL.Core.Ext.ToDxfPoint(SearchAThing.OpenGL.Core.IGLPoint)
  - SearchAThing.OpenGL.Core.Ext.ToDxfVector3(SearchAThing.OpenGL.Core.IGLVertex)
  - SearchAThing.OpenGL.Core.Ext.ToDxfVector3(System.Numerics.Vector3@)
  - SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint})
  - SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle})
  - SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{System.Numerics.Vector3})
  - SearchAThing.OpenGL.Core.Ext.ToFloat(System.Double)
  - SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line,System.Drawing.Color@,System.Drawing.Color@)
  - SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line,System.Nullable{System.Drawing.Color}@)
  - SearchAThing.OpenGL.Core.Ext.ToHSV(System.Drawing.Color)
  - SearchAThing.OpenGL.Core.Ext.ToLine(SearchAThing.Sci.Line3D)
  - SearchAThing.OpenGL.Core.Ext.ToLine3D(SearchAThing.OpenGL.Core.Line)
  - SearchAThing.OpenGL.Core.Ext.ToRGB(ColorHelper.HSV)
  - SearchAThing.OpenGL.Core.Ext.ToRGB(System.Drawing.Color)
  - SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3@,System.Int32)
  - SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3@,System.Single)
  - SearchAThing.OpenGL.Core.Ext.ToString(System.Single,System.Int32)
  - SearchAThing.OpenGL.Core.Ext.ToTriangle3D(SearchAThing.OpenGL.Core.GLTriangle)
  - SearchAThing.OpenGL.Core.Ext.ToUCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.ToVector2(System.Drawing.Size@)
  - SearchAThing.OpenGL.Core.Ext.ToVector3(System.Drawing.Color@)
  - SearchAThing.OpenGL.Core.Ext.ToVector4(System.Drawing.Color@,System.Nullable{System.Single})
  - SearchAThing.OpenGL.Core.Ext.ToWCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  - SearchAThing.OpenGL.Core.Ext.Transform(SearchAThing.OpenGL.Core.Line,System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.Transform(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  - SearchAThing.OpenGL.Core.Ext.Vertexes(SearchAThing.OpenGL.Core.IGLFigure)
  langs:
  - csharp
  - vb
  name: Ext
  nameWithType: Ext
  fullName: SearchAThing.OpenGL.Core.Ext
  type: Class
  source:
    remote:
      path: src/core/vertex/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Ext
    path: src/core/vertex/Utils.cs
    startLine: 2
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  syntax:
    content: public static class Ext
    content.vb: Public Module Ext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SearchAThing.OpenGL.Core.Ext.Vertexes(SearchAThing.OpenGL.Core.IGLFigure)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Vertexes(SearchAThing.OpenGL.Core.IGLFigure)
  id: Vertexes(SearchAThing.OpenGL.Core.IGLFigure)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Vertexes(IGLFigure)
  nameWithType: Ext.Vertexes(IGLFigure)
  fullName: SearchAThing.OpenGL.Core.Ext.Vertexes(SearchAThing.OpenGL.Core.IGLFigure)
  type: Method
  source:
    remote:
      path: src/core/figure/GLFigureBase.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Vertexes
    path: src/core/figure/GLFigureBase.cs
    startLine: 379
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Vertexes belonging this figure [object].
  example: []
  syntax:
    content: public static IEnumerable<GLVertex> Vertexes(this IGLFigure figure)
    parameters:
    - id: figure
      type: SearchAThing.OpenGL.Core.IGLFigure
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLVertex}
    content.vb: Public Shared Function Vertexes(figure As IGLFigure) As IEnumerable(Of GLVertex)
  overload: SearchAThing.OpenGL.Core.Ext.Vertexes*
- uid: SearchAThing.OpenGL.Core.Ext.OBBox(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase})
  commentId: M:SearchAThing.OpenGL.Core.Ext.OBBox(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase})
  id: OBBox(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: OBBox(IEnumerable<GLFigureBase>)
  nameWithType: Ext.OBBox(IEnumerable<GLFigureBase>)
  fullName: SearchAThing.OpenGL.Core.Ext.OBBox(System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLFigureBase>)
  type: Method
  source:
    remote:
      path: src/core/figure/GLFigureBase.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: OBBox
    path: src/core/figure/GLFigureBase.cs
    startLine: 397
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Object space bbox of given figures vertexes.
  example: []
  syntax:
    content: public static BBox OBBox(this IEnumerable<GLFigureBase> figures)
    parameters:
    - id: figures
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase}
      description: Gl figures to compute bbox.
    return:
      type: SearchAThing.OpenGL.Core.BBox
      description: Figures bbox [object].
    content.vb: Public Shared Function OBBox(figures As IEnumerable(Of GLFigureBase)) As BBox
  overload: SearchAThing.OpenGL.Core.Ext.OBBox*
  nameWithType.vb: Ext.OBBox(IEnumerable(Of GLFigureBase))
  fullName.vb: SearchAThing.OpenGL.Core.Ext.OBBox(System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLFigureBase))
  name.vb: OBBox(IEnumerable(Of GLFigureBase))
- uid: SearchAThing.OpenGL.Core.Ext.Center(SearchAThing.OpenGL.Core.IGLFigure)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Center(SearchAThing.OpenGL.Core.IGLFigure)
  id: Center(SearchAThing.OpenGL.Core.IGLFigure)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Center(IGLFigure)
  nameWithType: Ext.Center(IGLFigure)
  fullName: SearchAThing.OpenGL.Core.Ext.Center(SearchAThing.OpenGL.Core.IGLFigure)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Center
    path: src/core/figure/IGLFigure.cs
    startLine: 190
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Mean of figure vertexes.
  example: []
  syntax:
    content: public static Vector3 Center(this IGLFigure figure)
    parameters:
    - id: figure
      type: SearchAThing.OpenGL.Core.IGLFigure
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function Center(figure As IGLFigure) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.Center*
- uid: SearchAThing.OpenGL.Core.Ext.SetScreenMode``1(``0,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetScreenMode``1(``0,System.Boolean)
  id: SetScreenMode``1(``0,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetScreenMode<T>(T, bool)
  nameWithType: Ext.SetScreenMode<T>(T, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.SetScreenMode<T>(T, bool)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetScreenMode
    path: src/core/figure/IGLFigure.cs
    startLine: 196
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Sets <xref href="SearchAThing.OpenGL.Core.IGLFigure.ScreenCoordMode" data-throw-if-not-resolved="false"></xref> on given figure.
  example: []
  syntax:
    content: 'public static T SetScreenMode<T>(this T figure, bool screenCoordMode) where T : IGLFigure'
    parameters:
    - id: figure
      type: '{T}'
    - id: screenCoordMode
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function SetScreenMode(Of T As IGLFigure)(figure As T, screenCoordMode As Boolean) As T
  overload: SearchAThing.OpenGL.Core.Ext.SetScreenMode*
  nameWithType.vb: Ext.SetScreenMode(Of T)(T, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetScreenMode(Of T)(T, Boolean)
  name.vb: SetScreenMode(Of T)(T, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.SetScreenMode``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetScreenMode``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: SetScreenMode``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetScreenMode<T>(IEnumerable<T>, bool)
  nameWithType: Ext.SetScreenMode<T>(IEnumerable<T>, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.SetScreenMode<T>(System.Collections.Generic.IEnumerable<T>, bool)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetScreenMode
    path: src/core/figure/IGLFigure.cs
    startLine: 202
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Sets <xref href="SearchAThing.OpenGL.Core.IGLFigure.ScreenCoordMode" data-throw-if-not-resolved="false"></xref> on given figures.
  example: []
  syntax:
    content: 'public static IEnumerable<T> SetScreenMode<T>(this IEnumerable<T> figures, bool screenCoordMode) where T : IGLFigure'
    parameters:
    - id: figures
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: screenCoordMode
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function SetScreenMode(Of T As IGLFigure)(figures As IEnumerable(Of T), screenCoordMode As Boolean) As IEnumerable(Of T)
  overload: SearchAThing.OpenGL.Core.Ext.SetScreenMode*
  nameWithType.vb: Ext.SetScreenMode(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetScreenMode(Of T)(System.Collections.Generic.IEnumerable(Of T), Boolean)
  name.vb: SetScreenMode(Of T)(IEnumerable(Of T), Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.Move``1(``0,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Move``1(``0,System.Single,System.Single,System.Single,System.Boolean)
  id: Move``1(``0,System.Single,System.Single,System.Single,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Move<T>(T, float, float, float, bool)
  nameWithType: Ext.Move<T>(T, float, float, float, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.Move<T>(T, float, float, float, bool)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Move
    path: src/core/figure/IGLFigure.cs
    startLine: 218
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Move the figure by the given delta.<br />
  remarks: >-
    - No vertex change, but only the object matrix associated to this figure.

    - Object matrix will replaced with a single translation.
  example: []
  syntax:
    content: 'public static T Move<T>(this T figure, float dx, float dy, float dz, bool relative = true) where T : IGLFigure'
    parameters:
    - id: figure
      type: '{T}'
      description: Figure to move.
    - id: dx
      type: System.Single
      description: Delta (x) [object]
    - id: dy
      type: System.Single
      description: Delta (y) [object]
    - id: dz
      type: System.Single
      description: Delta (z) [object]
    - id: relative
      type: System.Boolean
      description: If true (default) sum the given delta elsewhere replace the object matrix translation.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: This figure reference.
    content.vb: Public Shared Function Move(Of T As IGLFigure)(figure As T, dx As Single, dy As Single, dz As Single, relative As Boolean = True) As T
  overload: SearchAThing.OpenGL.Core.Ext.Move*
  nameWithType.vb: Ext.Move(Of T)(T, Single, Single, Single, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Move(Of T)(T, Single, Single, Single, Boolean)
  name.vb: Move(Of T)(T, Single, Single, Single, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.Move``1(``0,System.Numerics.Vector3@,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Move``1(``0,System.Numerics.Vector3@,System.Boolean)
  id: Move``1(``0,System.Numerics.Vector3@,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Move<T>(T, in Vector3, bool)
  nameWithType: Ext.Move<T>(T, in Vector3, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.Move<T>(T, in System.Numerics.Vector3, bool)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Move
    path: src/core/figure/IGLFigure.cs
    startLine: 232
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Move the figure by the given delta.<br />
  remarks: >-
    - No vertex change, but only the object matrix associated to this figure.

    - Object matrix will replaced with a single translation.
  example: []
  syntax:
    content: 'public static T Move<T>(this T figure, in Vector3 coord, bool relative = true) where T : IGLFigure'
    parameters:
    - id: figure
      type: '{T}'
      description: Figure to move.
    - id: coord
      type: System.Numerics.Vector3
      description: Delta vector3 [object]
    - id: relative
      type: System.Boolean
      description: If true (default) sum the given delta elsewhere replace the object matrix translation.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: This figure reference.
    content.vb: Public Shared Function Move(Of T As IGLFigure)(figure As T, coord As Vector3, relative As Boolean = True) As T
  overload: SearchAThing.OpenGL.Core.Ext.Move*
  nameWithType.vb: Ext.Move(Of T)(T, Vector3, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Move(Of T)(T, System.Numerics.Vector3, Boolean)
  name.vb: Move(Of T)(T, Vector3, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.Move``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector3,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Move``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector3,System.Boolean)
  id: Move``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector3,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Move<T>(IEnumerable<T>, Vector3, bool)
  nameWithType: Ext.Move<T>(IEnumerable<T>, Vector3, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.Move<T>(System.Collections.Generic.IEnumerable<T>, System.Numerics.Vector3, bool)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Move
    path: src/core/figure/IGLFigure.cs
    startLine: 251
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Move given figures by the given delta.<br />
  remarks: >-
    - No vertex change, but only the object matrix associated to this figure.

    - Object matrix will replaced with a single translation.
  example: []
  syntax:
    content: 'public static IEnumerable<T> Move<T>(this IEnumerable<T> figures, Vector3 coord, bool relative = true) where T : IGLFigure'
    parameters:
    - id: figures
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Figures to move.
    - id: coord
      type: System.Numerics.Vector3
      description: Delta vector3 [object]
    - id: relative
      type: System.Boolean
      description: If true (default) sum the given delta elsewhere replace the object matrix translation.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: This figure reference.
    content.vb: Public Shared Function Move(Of T As IGLFigure)(figures As IEnumerable(Of T), coord As Vector3, relative As Boolean = True) As IEnumerable(Of T)
  overload: SearchAThing.OpenGL.Core.Ext.Move*
  nameWithType.vb: Ext.Move(Of T)(IEnumerable(Of T), Vector3, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Move(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Numerics.Vector3, Boolean)
  name.vb: Move(Of T)(IEnumerable(Of T), Vector3, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.SetAlpha``1(``0,System.Nullable{System.Single})
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetAlpha``1(``0,System.Nullable{System.Single})
  id: SetAlpha``1(``0,System.Nullable{System.Single})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetAlpha<T>(T, float?)
  nameWithType: Ext.SetAlpha<T>(T, float?)
  fullName: SearchAThing.OpenGL.Core.Ext.SetAlpha<T>(T, float?)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetAlpha
    path: src/core/figure/IGLFigure.cs
    startLine: 260
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Set figure alpha ( 0:full transparent, 1:full opaque ).<br />    

    <xref href="SearchAThing.OpenGL.Core.IGLFigure.Alpha" data-throw-if-not-resolved="false"></xref>

    <param name="fig">Figure on which operate.</param>

    <param name="alpha">Alpha (0:transparent, 1:opaque).</param>
  example: []
  syntax:
    content: 'public static T SetAlpha<T>(this T fig, float? alpha) where T : IGLFigure'
    parameters:
    - id: fig
      type: '{T}'
    - id: alpha
      type: System.Nullable{System.Single}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function SetAlpha(Of T As IGLFigure)(fig As T, alpha As Single?) As T
  overload: SearchAThing.OpenGL.Core.Ext.SetAlpha*
  nameWithType.vb: Ext.SetAlpha(Of T)(T, Single?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetAlpha(Of T)(T, Single?)
  name.vb: SetAlpha(Of T)(T, Single?)
- uid: SearchAThing.OpenGL.Core.Ext.SetOrder``1(``0,System.Int32)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetOrder``1(``0,System.Int32)
  id: SetOrder``1(``0,System.Int32)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetOrder<T>(T, int)
  nameWithType: Ext.SetOrder<T>(T, int)
  fullName: SearchAThing.OpenGL.Core.Ext.SetOrder<T>(T, int)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetOrder
    path: src/core/figure/IGLFigure.cs
    startLine: 273
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Change the figure order.
  example: []
  syntax:
    content: 'public static T SetOrder<T>(this T fig, int order) where T : IGLFigure'
    parameters:
    - id: fig
      type: '{T}'
      description: Figure on which operate.
    - id: order
      type: System.Int32
      description: Order to set.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: This figure.
    content.vb: Public Shared Function SetOrder(Of T As IGLFigure)(fig As T, order As Integer) As T
  overload: SearchAThing.OpenGL.Core.Ext.SetOrder*
  seealso:
  - linkId: SearchAThing.OpenGL.Core.IGLFigure.Order
    commentId: P:SearchAThing.OpenGL.Core.IGLFigure.Order
  nameWithType.vb: Ext.SetOrder(Of T)(T, Integer)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetOrder(Of T)(T, Integer)
  name.vb: SetOrder(Of T)(T, Integer)
- uid: SearchAThing.OpenGL.Core.Ext.SetColor``1(``0,System.Drawing.Color@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetColor``1(``0,System.Drawing.Color@)
  id: SetColor``1(``0,System.Drawing.Color@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetColor<T>(T, in Color)
  nameWithType: Ext.SetColor<T>(T, in Color)
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor<T>(T, in System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetColor
    path: src/core/figure/IGLFigure.cs
    startLine: 286
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Set color on primitives vertexes of this figure.
  example: []
  syntax:
    content: 'public static T SetColor<T>(this T fig, in Color color) where T : IGLFigure'
    parameters:
    - id: fig
      type: '{T}'
      description: Figure on which operate.
    - id: color
      type: System.Drawing.Color
      description: Color to set on vertexes.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: This figure.
    content.vb: Public Shared Function SetColor(Of T As IGLFigure)(fig As T, color As Color) As T
  overload: SearchAThing.OpenGL.Core.Ext.SetColor*
  nameWithType.vb: Ext.SetColor(Of T)(T, Color)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetColor(Of T)(T, System.Drawing.Color)
  name.vb: SetColor(Of T)(T, Color)
- uid: SearchAThing.OpenGL.Core.Ext.SetColor``1(``0,System.Numerics.Vector4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetColor``1(``0,System.Numerics.Vector4@)
  id: SetColor``1(``0,System.Numerics.Vector4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetColor<T>(T, in Vector4)
  nameWithType: Ext.SetColor<T>(T, in Vector4)
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor<T>(T, in System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/core/figure/IGLFigure.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetColor
    path: src/core/figure/IGLFigure.cs
    startLine: 295
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Set color on primitives vertexes of this figure.
  example: []
  syntax:
    content: 'public static T SetColor<T>(this T fig, in Vector4 rgbaColor) where T : IGLFigure'
    parameters:
    - id: fig
      type: '{T}'
      description: Figure on which operate.
    - id: rgbaColor
      type: System.Numerics.Vector4
      description: Color to set on vertexes.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: This figure.
    content.vb: Public Shared Function SetColor(Of T As IGLFigure)(fig As T, rgbaColor As Vector4) As T
  overload: SearchAThing.OpenGL.Core.Ext.SetColor*
  nameWithType.vb: Ext.SetColor(Of T)(T, Vector4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetColor(Of T)(T, System.Numerics.Vector4)
  name.vb: SetColor(Of T)(T, Vector4)
- uid: SearchAThing.OpenGL.Core.Ext.MakeFigure(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.MakeFigure(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color}@)
  id: MakeFigure(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: MakeFigure(BBox, in Color?)
  nameWithType: Ext.MakeFigure(BBox, in Color?)
  fullName: SearchAThing.OpenGL.Core.Ext.MakeFigure(SearchAThing.OpenGL.Core.BBox, in System.Drawing.Color?)
  type: Method
  source:
    remote:
      path: src/core/geom/BBox.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: MakeFigure
    path: src/core/geom/BBox.cs
    startLine: 462
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create wcs lines figure that represents the given bounding box.
  example: []
  syntax:
    content: public static GLLineFigure MakeFigure(this BBox bbox, in Color? color)
    parameters:
    - id: bbox
      type: SearchAThing.OpenGL.Core.BBox
      description: Bounding box for which create line figures.
    - id: color
      type: System.Nullable{System.Drawing.Color}
      description: (optional) color to apply created figure.
    return:
      type: SearchAThing.OpenGL.Core.GLLineFigure
      description: Lines figure.
    content.vb: Public Shared Function MakeFigure(bbox As BBox, color As Color?) As GLLineFigure
  overload: SearchAThing.OpenGL.Core.Ext.MakeFigure*
  nameWithType.vb: Ext.MakeFigure(BBox, Color?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.MakeFigure(SearchAThing.OpenGL.Core.BBox, System.Drawing.Color?)
  name.vb: MakeFigure(BBox, Color?)
- uid: SearchAThing.OpenGL.Core.Ext.Lines(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color})
  commentId: M:SearchAThing.OpenGL.Core.Ext.Lines(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color})
  id: Lines(SearchAThing.OpenGL.Core.BBox,System.Nullable{System.Drawing.Color})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Lines(BBox, Color?)
  nameWithType: Ext.Lines(BBox, Color?)
  fullName: SearchAThing.OpenGL.Core.Ext.Lines(SearchAThing.OpenGL.Core.BBox, System.Drawing.Color?)
  type: Method
  source:
    remote:
      path: src/core/geom/BBox.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Lines
    path: src/core/geom/BBox.cs
    startLine: 471
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create wcs gl lines that represents the given bounding box.
  example: []
  syntax:
    content: public static IEnumerable<GLLine> Lines(this BBox bbox, Color? color = null)
    parameters:
    - id: bbox
      type: SearchAThing.OpenGL.Core.BBox
      description: Bounding box for which create gl lines.
    - id: color
      type: System.Nullable{System.Drawing.Color}
      description: (optional) color to apply created gl lines.
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLLine}
      description: GL lines.
    content.vb: Public Shared Function Lines(bbox As BBox, color As Color? = Nothing) As IEnumerable(Of GLLine)
  overload: SearchAThing.OpenGL.Core.Ext.Lines*
- uid: SearchAThing.OpenGL.Core.Ext.Transform(SearchAThing.OpenGL.Core.Line,System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Transform(SearchAThing.OpenGL.Core.Line,System.Numerics.Matrix4x4@)
  id: Transform(SearchAThing.OpenGL.Core.Line,System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Transform(Line, in Matrix4x4)
  nameWithType: Ext.Transform(Line, in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.Transform(SearchAThing.OpenGL.Core.Line, in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Transform
    path: src/core/geom/Line.cs
    startLine: 192
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new line with from, to transformed by the given transformation matrix.
  example: []
  syntax:
    content: public static Line Transform(this Line line, in Matrix4x4 m)
    parameters:
    - id: line
      type: SearchAThing.OpenGL.Core.Line
      description: Line to transform.
    - id: m
      type: System.Numerics.Matrix4x4
      description: Transformation matrix.
    return:
      type: SearchAThing.OpenGL.Core.Line
      description: Transformed line.
    content.vb: Public Shared Function Transform(line As Line, m As Matrix4x4) As Line
  overload: SearchAThing.OpenGL.Core.Ext.Transform*
  nameWithType.vb: Ext.Transform(Line, Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Transform(SearchAThing.OpenGL.Core.Line, System.Numerics.Matrix4x4)
  name.vb: Transform(Line, Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3@,System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3@,System.Numerics.Vector3@)
  id: LineV(System.Numerics.Vector3@,System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: LineV(in Vector3, in Vector3)
  nameWithType: Ext.LineV(in Vector3, in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.LineV(in System.Numerics.Vector3, in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: LineV
    path: src/core/geom/Line.cs
    startLine: 200
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a line from this point with given extension vector.
  example: []
  syntax:
    content: public static Line LineV(this in Vector3 from, in Vector3 v)
    parameters:
    - id: from
      type: System.Numerics.Vector3
      description: This point.
    - id: v
      type: System.Numerics.Vector3
      description: Extension vector.
    return:
      type: SearchAThing.OpenGL.Core.Line
    content.vb: Public Shared Function LineV(from As Vector3, v As Vector3) As Line
  overload: SearchAThing.OpenGL.Core.Ext.LineV*
  nameWithType.vb: Ext.LineV(Vector3, Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3, System.Numerics.Vector3)
  name.vb: LineV(Vector3, Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.ToLine(SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToLine(SearchAThing.Sci.Line3D)
  id: ToLine(SearchAThing.Sci.Line3D)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToLine(Line3D)
  nameWithType: Ext.ToLine(Line3D)
  fullName: SearchAThing.OpenGL.Core.Ext.ToLine(SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToLine
    path: src/core/geom/Line.cs
    startLine: 205
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given sci line to line.
  example: []
  syntax:
    content: public static Line ToLine(this Line3D line)
    parameters:
    - id: line
      type: SearchAThing.Sci.Line3D
    return:
      type: SearchAThing.OpenGL.Core.Line
    content.vb: Public Shared Function ToLine(line As Line3D) As Line
  overload: SearchAThing.OpenGL.Core.Ext.ToLine*
- uid: SearchAThing.OpenGL.Core.Ext.ToLine3D(SearchAThing.OpenGL.Core.Line)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToLine3D(SearchAThing.OpenGL.Core.Line)
  id: ToLine3D(SearchAThing.OpenGL.Core.Line)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToLine3D(Line)
  nameWithType: Ext.ToLine3D(Line)
  fullName: SearchAThing.OpenGL.Core.Ext.ToLine3D(SearchAThing.OpenGL.Core.Line)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToLine3D
    path: src/core/geom/Line.cs
    startLine: 210
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given line to sci line.
  example: []
  syntax:
    content: public static Line3D ToLine3D(this Line line)
    parameters:
    - id: line
      type: SearchAThing.OpenGL.Core.Line
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared Function ToLine3D(line As Line) As Line3D
  overload: SearchAThing.OpenGL.Core.Ext.ToLine3D*
- uid: SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.Line,System.Single,SearchAThing.OpenGL.Core.GLFigureBase)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.Line,System.Single,SearchAThing.OpenGL.Core.GLFigureBase)
  id: Intersect(SearchAThing.OpenGL.Core.Line,System.Single,SearchAThing.OpenGL.Core.GLFigureBase)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Intersect(Line, float, GLFigureBase)
  nameWithType: Ext.Intersect(Line, float, GLFigureBase)
  fullName: SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.Line, float, SearchAThing.OpenGL.Core.GLFigureBase)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Intersect
    path: src/core/geom/Line.cs
    startLine: 221
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Intersect given raycast to given figure primitives.<br />

    Given [local] raycast will automatically backwarded to [object] raycast depending on the object matrix of given figure.<br />

    <xref href="SearchAThing.OpenGL.Core.GLControl.RayCastLocal(System.Numerics.Vector2%40)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static IEnumerable<RayCastHitTest> Intersect(this Line lraycast, float tol, GLFigureBase figure)
    parameters:
    - id: lraycast
      type: SearchAThing.OpenGL.Core.Line
      description: Ray cast [local].
    - id: tol
      type: System.Single
      description: Length tolerance comparision ( used for point and line primitives match ).
    - id: figure
      type: SearchAThing.OpenGL.Core.GLFigureBase
      description: Figure to test for hit vs. given raycast.
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.RayCastHitTest}
      description: List of hits, at most one foreach figure primitive.
    content.vb: Public Shared Function Intersect(lraycast As Line, tol As Single, figure As GLFigureBase) As IEnumerable(Of RayCastHitTest)
  overload: SearchAThing.OpenGL.Core.Ext.Intersect*
  nameWithType.vb: Ext.Intersect(Line, Single, GLFigureBase)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.Line, Single, SearchAThing.OpenGL.Core.GLFigureBase)
  name.vb: Intersect(Line, Single, GLFigureBase)
- uid: SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line},System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line},System.Single)
  id: DistinctPoints(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line},System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: DistinctPoints(IEnumerable<Line>, float)
  nameWithType: Ext.DistinctPoints(IEnumerable<Line>, float)
  fullName: SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.Line>, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: DistinctPoints
    path: src/core/geom/Line.cs
    startLine: 271
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  syntax:
    content: public static IEnumerable<Vector3> DistinctPoints(this IEnumerable<Line> lines, float tol)
    parameters:
    - id: lines
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line}
    - id: tol
      type: System.Single
    return:
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
    content.vb: Public Shared Function DistinctPoints(lines As IEnumerable(Of Line), tol As Single) As IEnumerable(Of Vector3)
  overload: SearchAThing.OpenGL.Core.Ext.DistinctPoints*
  nameWithType.vb: Ext.DistinctPoints(IEnumerable(Of Line), Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.Line), Single)
  name.vb: DistinctPoints(IEnumerable(Of Line), Single)
- uid: SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line},System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line},System.Single)
  id: DistinctPoints(System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line},System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: DistinctPoints(IList<Line>, float)
  nameWithType: Ext.DistinctPoints(IList<Line>, float)
  fullName: SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IList<SearchAThing.OpenGL.Core.Line>, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Line.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: DistinctPoints
    path: src/core/geom/Line.cs
    startLine: 281
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    From the given set of consecutive lines (from,to not required to be adjacent between)

    retrieve the sorted points of the line sequence without duplicates.
  example: []
  syntax:
    content: public static IEnumerable<Vector3> DistinctPoints(this IList<Line> lines, float tol)
    parameters:
    - id: lines
      type: System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line}
      description: Input lines.
    - id: tol
      type: System.Single
      description: Comparision length tolerance.
    return:
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
      description: Sorted lines points.
    content.vb: Public Shared Function DistinctPoints(lines As IList(Of Line), tol As Single) As IEnumerable(Of Vector3)
  overload: SearchAThing.OpenGL.Core.Ext.DistinctPoints*
  nameWithType.vb: Ext.DistinctPoints(IList(Of Line), Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.DistinctPoints(System.Collections.Generic.IList(Of SearchAThing.OpenGL.Core.Line), Single)
  name.vb: DistinctPoints(IList(Of Line), Single)
- uid: SearchAThing.OpenGL.Core.Ext.BaseX(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.BaseX(System.Numerics.Matrix4x4@)
  id: BaseX(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: BaseX(in Matrix4x4)
  nameWithType: Ext.BaseX(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.BaseX(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: BaseX
    path: src/core/geom/Matrix4x4.cs
    startLine: 8
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Extract basex (m1[1..3]) from the given world matrix.
  example: []
  syntax:
    content: public static Vector3 BaseX(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function BaseX(m As Matrix4x4) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.BaseX*
  nameWithType.vb: Ext.BaseX(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.BaseX(System.Numerics.Matrix4x4)
  name.vb: BaseX(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.BaseY(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.BaseY(System.Numerics.Matrix4x4@)
  id: BaseY(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: BaseY(in Matrix4x4)
  nameWithType: Ext.BaseY(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.BaseY(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: BaseY
    path: src/core/geom/Matrix4x4.cs
    startLine: 14
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Extract basey (m2[1..3]) from the given world matrix.
  example: []
  syntax:
    content: public static Vector3 BaseY(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function BaseY(m As Matrix4x4) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.BaseY*
  nameWithType.vb: Ext.BaseY(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.BaseY(System.Numerics.Matrix4x4)
  name.vb: BaseY(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.BaseZ(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.BaseZ(System.Numerics.Matrix4x4@)
  id: BaseZ(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: BaseZ(in Matrix4x4)
  nameWithType: Ext.BaseZ(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.BaseZ(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: BaseZ
    path: src/core/geom/Matrix4x4.cs
    startLine: 20
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Extract basez (m3[1..3]) from the given world matrix.
  example: []
  syntax:
    content: public static Vector3 BaseZ(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function BaseZ(m As Matrix4x4) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.BaseZ*
  nameWithType.vb: Ext.BaseZ(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.BaseZ(System.Numerics.Matrix4x4)
  name.vb: BaseZ(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.Origin(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Origin(System.Numerics.Matrix4x4@)
  id: Origin(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Origin(in Matrix4x4)
  nameWithType: Ext.Origin(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.Origin(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Origin
    path: src/core/geom/Matrix4x4.cs
    startLine: 26
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Extract the origin (m4[1..3]) from the given world matrix.
  example: []
  syntax:
    content: public static Vector3 Origin(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function Origin(m As Matrix4x4) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.Origin*
  nameWithType.vb: Ext.Origin(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Origin(System.Numerics.Matrix4x4)
  name.vb: Origin(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.SetOrigin(System.Numerics.Matrix4x4@,System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetOrigin(System.Numerics.Matrix4x4@,System.Numerics.Vector3@)
  id: SetOrigin(System.Numerics.Matrix4x4@,System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetOrigin(in Matrix4x4, in Vector3)
  nameWithType: Ext.SetOrigin(in Matrix4x4, in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.SetOrigin(in System.Numerics.Matrix4x4, in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetOrigin
    path: src/core/geom/Matrix4x4.cs
    startLine: 35
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new world matrix copy of the given one but with origin set to given one.
  example: []
  syntax:
    content: public static Matrix4x4 SetOrigin(this in Matrix4x4 m, in Vector3 origin)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input world matrix.
    - id: origin
      type: System.Numerics.Vector3
      description: New origin.
    return:
      type: System.Numerics.Matrix4x4
      description: Origin repositioned world matrix.
    content.vb: Public Shared Function SetOrigin(m As Matrix4x4, origin As Vector3) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.SetOrigin*
  nameWithType.vb: Ext.SetOrigin(Matrix4x4, Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetOrigin(System.Numerics.Matrix4x4, System.Numerics.Vector3)
  name.vb: SetOrigin(Matrix4x4, Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4@,System.Nullable{System.Numerics.Vector3}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4@,System.Nullable{System.Numerics.Vector3}@)
  id: Move(System.Numerics.Matrix4x4@,System.Nullable{System.Numerics.Vector3}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Move(in Matrix4x4, in Vector3?)
  nameWithType: Ext.Move(in Matrix4x4, in Vector3?)
  fullName: SearchAThing.OpenGL.Core.Ext.Move(in System.Numerics.Matrix4x4, in System.Numerics.Vector3?)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Move
    path: src/core/geom/Matrix4x4.cs
    startLine: 44
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new world matrix copy of the given one but with origin moved of given delta.
  example: []
  syntax:
    content: public static Matrix4x4 Move(this in Matrix4x4 m, in Vector3? delta = null)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input world matrix.
    - id: delta
      type: System.Nullable{System.Numerics.Vector3}
      description: Delta to apply to the origin.
    return:
      type: System.Numerics.Matrix4x4
      description: Origin moved world matrix.
    content.vb: Public Shared Function Move(m As Matrix4x4, delta As Vector3? = Nothing) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.Move*
  nameWithType.vb: Ext.Move(Matrix4x4, Vector3?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4, System.Numerics.Vector3?)
  name.vb: Move(Matrix4x4, Vector3?)
- uid: SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4@,System.Single,System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4@,System.Single,System.Single,System.Single)
  id: Move(System.Numerics.Matrix4x4@,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Move(in Matrix4x4, float, float, float)
  nameWithType: Ext.Move(in Matrix4x4, float, float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.Move(in System.Numerics.Matrix4x4, float, float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Move
    path: src/core/geom/Matrix4x4.cs
    startLine: 55
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new world matrix copy of the given one but with origin moved of given delta.
  example: []
  syntax:
    content: public static Matrix4x4 Move(this in Matrix4x4 m, float dx, float dy, float dz)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input world matrix.
    - id: dx
      type: System.Single
      description: Delta (x) to apply to the origin.
    - id: dy
      type: System.Single
      description: Delta (y) to apply to the origin.
    - id: dz
      type: System.Single
      description: Delta (z) to apply to the origin.
    return:
      type: System.Numerics.Matrix4x4
      description: Origin moved world matrix.
    content.vb: Public Shared Function Move(m As Matrix4x4, dx As Single, dy As Single, dz As Single) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.Move*
  nameWithType.vb: Ext.Move(Matrix4x4, Single, Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Move(System.Numerics.Matrix4x4, Single, Single, Single)
  name.vb: Move(Matrix4x4, Single, Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.FlipX(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.FlipX(System.Numerics.Matrix4x4@)
  id: FlipX(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: FlipX(in Matrix4x4)
  nameWithType: Ext.FlipX(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.FlipX(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: FlipX
    path: src/core/geom/Matrix4x4.cs
    startLine: 62
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new world matrix copy of the given one but with x flipped ( then also the z ).
  example: []
  syntax:
    content: public static Matrix4x4 FlipX(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input world matrix.
    return:
      type: System.Numerics.Matrix4x4
    content.vb: Public Shared Function FlipX(m As Matrix4x4) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.FlipX*
  nameWithType.vb: Ext.FlipX(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.FlipX(System.Numerics.Matrix4x4)
  name.vb: FlipX(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.FlipY(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.FlipY(System.Numerics.Matrix4x4@)
  id: FlipY(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: FlipY(in Matrix4x4)
  nameWithType: Ext.FlipY(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.FlipY(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: FlipY
    path: src/core/geom/Matrix4x4.cs
    startLine: 69
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new world matrix copy of the given one but with y flipped ( then also the z ).
  example: []
  syntax:
    content: public static Matrix4x4 FlipY(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input world matrix.
    return:
      type: System.Numerics.Matrix4x4
    content.vb: Public Shared Function FlipY(m As Matrix4x4) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.FlipY*
  nameWithType.vb: Ext.FlipY(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.FlipY(System.Numerics.Matrix4x4)
  name.vb: FlipY(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.FlipZ(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.FlipZ(System.Numerics.Matrix4x4@)
  id: FlipZ(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: FlipZ(in Matrix4x4)
  nameWithType: Ext.FlipZ(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.FlipZ(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: FlipZ
    path: src/core/geom/Matrix4x4.cs
    startLine: 76
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a new world matrix copy of the given one but with z flipped ( then also the x ).
  example: []
  syntax:
    content: public static Matrix4x4 FlipZ(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input world matrix.
    return:
      type: System.Numerics.Matrix4x4
    content.vb: Public Shared Function FlipZ(m As Matrix4x4) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.FlipZ*
  nameWithType.vb: Ext.FlipZ(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.FlipZ(System.Numerics.Matrix4x4)
  name.vb: FlipZ(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.Inverse(System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Inverse(System.Numerics.Matrix4x4@)
  id: Inverse(System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Inverse(in Matrix4x4)
  nameWithType: Ext.Inverse(in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.Inverse(in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Inverse
    path: src/core/geom/Matrix4x4.cs
    startLine: 84
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Compute the inverse of the given 4x4 matrix.
  example: []
  syntax:
    content: public static Matrix4x4 Inverse(this in Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input matrix.
    return:
      type: System.Numerics.Matrix4x4
      description: Inverse matrix.
    content.vb: Public Shared Function Inverse(m As Matrix4x4) As Matrix4x4
  overload: SearchAThing.OpenGL.Core.Ext.Inverse*
  nameWithType.vb: Ext.Inverse(Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Inverse(System.Numerics.Matrix4x4)
  name.vb: Inverse(Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Matrix4x4@,System.Int32,System.Int32)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Matrix4x4@,System.Int32,System.Int32)
  id: Fmt(System.Numerics.Matrix4x4@,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Fmt(in Matrix4x4, int, int)
  nameWithType: Ext.Fmt(in Matrix4x4, int, int)
  fullName: SearchAThing.OpenGL.Core.Ext.Fmt(in System.Numerics.Matrix4x4, int, int)
  type: Method
  source:
    remote:
      path: src/core/geom/Matrix4x4.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Fmt
    path: src/core/geom/Matrix4x4.cs
    startLine: 99
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Format to string given matrix.
  example: []
  syntax:
    content: public static string Fmt(this in Matrix4x4 m, int dec, int width = 10)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
      description: Input matrix.
    - id: dec
      type: System.Int32
      description: Decimal places to show in formatted string.
    - id: width
      type: System.Int32
      description: Nr. of characters foreach component.
    return:
      type: System.String
      description: String formatted representation of the matrix.
    content.vb: Public Shared Function Fmt(m As Matrix4x4, dec As Integer, width As Integer = 10) As String
  overload: SearchAThing.OpenGL.Core.Ext.Fmt*
  nameWithType.vb: Ext.Fmt(Matrix4x4, Integer, Integer)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Matrix4x4, Integer, Integer)
  name.vb: Fmt(Matrix4x4, Integer, Integer)
- uid: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Single,System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Single,System.Single,System.Single)
  id: EqualsTol(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: EqualsTol(float, float, float)
  nameWithType: Ext.EqualsTol(float, float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.EqualsTol(float, float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: EqualsTol
    path: src/core/geom/Number.cs
    startLine: 8
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given number equals (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool EqualsTol(this float x, float tol, float y)
    parameters:
    - id: x
      type: System.Single
    - id: tol
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function EqualsTol(x As Single, tol As Single, y As Single) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.EqualsTol*
  nameWithType.vb: Ext.EqualsTol(Single, Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.EqualsTol(Single, Single, Single)
  name.vb: EqualsTol(Single, Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.GreatThanTol(System.Single,System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.GreatThanTol(System.Single,System.Single,System.Single)
  id: GreatThanTol(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: GreatThanTol(float, float, float)
  nameWithType: Ext.GreatThanTol(float, float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.GreatThanTol(float, float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: GreatThanTol
    path: src/core/geom/Number.cs
    startLine: 13
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given number great than (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool GreatThanTol(this float x, float tol, float y)
    parameters:
    - id: x
      type: System.Single
    - id: tol
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GreatThanTol(x As Single, tol As Single, y As Single) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.GreatThanTol*
  nameWithType.vb: Ext.GreatThanTol(Single, Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.GreatThanTol(Single, Single, Single)
  name.vb: GreatThanTol(Single, Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol(System.Single,System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol(System.Single,System.Single,System.Single)
  id: GreatThanOrEqualsTol(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: GreatThanOrEqualsTol(float, float, float)
  nameWithType: Ext.GreatThanOrEqualsTol(float, float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol(float, float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: GreatThanOrEqualsTol
    path: src/core/geom/Number.cs
    startLine: 18
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given number great than or equals (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool GreatThanOrEqualsTol(this float x, float tol, float y)
    parameters:
    - id: x
      type: System.Single
    - id: tol
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function GreatThanOrEqualsTol(x As Single, tol As Single, y As Single) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol*
  nameWithType.vb: Ext.GreatThanOrEqualsTol(Single, Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol(Single, Single, Single)
  name.vb: GreatThanOrEqualsTol(Single, Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.LessThanTol(System.Single,System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.LessThanTol(System.Single,System.Single,System.Single)
  id: LessThanTol(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: LessThanTol(float, float, float)
  nameWithType: Ext.LessThanTol(float, float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.LessThanTol(float, float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: LessThanTol
    path: src/core/geom/Number.cs
    startLine: 23
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given number less than (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool LessThanTol(this float x, float tol, float y)
    parameters:
    - id: x
      type: System.Single
    - id: tol
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function LessThanTol(x As Single, tol As Single, y As Single) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.LessThanTol*
  nameWithType.vb: Ext.LessThanTol(Single, Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.LessThanTol(Single, Single, Single)
  name.vb: LessThanTol(Single, Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol(System.Single,System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol(System.Single,System.Single,System.Single)
  id: LessThanOrEqualsTol(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: LessThanOrEqualsTol(float, float, float)
  nameWithType: Ext.LessThanOrEqualsTol(float, float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol(float, float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: LessThanOrEqualsTol
    path: src/core/geom/Number.cs
    startLine: 28
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given number less than or equals (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool LessThanOrEqualsTol(this float x, float tol, float y)
    parameters:
    - id: x
      type: System.Single
    - id: tol
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function LessThanOrEqualsTol(x As Single, tol As Single, y As Single) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol*
  nameWithType.vb: Ext.LessThanOrEqualsTol(Single, Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol(Single, Single, Single)
  name.vb: LessThanOrEqualsTol(Single, Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector2@,System.Single,System.Nullable{System.Numerics.Vector2}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector2@,System.Single,System.Nullable{System.Numerics.Vector2}@)
  id: EqualsTol(System.Numerics.Vector2@,System.Single,System.Nullable{System.Numerics.Vector2}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: EqualsTol(in Vector2, float, in Vector2?)
  nameWithType: Ext.EqualsTol(in Vector2, float, in Vector2?)
  fullName: SearchAThing.OpenGL.Core.Ext.EqualsTol(in System.Numerics.Vector2, float, in System.Numerics.Vector2?)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: EqualsTol
    path: src/core/geom/Number.cs
    startLine: 33
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given vector2 equals (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool EqualsTol(this in Vector2 v, float tol, in Vector2? other)
    parameters:
    - id: v
      type: System.Numerics.Vector2
    - id: tol
      type: System.Single
    - id: other
      type: System.Nullable{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function EqualsTol(v As Vector2, tol As Single, other As Vector2?) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.EqualsTol*
  nameWithType.vb: Ext.EqualsTol(Vector2, Single, Vector2?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector2, Single, System.Numerics.Vector2?)
  name.vb: EqualsTol(Vector2, Single, Vector2?)
- uid: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector3@,System.Single,System.Nullable{System.Numerics.Vector3}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector3@,System.Single,System.Nullable{System.Numerics.Vector3}@)
  id: EqualsTol(System.Numerics.Vector3@,System.Single,System.Nullable{System.Numerics.Vector3}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: EqualsTol(in Vector3, float, in Vector3?)
  nameWithType: Ext.EqualsTol(in Vector3, float, in Vector3?)
  fullName: SearchAThing.OpenGL.Core.Ext.EqualsTol(in System.Numerics.Vector3, float, in System.Numerics.Vector3?)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: EqualsTol
    path: src/core/geom/Number.cs
    startLine: 46
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given vector3 equals (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool EqualsTol(this in Vector3 v, float tol, in Vector3? other)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    - id: tol
      type: System.Single
    - id: other
      type: System.Nullable{System.Numerics.Vector3}
    return:
      type: System.Boolean
    content.vb: Public Shared Function EqualsTol(v As Vector3, tol As Single, other As Vector3?) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.EqualsTol*
  nameWithType.vb: Ext.EqualsTol(Vector3, Single, Vector3?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector3, Single, System.Numerics.Vector3?)
  name.vb: EqualsTol(Vector3, Single, Vector3?)
- uid: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector4@,System.Single,System.Nullable{System.Numerics.Vector4}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector4@,System.Single,System.Nullable{System.Numerics.Vector4}@)
  id: EqualsTol(System.Numerics.Vector4@,System.Single,System.Nullable{System.Numerics.Vector4}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: EqualsTol(in Vector4, float, in Vector4?)
  nameWithType: Ext.EqualsTol(in Vector4, float, in Vector4?)
  fullName: SearchAThing.OpenGL.Core.Ext.EqualsTol(in System.Numerics.Vector4, float, in System.Numerics.Vector4?)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: EqualsTol
    path: src/core/geom/Number.cs
    startLine: 60
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if given vector4 equals (with tolerance) to the given one.
  example: []
  syntax:
    content: public static bool EqualsTol(this in Vector4 v, float tol, in Vector4? other)
    parameters:
    - id: v
      type: System.Numerics.Vector4
    - id: tol
      type: System.Single
    - id: other
      type: System.Nullable{System.Numerics.Vector4}
    return:
      type: System.Boolean
    content.vb: Public Shared Function EqualsTol(v As Vector4, tol As Single, other As Vector4?) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.EqualsTol*
  nameWithType.vb: Ext.EqualsTol(Vector4, Single, Vector4?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.EqualsTol(System.Numerics.Vector4, Single, System.Numerics.Vector4?)
  name.vb: EqualsTol(Vector4, Single, Vector4?)
- uid: SearchAThing.OpenGL.Core.Ext.Max(System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Max(System.Numerics.Vector3@)
  id: Max(System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Max(in Vector3)
  nameWithType: Ext.Max(in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.Max(in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Max
    path: src/core/geom/Number.cs
    startLine: 75
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve the maxest component between x, y, z of given vector3.
  example: []
  syntax:
    content: public static float Max(this in Vector3 v)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    return:
      type: System.Single
    content.vb: Public Shared Function Max(v As Vector3) As Single
  overload: SearchAThing.OpenGL.Core.Ext.Max*
  nameWithType.vb: Ext.Max(Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Max(System.Numerics.Vector3)
  name.vb: Max(Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.Magnitude(System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Magnitude(System.Single)
  id: Magnitude(System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Magnitude(float)
  nameWithType: Ext.Magnitude(float)
  fullName: SearchAThing.OpenGL.Core.Ext.Magnitude(float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Magnitude
    path: src/core/geom/Number.cs
    startLine: 80
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve the magnitude of given number.
  example: []
  syntax:
    content: public static int Magnitude(this float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function Magnitude(value As Single) As Integer
  overload: SearchAThing.OpenGL.Core.Ext.Magnitude*
  nameWithType.vb: Ext.Magnitude(Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Magnitude(Single)
  name.vb: Magnitude(Single)
- uid: SearchAThing.OpenGL.Core.Ext.MRound(System.Single,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.MRound(System.Single,System.Single)
  id: MRound(System.Single,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: MRound(float, float)
  nameWithType: Ext.MRound(float, float)
  fullName: SearchAThing.OpenGL.Core.Ext.MRound(float, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: MRound
    path: src/core/geom/Number.cs
    startLine: 85
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Round given number using the multiple basis.
  example: []
  syntax:
    content: public static float MRound(this float value, float multiple)
    parameters:
    - id: value
      type: System.Single
    - id: multiple
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function MRound(value As Single, multiple As Single) As Single
  overload: SearchAThing.OpenGL.Core.Ext.MRound*
  nameWithType.vb: Ext.MRound(Single, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.MRound(Single, Single)
  name.vb: MRound(Single, Single)
- uid: SearchAThing.OpenGL.Core.Ext.ToString(System.Single,System.Int32)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToString(System.Single,System.Int32)
  id: ToString(System.Single,System.Int32)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToString(float, int)
  nameWithType: Ext.ToString(float, int)
  fullName: SearchAThing.OpenGL.Core.Ext.ToString(float, int)
  type: Method
  source:
    remote:
      path: src/core/geom/Number.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToString
    path: src/core/geom/Number.cs
    startLine: 87
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  syntax:
    content: public static string ToString(this float d, int significantDigits)
    parameters:
    - id: d
      type: System.Single
    - id: significantDigits
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function ToString(d As Single, significantDigits As Integer) As String
  overload: SearchAThing.OpenGL.Core.Ext.ToString*
  nameWithType.vb: Ext.ToString(Single, Integer)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToString(Single, Integer)
  name.vb: ToString(Single, Integer)
- uid: SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color}@,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color}@,System.Boolean)
  id: GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color}@,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: GetTriangles(Plate, in Color?, bool)
  nameWithType: Ext.GetTriangles(Plate, in Color?, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate, in System.Drawing.Color?, bool)
  type: Method
  source:
    remote:
      path: src/core/geom/Plate.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: GetTriangles
    path: src/core/geom/Plate.cs
    startLine: 77
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Create 2 triangles from given plate.<br />    

    Default normal of generated triangles will be in accord between them having:<br />

    - first triangle (P1, P2, P3)

    - second triangle (P3, P4, P1)
  example: []
  syntax:
    content: public static IEnumerable<GLTriangle> GetTriangles(this Plate plate, in Color? color = null, bool setTextureST = false)
    parameters:
    - id: plate
      type: SearchAThing.OpenGL.Core.Plate
      description: Plate for which create 2 triangles.
    - id: color
      type: System.Nullable{System.Drawing.Color}
      description: Color to apply to created triangles.
    - id: setTextureST
      type: System.Boolean
      description: If true <xref href="SearchAThing.OpenGL.Core.GLVertex.TextureST" data-throw-if-not-resolved="false"></xref> will be set in order to map texture on the plate.
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle}
      description: Two triangles.
    content.vb: Public Shared Function GetTriangles(plate As Plate, color As Color? = Nothing, setTextureST As Boolean = False) As IEnumerable(Of GLTriangle)
  overload: SearchAThing.OpenGL.Core.Ext.GetTriangles*
  nameWithType.vb: Ext.GetTriangles(Plate, Color?, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate, System.Drawing.Color?, Boolean)
  name.vb: GetTriangles(Plate, Color?, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Boolean)
  id: GetTriangles(SearchAThing.OpenGL.Core.Plate,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: GetTriangles(Plate, Color?, Color?, Color?, Color?, bool)
  nameWithType: Ext.GetTriangles(Plate, Color?, Color?, Color?, Color?, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate, System.Drawing.Color?, System.Drawing.Color?, System.Drawing.Color?, System.Drawing.Color?, bool)
  type: Method
  source:
    remote:
      path: src/core/geom/Plate.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: GetTriangles
    path: src/core/geom/Plate.cs
    startLine: 94
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Create 2 triangles from given plate.<br />    

    Default normal of generated triangles will be in accord between them having:<br />

    - first triangle (P1, P2, P3)

    - second triangle (P3, P4, P1)
  example: []
  syntax:
    content: public static IEnumerable<GLTriangle> GetTriangles(this Plate plate, Color? color1, Color? color2, Color? color3, Color? color4, bool setTextureST = false)
    parameters:
    - id: plate
      type: SearchAThing.OpenGL.Core.Plate
      description: Plate for which create 2 triangles.
    - id: color1
      type: System.Nullable{System.Drawing.Color}
      description: (optional) color to apply to vertex1.
    - id: color2
      type: System.Nullable{System.Drawing.Color}
      description: (optional) color to apply to vertex2.
    - id: color3
      type: System.Nullable{System.Drawing.Color}
      description: (optional) color to apply to vertex3.
    - id: color4
      type: System.Nullable{System.Drawing.Color}
      description: (optional) color to apply to vertex4.
    - id: setTextureST
      type: System.Boolean
      description: If true <xref href="SearchAThing.OpenGL.Core.GLVertex.TextureST" data-throw-if-not-resolved="false"></xref> will be set in order to map texture on the plate.
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle}
      description: Two triangles.
    content.vb: Public Shared Function GetTriangles(plate As Plate, color1 As Color?, color2 As Color?, color3 As Color?, color4 As Color?, setTextureST As Boolean = False) As IEnumerable(Of GLTriangle)
  overload: SearchAThing.OpenGL.Core.Ext.GetTriangles*
  nameWithType.vb: Ext.GetTriangles(Plate, Color?, Color?, Color?, Color?, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.GetTriangles(SearchAThing.OpenGL.Core.Plate, System.Drawing.Color?, System.Drawing.Color?, System.Drawing.Color?, System.Drawing.Color?, Boolean)
  name.vb: GetTriangles(Plate, Color?, Color?, Color?, Color?, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.Normalized(System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Normalized(System.Numerics.Vector3@)
  id: Normalized(System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Normalized(in Vector3)
  nameWithType: Ext.Normalized(in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.Normalized(in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Normalized
    path: src/core/geom/Vector3.cs
    startLine: 8
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Normalize given vector.
  example: []
  syntax:
    content: public static Vector3 Normalized(this in Vector3 v)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function Normalized(v As Vector3) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.Normalized*
  nameWithType.vb: Ext.Normalized(Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Normalized(System.Numerics.Vector3)
  name.vb: Normalized(Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.ScaleAbout(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ScaleAbout(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Single)
  id: ScaleAbout(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ScaleAbout(in Vector3, in Vector3, float)
  nameWithType: Ext.ScaleAbout(in Vector3, in Vector3, float)
  fullName: SearchAThing.OpenGL.Core.Ext.ScaleAbout(in System.Numerics.Vector3, in System.Numerics.Vector3, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ScaleAbout
    path: src/core/geom/Vector3.cs
    startLine: 17
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Scale given vector respect given origin by the given scale factor.
  example: []
  syntax:
    content: public static Vector3 ScaleAbout(this in Vector3 v, in Vector3 origin, float factor)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: Vector to scale.
    - id: origin
      type: System.Numerics.Vector3
      description: Reference point.
    - id: factor
      type: System.Single
      description: Scale factor.
    return:
      type: System.Numerics.Vector3
      description: Scaled vector.
    content.vb: Public Shared Function ScaleAbout(v As Vector3, origin As Vector3, factor As Single) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.ScaleAbout*
  nameWithType.vb: Ext.ScaleAbout(Vector3, Vector3, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ScaleAbout(System.Numerics.Vector3, System.Numerics.Vector3, Single)
  name.vb: ScaleAbout(Vector3, Vector3, Single)
- uid: SearchAThing.OpenGL.Core.Ext.Transform(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Transform(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  id: Transform(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Transform(in Vector3, in Matrix4x4)
  nameWithType: Ext.Transform(in Vector3, in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.Transform(in System.Numerics.Vector3, in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Transform
    path: src/core/geom/Vector3.cs
    startLine: 25
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Transform given one within given transformation matrix.
  example: []
  syntax:
    content: public static Vector3 Transform(this in Vector3 v, in Matrix4x4 transform)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: Vector to transform.
    - id: transform
      type: System.Numerics.Matrix4x4
      description: Transformation matrix.
    return:
      type: System.Numerics.Vector3
      description: Transformed vector.
    content.vb: Public Shared Function Transform(v As Vector3, transform As Matrix4x4) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.Transform*
  nameWithType.vb: Ext.Transform(Vector3, Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Transform(System.Numerics.Vector3, System.Numerics.Matrix4x4)
  name.vb: Transform(Vector3, Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.ToUCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToUCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  id: ToUCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToUCS(in Vector3, in Matrix4x4, bool)
  nameWithType: Ext.ToUCS(in Vector3, in Matrix4x4, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.ToUCS(in System.Numerics.Vector3, in System.Numerics.Matrix4x4, bool)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToUCS
    path: src/core/geom/Vector3.cs
    startLine: 34
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Transformation given one from wcs toward the given destination coordinate system.
  example: []
  syntax:
    content: public static Vector3 ToUCS(this in Vector3 v, in Matrix4x4 cs, bool evalCSOrigin = true)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: Vector to transform.
    - id: cs
      type: System.Numerics.Matrix4x4
      description: Destination coordinate system.
    - id: evalCSOrigin
      type: System.Boolean
      description: 'If true the origin of the coordinate system will be evaluated during transformation ( default: true ).'
    return:
      type: System.Numerics.Vector3
      description: ''
    content.vb: Public Shared Function ToUCS(v As Vector3, cs As Matrix4x4, evalCSOrigin As Boolean = True) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.ToUCS*
  nameWithType.vb: Ext.ToUCS(Vector3, Matrix4x4, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToUCS(System.Numerics.Vector3, System.Numerics.Matrix4x4, Boolean)
  name.vb: ToUCS(Vector3, Matrix4x4, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.ToWCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToWCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  id: ToWCS(System.Numerics.Vector3@,System.Numerics.Matrix4x4@,System.Boolean)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToWCS(in Vector3, in Matrix4x4, bool)
  nameWithType: Ext.ToWCS(in Vector3, in Matrix4x4, bool)
  fullName: SearchAThing.OpenGL.Core.Ext.ToWCS(in System.Numerics.Vector3, in System.Numerics.Matrix4x4, bool)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToWCS
    path: src/core/geom/Vector3.cs
    startLine: 50
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Transformation given one from the coordinate system given toward the wcs.
  example: []
  syntax:
    content: public static Vector3 ToWCS(this in Vector3 v, in Matrix4x4 cs, bool evalCSOrigin = true)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: Vector to transform.
    - id: cs
      type: System.Numerics.Matrix4x4
      description: Source coordinate system.
    - id: evalCSOrigin
      type: System.Boolean
      description: 'If true the origin of the coordinate system will be evaluated during transofmration ( default: true ).'
    return:
      type: System.Numerics.Vector3
      description: ''
    content.vb: Public Shared Function ToWCS(v As Vector3, cs As Matrix4x4, evalCSOrigin As Boolean = True) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.ToWCS*
  nameWithType.vb: Ext.ToWCS(Vector3, Matrix4x4, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToWCS(System.Numerics.Vector3, System.Numerics.Matrix4x4, Boolean)
  name.vb: ToWCS(Vector3, Matrix4x4, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3@,System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3@,System.Numerics.Vector3@)
  id: Project(System.Numerics.Vector3@,System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Project(in Vector3, in Vector3)
  nameWithType: Ext.Project(in Vector3, in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.Project(in System.Numerics.Vector3, in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Project
    path: src/core/geom/Vector3.cs
    startLine: 64
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Project this vector to the other given.<br />

    References: https://en.wikipedia.org/wiki/Vector_projection
  example: []
  syntax:
    content: public static Vector3 Project(this in Vector3 v, in Vector3 other)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: Vector to project.
    - id: other
      type: System.Numerics.Vector3
      description: Receiving projection vector.
    return:
      type: System.Numerics.Vector3
      description: Projection point if any on the other vector.
    content.vb: Public Shared Function Project(v As Vector3, other As Vector3) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.Project*
  nameWithType.vb: Ext.Project(Vector3, Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3, System.Numerics.Vector3)
  name.vb: Project(Vector3, Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.IsParallel(System.Numerics.Vector3@,System.Single,System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.IsParallel(System.Numerics.Vector3@,System.Single,System.Numerics.Vector3@)
  id: IsParallel(System.Numerics.Vector3@,System.Single,System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: IsParallel(in Vector3, float, in Vector3)
  nameWithType: Ext.IsParallel(in Vector3, float, in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.IsParallel(in System.Numerics.Vector3, float, in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: IsParallel
    path: src/core/geom/Vector3.cs
    startLine: 80
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if two vectors are parallel.
  example: []
  syntax:
    content: public static bool IsParallel(this in Vector3 v, float tol, in Vector3 other)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: This vector.
    - id: tol
      type: System.Single
      description: Length tolerance (use <xref href="SearchAThing.Sci.Constants.NormalizedLengthTolerance" data-throw-if-not-resolved="false"></xref> for normalized vectors).
    - id: other
      type: System.Numerics.Vector3
      description: Other vector.
    return:
      type: System.Boolean
      description: True if two vectors are parallel.
    content.vb: Public Shared Function IsParallel(v As Vector3, tol As Single, other As Vector3) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.IsParallel*
  nameWithType.vb: Ext.IsParallel(Vector3, Single, Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.IsParallel(System.Numerics.Vector3, Single, System.Numerics.Vector3)
  name.vb: IsParallel(Vector3, Single, Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  id: Project(System.Numerics.Vector3@,System.Numerics.Matrix4x4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Project(in Vector3, in Matrix4x4)
  nameWithType: Ext.Project(in Vector3, in Matrix4x4)
  fullName: SearchAThing.OpenGL.Core.Ext.Project(in System.Numerics.Vector3, in System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Project
    path: src/core/geom/Vector3.cs
    startLine: 89
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Project this vector to given xy plane.
  example: []
  syntax:
    content: public static Vector3? Project(this in Vector3 v, in Matrix4x4 xyPlane)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: Vector to project.
    - id: xyPlane
      type: System.Numerics.Matrix4x4
      description: XY plane which project the vector into.
    return:
      type: System.Nullable{System.Numerics.Vector3}
      description: Projected vector.
    content.vb: Public Shared Function Project(v As Vector3, xyPlane As Matrix4x4) As Vector3?
  overload: SearchAThing.OpenGL.Core.Ext.Project*
  nameWithType.vb: Ext.Project(Vector3, Matrix4x4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Project(System.Numerics.Vector3, System.Numerics.Matrix4x4)
  name.vb: Project(Vector3, Matrix4x4)
- uid: SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3@,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3@,System.Single)
  id: ToString(System.Numerics.Vector3@,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToString(in Vector3, float)
  nameWithType: Ext.ToString(in Vector3, float)
  fullName: SearchAThing.OpenGL.Core.Ext.ToString(in System.Numerics.Vector3, float)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToString
    path: src/core/geom/Vector3.cs
    startLine: 93
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  syntax:
    content: public static string ToString(this in Vector3 v, float tol)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    - id: tol
      type: System.Single
    return:
      type: System.String
    content.vb: Public Shared Function ToString(v As Vector3, tol As Single) As String
  overload: SearchAThing.OpenGL.Core.Ext.ToString*
  nameWithType.vb: Ext.ToString(Vector3, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3, Single)
  name.vb: ToString(Vector3, Single)
- uid: SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3@,System.Int32)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3@,System.Int32)
  id: ToString(System.Numerics.Vector3@,System.Int32)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToString(in Vector3, int)
  nameWithType: Ext.ToString(in Vector3, int)
  fullName: SearchAThing.OpenGL.Core.Ext.ToString(in System.Numerics.Vector3, int)
  type: Method
  source:
    remote:
      path: src/core/geom/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToString
    path: src/core/geom/Vector3.cs
    startLine: 99
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  syntax:
    content: public static string ToString(this in Vector3 v, int digits = 3)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    - id: digits
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function ToString(v As Vector3, digits As Integer = 3) As String
  overload: SearchAThing.OpenGL.Core.Ext.ToString*
  nameWithType.vb: Ext.ToString(Vector3, Integer)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToString(System.Numerics.Vector3, Integer)
  name.vb: ToString(Vector3, Integer)
- uid: SearchAThing.OpenGL.Core.Ext.ToColor(System.Numerics.Vector4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToColor(System.Numerics.Vector4@)
  id: ToColor(System.Numerics.Vector4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToColor(in Vector4)
  nameWithType: Ext.ToColor(in Vector4)
  fullName: SearchAThing.OpenGL.Core.Ext.ToColor(in System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/core/media/Color.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToColor
    path: src/core/media/Color.cs
    startLine: 9
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given vector4 (red, green, blue, alpha) color to <xref href="System.Drawing.Color" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Color ToColor(this in Vector4 rgbaColor)
    parameters:
    - id: rgbaColor
      type: System.Numerics.Vector4
      description: Color encoded in vector4 (range 0..1) as (red, green, blue, alpha).<br />Alpha=1 (full opaque).<br />Alpha=0 (full transparent).
    return:
      type: System.Drawing.Color
    content.vb: Public Shared Function ToColor(rgbaColor As Vector4) As Color
  overload: SearchAThing.OpenGL.Core.Ext.ToColor*
  nameWithType.vb: Ext.ToColor(Vector4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToColor(System.Numerics.Vector4)
  name.vb: ToColor(Vector4)
- uid: SearchAThing.OpenGL.Core.Ext.ToVector4(System.Drawing.Color@,System.Nullable{System.Single})
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToVector4(System.Drawing.Color@,System.Nullable{System.Single})
  id: ToVector4(System.Drawing.Color@,System.Nullable{System.Single})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToVector4(in Color, float?)
  nameWithType: Ext.ToVector4(in Color, float?)
  fullName: SearchAThing.OpenGL.Core.Ext.ToVector4(in System.Drawing.Color, float?)
  type: Method
  source:
    remote:
      path: src/core/media/Color.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToVector4
    path: src/core/media/Color.cs
    startLine: 17
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given <xref href="System.Drawing.Color" data-throw-if-not-resolved="false"></xref> to vector4 (red, green, blue, alpha).
  example: []
  syntax:
    content: public static Vector4 ToVector4(this in Color color, float? alpha = null)
    parameters:
    - id: color
      type: System.Drawing.Color
      description: Color to convert.
    - id: alpha
      type: System.Nullable{System.Single}
      description: (optional) Alpha override.<br />Alpha=1 (full opaque).<br />Alpha=0 (full transparent).<br />If not specified given color alpha will taken.
    return:
      type: System.Numerics.Vector4
    content.vb: Public Shared Function ToVector4(color As Color, alpha As Single? = Nothing) As Vector4
  overload: SearchAThing.OpenGL.Core.Ext.ToVector4*
  nameWithType.vb: Ext.ToVector4(Color, Single?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToVector4(System.Drawing.Color, Single?)
  name.vb: ToVector4(Color, Single?)
- uid: SearchAThing.OpenGL.Core.Ext.ToVector3(System.Drawing.Color@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToVector3(System.Drawing.Color@)
  id: ToVector3(System.Drawing.Color@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToVector3(in Color)
  nameWithType: Ext.ToVector3(in Color)
  fullName: SearchAThing.OpenGL.Core.Ext.ToVector3(in System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/media/Color.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToVector3
    path: src/core/media/Color.cs
    startLine: 27
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given <xref href="System.Drawing.Color" data-throw-if-not-resolved="false"></xref> to vector3 (red, green, blue) discarding alpha information.
  example: []
  syntax:
    content: public static Vector3 ToVector3(this in Color color)
    parameters:
    - id: color
      type: System.Drawing.Color
      description: Color to convert.
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Function ToVector3(color As Color) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.ToVector3*
  nameWithType.vb: Ext.ToVector3(Color)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToVector3(System.Drawing.Color)
  name.vb: ToVector3(Color)
- uid: SearchAThing.OpenGL.Core.Ext.AspectRatio(System.Drawing.Size@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.AspectRatio(System.Drawing.Size@)
  id: AspectRatio(System.Drawing.Size@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: AspectRatio(in Size)
  nameWithType: Ext.AspectRatio(in Size)
  fullName: SearchAThing.OpenGL.Core.Ext.AspectRatio(in System.Drawing.Size)
  type: Method
  source:
    remote:
      path: src/core/media/Screen.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: AspectRatio
    path: src/core/media/Screen.cs
    startLine: 11
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Compute aspect ratio of given <xref href="System.Drawing.Size" data-throw-if-not-resolved="false"></xref> object.<br />
  remarks: If size height is zero returns 1, width / height elsewhere.
  example: []
  syntax:
    content: public static float AspectRatio(this in Size size)
    parameters:
    - id: size
      type: System.Drawing.Size
    return:
      type: System.Single
    content.vb: Public Shared Function AspectRatio(size As Size) As Single
  overload: SearchAThing.OpenGL.Core.Ext.AspectRatio*
  nameWithType.vb: Ext.AspectRatio(Size)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.AspectRatio(System.Drawing.Size)
  name.vb: AspectRatio(Size)
- uid: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint})
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint})
  id: ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToFigure(IEnumerable<GLPoint>)
  nameWithType: Ext.ToFigure(IEnumerable<GLPoint>)
  fullName: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLPoint>)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLPoint.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToFigure
    path: src/core/primitive/GLPoint.cs
    startLine: 108
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create point figure from given point set.
  example: []
  syntax:
    content: public static GLPointFigure ToFigure(this IEnumerable<GLPoint> points)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint}
    return:
      type: SearchAThing.OpenGL.Core.GLPointFigure
    content.vb: Public Shared Function ToFigure(points As IEnumerable(Of GLPoint)) As GLPointFigure
  overload: SearchAThing.OpenGL.Core.Ext.ToFigure*
  nameWithType.vb: Ext.ToFigure(IEnumerable(Of GLPoint))
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLPoint))
  name.vb: ToFigure(IEnumerable(Of GLPoint))
- uid: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{System.Numerics.Vector3})
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{System.Numerics.Vector3})
  id: ToFigure(System.Collections.Generic.IEnumerable{System.Numerics.Vector3})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToFigure(IEnumerable<Vector3>)
  nameWithType: Ext.ToFigure(IEnumerable<Vector3>)
  fullName: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable<System.Numerics.Vector3>)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLPoint.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToFigure
    path: src/core/primitive/GLPoint.cs
    startLine: 113
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create point figure from given point set.
  example: []
  syntax:
    content: public static GLPointFigure ToFigure(this IEnumerable<Vector3> points)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
    return:
      type: SearchAThing.OpenGL.Core.GLPointFigure
    content.vb: Public Shared Function ToFigure(points As IEnumerable(Of Vector3)) As GLPointFigure
  overload: SearchAThing.OpenGL.Core.Ext.ToFigure*
  nameWithType.vb: Ext.ToFigure(IEnumerable(Of Vector3))
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable(Of System.Numerics.Vector3))
  name.vb: ToFigure(IEnumerable(Of Vector3))
- uid: SearchAThing.OpenGL.Core.Ext.SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Drawing.Color@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Drawing.Color@)
  id: SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Drawing.Color@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetColor<T>(IEnumerable<T>, in Color)
  nameWithType: Ext.SetColor<T>(IEnumerable<T>, in Color)
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor<T>(System.Collections.Generic.IEnumerable<T>, in System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLPrimitiveBase.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetColor
    path: src/core/primitive/GLPrimitiveBase.cs
    startLine: 164
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Set the color primitives vertexes.
  example: []
  syntax:
    content: 'public static IEnumerable<T> SetColor<T>(this IEnumerable<T> primitives, in Color color) where T : GLPrimitiveBase'
    parameters:
    - id: primitives
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Gl primitives.
    - id: color
      type: System.Drawing.Color
      description: Color to set on primitives vertexes.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Calling enumerable.
    content.vb: Public Shared Function SetColor(Of T As GLPrimitiveBase)(primitives As IEnumerable(Of T), color As Color) As IEnumerable(Of T)
  overload: SearchAThing.OpenGL.Core.Ext.SetColor*
  nameWithType.vb: Ext.SetColor(Of T)(IEnumerable(Of T), Color)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetColor(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Drawing.Color)
  name.vb: SetColor(Of T)(IEnumerable(Of T), Color)
- uid: SearchAThing.OpenGL.Core.Ext.SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector4@)
  id: SetColor``1(System.Collections.Generic.IEnumerable{``0},System.Numerics.Vector4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetColor<T>(IEnumerable<T>, in Vector4)
  nameWithType: Ext.SetColor<T>(IEnumerable<T>, in Vector4)
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor<T>(System.Collections.Generic.IEnumerable<T>, in System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLPrimitiveBase.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetColor
    path: src/core/primitive/GLPrimitiveBase.cs
    startLine: 173
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Set the color primitives vertexes.
  example: []
  syntax:
    content: 'public static IEnumerable<T> SetColor<T>(this IEnumerable<T> primitives, in Vector4 rgbaColor) where T : GLPrimitiveBase'
    parameters:
    - id: primitives
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Gl primitives.
    - id: rgbaColor
      type: System.Numerics.Vector4
      description: Color to set on primitives vertexes.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Calling enumerable.
    content.vb: Public Shared Function SetColor(Of T As GLPrimitiveBase)(primitives As IEnumerable(Of T), rgbaColor As Vector4) As IEnumerable(Of T)
  overload: SearchAThing.OpenGL.Core.Ext.SetColor*
  nameWithType.vb: Ext.SetColor(Of T)(IEnumerable(Of T), Vector4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetColor(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Numerics.Vector4)
  name.vb: SetColor(Of T)(IEnumerable(Of T), Vector4)
- uid: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle})
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle})
  id: ToFigure(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle})
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToFigure(IEnumerable<GLTriangle>)
  nameWithType: Ext.ToFigure(IEnumerable<GLTriangle>)
  fullName: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLTriangle>)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLTriangle.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToFigure
    path: src/core/primitive/GLTriangle.cs
    startLine: 223
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a gl figure from given gl triangles.
  example: []
  syntax:
    content: public static GLTriangleFigure ToFigure(this IEnumerable<GLTriangle> triangles)
    parameters:
    - id: triangles
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle}
    return:
      type: SearchAThing.OpenGL.Core.GLTriangleFigure
    content.vb: Public Shared Function ToFigure(triangles As IEnumerable(Of GLTriangle)) As GLTriangleFigure
  overload: SearchAThing.OpenGL.Core.Ext.ToFigure*
  nameWithType.vb: Ext.ToFigure(IEnumerable(Of GLTriangle))
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToFigure(System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLTriangle))
  name.vb: ToFigure(IEnumerable(Of GLTriangle))
- uid: SearchAThing.OpenGL.Core.Ext.ToTriangle3D(SearchAThing.OpenGL.Core.GLTriangle)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToTriangle3D(SearchAThing.OpenGL.Core.GLTriangle)
  id: ToTriangle3D(SearchAThing.OpenGL.Core.GLTriangle)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToTriangle3D(GLTriangle)
  nameWithType: Ext.ToTriangle3D(GLTriangle)
  fullName: SearchAThing.OpenGL.Core.Ext.ToTriangle3D(SearchAThing.OpenGL.Core.GLTriangle)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLTriangle.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToTriangle3D
    path: src/core/primitive/GLTriangle.cs
    startLine: 228
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create sci Triangle3D from given gl triangle.
  example: []
  syntax:
    content: public static Triangle3D ToTriangle3D(this GLTriangle tri)
    parameters:
    - id: tri
      type: SearchAThing.OpenGL.Core.GLTriangle
    return:
      type: SearchAThing.Sci.Triangle3D
    content.vb: Public Shared Function ToTriangle3D(tri As GLTriangle) As Triangle3D
  overload: SearchAThing.OpenGL.Core.Ext.ToTriangle3D*
- uid: SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.GLTriangle,System.Single,SearchAThing.OpenGL.Core.GLTriangle,System.Boolean@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.GLTriangle,System.Single,SearchAThing.OpenGL.Core.GLTriangle,System.Boolean@)
  id: Intersect(SearchAThing.OpenGL.Core.GLTriangle,System.Single,SearchAThing.OpenGL.Core.GLTriangle,System.Boolean@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Intersect(GLTriangle, float, GLTriangle, out bool)
  nameWithType: Ext.Intersect(GLTriangle, float, GLTriangle, out bool)
  fullName: SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.GLTriangle, float, SearchAThing.OpenGL.Core.GLTriangle, out bool)
  type: Method
  source:
    remote:
      path: src/core/primitive/GLTriangle.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Intersect
    path: src/core/primitive/GLTriangle.cs
    startLine: 239
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve intersection segment if exists between given two triangles.
  example: []
  syntax:
    content: public static Line? Intersect(this GLTriangle tri1, float tol, GLTriangle tri2, out bool bboxSkipped)
    parameters:
    - id: tri1
      type: SearchAThing.OpenGL.Core.GLTriangle
      description: First triangle.
    - id: tol
      type: System.Single
      description: Length comparision tolerance.
    - id: tri2
      type: SearchAThing.OpenGL.Core.GLTriangle
      description: Second triangle.
    - id: bboxSkipped
      type: System.Boolean
      description: True if intersect test skipped due to non intersecting bboxes.
    return:
      type: SearchAThing.OpenGL.Core.Line
      description: Intersection line between two triangles or null if no intersection exists.
    content.vb: Public Shared Function Intersect(tri1 As GLTriangle, tol As Single, tri2 As GLTriangle, bboxSkipped As Boolean) As Line
  overload: SearchAThing.OpenGL.Core.Ext.Intersect*
  nameWithType.vb: Ext.Intersect(GLTriangle, Single, GLTriangle, Boolean)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Intersect(SearchAThing.OpenGL.Core.GLTriangle, Single, SearchAThing.OpenGL.Core.GLTriangle, Boolean)
  name.vb: Intersect(GLTriangle, Single, GLTriangle, Boolean)
- uid: SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  id: LineV(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: LineV(in Vector3, in Vector3, in Color?)
  nameWithType: Ext.LineV(in Vector3, in Vector3, in Color?)
  fullName: SearchAThing.OpenGL.Core.Ext.LineV(in System.Numerics.Vector3, in System.Numerics.Vector3, in System.Drawing.Color?)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLLine.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: LineV
    path: src/core/primitive/IGLLine.cs
    startLine: 46
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a gl line primitive from given position and vector extension.
  example: []
  syntax:
    content: public static GLLine LineV(this in Vector3 p, in Vector3 v, in Color? color = null)
    parameters:
    - id: p
      type: System.Numerics.Vector3
      description: From position.
    - id: v
      type: System.Numerics.Vector3
      description: Extension vector.
    - id: color
      type: System.Nullable{System.Drawing.Color}
      description: (Optional) from, to line vertexes color.
    return:
      type: SearchAThing.OpenGL.Core.GLLine
    content.vb: Public Shared Function LineV(p As Vector3, v As Vector3, color As Color? = Nothing) As GLLine
  overload: SearchAThing.OpenGL.Core.Ext.LineV*
  nameWithType.vb: Ext.LineV(Vector3, Vector3, Color?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.LineV(System.Numerics.Vector3, System.Numerics.Vector3, System.Drawing.Color?)
  name.vb: LineV(Vector3, Vector3, Color?)
- uid: SearchAThing.OpenGL.Core.Ext.LineTo(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.LineTo(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  id: LineTo(System.Numerics.Vector3@,System.Numerics.Vector3@,System.Nullable{System.Drawing.Color}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: LineTo(in Vector3, in Vector3, in Color?)
  nameWithType: Ext.LineTo(in Vector3, in Vector3, in Color?)
  fullName: SearchAThing.OpenGL.Core.Ext.LineTo(in System.Numerics.Vector3, in System.Numerics.Vector3, in System.Drawing.Color?)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLLine.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: LineTo
    path: src/core/primitive/IGLLine.cs
    startLine: 58
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a gl line primitive from given two points.
  example: []
  syntax:
    content: public static GLLine LineTo(this in Vector3 from, in Vector3 to, in Color? color = null)
    parameters:
    - id: from
      type: System.Numerics.Vector3
      description: From position.
    - id: to
      type: System.Numerics.Vector3
      description: To position.
    - id: color
      type: System.Nullable{System.Drawing.Color}
      description: (Optional) from, to line vertexes color.
    return:
      type: SearchAThing.OpenGL.Core.GLLine
      description: ''
    content.vb: Public Shared Function LineTo(from As Vector3, [to] As Vector3, color As Color? = Nothing) As GLLine
  overload: SearchAThing.OpenGL.Core.Ext.LineTo*
  nameWithType.vb: Ext.LineTo(Vector3, Vector3, Color?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.LineTo(System.Numerics.Vector3, System.Numerics.Vector3, System.Drawing.Color?)
  name.vb: LineTo(Vector3, Vector3, Color?)
- uid: SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line,System.Nullable{System.Drawing.Color}@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line,System.Nullable{System.Drawing.Color}@)
  id: ToGLLine(SearchAThing.OpenGL.Core.Line,System.Nullable{System.Drawing.Color}@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToGLLine(Line, in Color?)
  nameWithType: Ext.ToGLLine(Line, in Color?)
  fullName: SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line, in System.Drawing.Color?)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLLine.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToGLLine
    path: src/core/primitive/IGLLine.cs
    startLine: 69
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a gl line primitive from given line geometry.
  example: []
  syntax:
    content: public static GLLine ToGLLine(this Line line, in Color? color)
    parameters:
    - id: line
      type: SearchAThing.OpenGL.Core.Line
      description: Line geometry.
    - id: color
      type: System.Nullable{System.Drawing.Color}
      description: (Optional) from, to line vertexes color.
    return:
      type: SearchAThing.OpenGL.Core.GLLine
      description: GL line primitive.
    content.vb: Public Shared Function ToGLLine(line As Line, color As Color?) As GLLine
  overload: SearchAThing.OpenGL.Core.Ext.ToGLLine*
  nameWithType.vb: Ext.ToGLLine(Line, Color?)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line, System.Drawing.Color?)
  name.vb: ToGLLine(Line, Color?)
- uid: SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line,System.Drawing.Color@,System.Drawing.Color@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line,System.Drawing.Color@,System.Drawing.Color@)
  id: ToGLLine(SearchAThing.OpenGL.Core.Line,System.Drawing.Color@,System.Drawing.Color@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToGLLine(Line, in Color, in Color)
  nameWithType: Ext.ToGLLine(Line, in Color, in Color)
  fullName: SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line, in System.Drawing.Color, in System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLLine.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToGLLine
    path: src/core/primitive/IGLLine.cs
    startLine: 81
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create a gl line primitive from given line geometry applying given from, to colors.
  example: []
  syntax:
    content: public static GLLine ToGLLine(this Line line, in Color colorFrom, in Color colorTo)
    parameters:
    - id: line
      type: SearchAThing.OpenGL.Core.Line
      description: Line geometry.
    - id: colorFrom
      type: System.Drawing.Color
      description: Color to apply the from vertex.
    - id: colorTo
      type: System.Drawing.Color
      description: Color to apply the to vertex.
    return:
      type: SearchAThing.OpenGL.Core.GLLine
      description: GL line primitive.
    content.vb: Public Shared Function ToGLLine(line As Line, colorFrom As Color, colorTo As Color) As GLLine
  overload: SearchAThing.OpenGL.Core.Ext.ToGLLine*
  nameWithType.vb: Ext.ToGLLine(Line, Color, Color)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToGLLine(SearchAThing.OpenGL.Core.Line, System.Drawing.Color, System.Drawing.Color)
  name.vb: ToGLLine(Line, Color, Color)
- uid: SearchAThing.OpenGL.Core.Ext.AverageColor(SearchAThing.OpenGL.Core.IGLLine)
  commentId: M:SearchAThing.OpenGL.Core.Ext.AverageColor(SearchAThing.OpenGL.Core.IGLLine)
  id: AverageColor(SearchAThing.OpenGL.Core.IGLLine)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: AverageColor(IGLLine)
  nameWithType: Ext.AverageColor(IGLLine)
  fullName: SearchAThing.OpenGL.Core.Ext.AverageColor(SearchAThing.OpenGL.Core.IGLLine)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLLine.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: AverageColor
    path: src/core/primitive/IGLLine.cs
    startLine: 89
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Average color of lines vertexes color.
  example: []
  syntax:
    content: public static Color AverageColor(this IGLLine line)
    parameters:
    - id: line
      type: SearchAThing.OpenGL.Core.IGLLine
    return:
      type: System.Drawing.Color
    content.vb: Public Shared Function AverageColor(line As IGLLine) As Color
  overload: SearchAThing.OpenGL.Core.Ext.AverageColor*
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfLine(SearchAThing.OpenGL.Core.IGLLine)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToDxfLine(SearchAThing.OpenGL.Core.IGLLine)
  id: ToDxfLine(SearchAThing.OpenGL.Core.IGLLine)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToDxfLine(IGLLine)
  nameWithType: Ext.ToDxfLine(IGLLine)
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfLine(SearchAThing.OpenGL.Core.IGLLine)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLLine.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToDxfLine
    path: src/core/primitive/IGLLine.cs
    startLine: 95
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create dxf line from given gl line.
  example: []
  syntax:
    content: public static Line ToDxfLine(this IGLLine line)
    parameters:
    - id: line
      type: SearchAThing.OpenGL.Core.IGLLine
    return:
      type: netDxf.Entities.Line
    content.vb: Public Shared Function ToDxfLine(line As IGLLine) As Line
  overload: SearchAThing.OpenGL.Core.Ext.ToDxfLine*
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfPoint(SearchAThing.OpenGL.Core.IGLPoint)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToDxfPoint(SearchAThing.OpenGL.Core.IGLPoint)
  id: ToDxfPoint(SearchAThing.OpenGL.Core.IGLPoint)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToDxfPoint(IGLPoint)
  nameWithType: Ext.ToDxfPoint(IGLPoint)
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfPoint(SearchAThing.OpenGL.Core.IGLPoint)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLPoint.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToDxfPoint
    path: src/core/primitive/IGLPoint.cs
    startLine: 23
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Create dxf point from given gl point.
  example: []
  syntax:
    content: public static Point ToDxfPoint(this IGLPoint point)
    parameters:
    - id: point
      type: SearchAThing.OpenGL.Core.IGLPoint
    return:
      type: netDxf.Entities.Point
    content.vb: Public Shared Function ToDxfPoint(point As IGLPoint) As Point
  overload: SearchAThing.OpenGL.Core.Ext.ToDxfPoint*
- uid: SearchAThing.OpenGL.Core.Ext.Segments(SearchAThing.OpenGL.Core.IGLTriangle)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Segments(SearchAThing.OpenGL.Core.IGLTriangle)
  id: Segments(SearchAThing.OpenGL.Core.IGLTriangle)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Segments(IGLTriangle)
  nameWithType: Ext.Segments(IGLTriangle)
  fullName: SearchAThing.OpenGL.Core.Ext.Segments(SearchAThing.OpenGL.Core.IGLTriangle)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLTriangle.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Segments
    path: src/core/primitive/IGLTriangle.cs
    startLine: 82
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve gl triangle segments {v1,v2},{v2,v3},{v3,v1} [object].
  example: []
  syntax:
    content: public static IEnumerable<Line> Segments(this IGLTriangle tri)
    parameters:
    - id: tri
      type: SearchAThing.OpenGL.Core.IGLTriangle
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line}
    content.vb: Public Shared Function Segments(tri As IGLTriangle) As IEnumerable(Of Line)
  overload: SearchAThing.OpenGL.Core.Ext.Segments*
- uid: SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests``1(System.Collections.Generic.IEnumerable{``0},System.Double,System.Collections.Generic.IEnumerable{``0},System.Double)
  commentId: M:SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests``1(System.Collections.Generic.IEnumerable{``0},System.Double,System.Collections.Generic.IEnumerable{``0},System.Double)
  id: FeasibleTriIntersectionTests``1(System.Collections.Generic.IEnumerable{``0},System.Double,System.Collections.Generic.IEnumerable{``0},System.Double)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: FeasibleTriIntersectionTests<T>(IEnumerable<T>, double, IEnumerable<T>, double)
  nameWithType: Ext.FeasibleTriIntersectionTests<T>(IEnumerable<T>, double, IEnumerable<T>, double)
  fullName: SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests<T>(System.Collections.Generic.IEnumerable<T>, double, System.Collections.Generic.IEnumerable<T>, double)
  type: Method
  source:
    remote:
      path: src/core/primitive/IGLTriangle.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: FeasibleTriIntersectionTests
    path: src/core/primitive/IGLTriangle.cs
    startLine: 111
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Find feasible triangle pairs that could intersect by evaluating the

    <xref href="SearchAThing.Sci.DiscreteSpace%601" data-throw-if-not-resolved="false"></xref> over this set of triangles

    against the given set of triangles.<br />

    Search will be done using <xref href="SearchAThing.Sci.DiscreteSpace%601.GetItemsAt(SearchAThing.Sci.Vector3D%2cSystem.Double)" data-throw-if-not-resolved="false"></xref> method

    within given margin parameter factor respect the triangle bbox.
  example: []
  syntax:
    content: 'public static IEnumerable<(T tri1, T tri2)> FeasibleTriIntersectionTests<T>(this IEnumerable<T> tris1, double tol, IEnumerable<T> tris2, double margin = 1.2) where T : IGLTriangle'
    parameters:
    - id: tris1
      type: System.Collections.Generic.IEnumerable{{T}}
      description: This triangles.
    - id: tol
      type: System.Double
      description: Intersection test length comparision tolerance.
    - id: tris2
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Other triangles.
    - id: margin
      type: System.Double
      description: Bbox factor (Default:1.2).
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{{T},{T}}}
    content.vb: Public Shared Function FeasibleTriIntersectionTests(Of T As IGLTriangle)(tris1 As IEnumerable(Of T), tol As Double, tris2 As IEnumerable(Of T), margin As Double = 1.2) As IEnumerable(Of (tri1 As T, tri2 As T))
  overload: SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests*
  nameWithType.vb: Ext.FeasibleTriIntersectionTests(Of T)(IEnumerable(Of T), Double, IEnumerable(Of T), Double)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests(Of T)(System.Collections.Generic.IEnumerable(Of T), Double, System.Collections.Generic.IEnumerable(Of T), Double)
  name.vb: FeasibleTriIntersectionTests(Of T)(IEnumerable(Of T), Double, IEnumerable(Of T), Double)
- uid: SearchAThing.OpenGL.Core.Ext.ShortString(SearchAThing.OpenGL.Core.CameraViewType)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ShortString(SearchAThing.OpenGL.Core.CameraViewType)
  id: ShortString(SearchAThing.OpenGL.Core.CameraViewType)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ShortString(CameraViewType)
  nameWithType: Ext.ShortString(CameraViewType)
  fullName: SearchAThing.OpenGL.Core.Ext.ShortString(SearchAThing.OpenGL.Core.CameraViewType)
  type: Method
  source:
    remote:
      path: src/core/render/CameraViewType.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ShortString
    path: src/core/render/CameraViewType.cs
    startLine: 296
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  syntax:
    content: public static string ShortString(this CameraViewType cvt)
    parameters:
    - id: cvt
      type: SearchAThing.OpenGL.Core.CameraViewType
    return:
      type: System.String
    content.vb: Public Shared Function ShortString(cvt As CameraViewType) As String
  overload: SearchAThing.OpenGL.Core.Ext.ShortString*
- uid: SearchAThing.OpenGL.Core.Ext.ToVector2(System.Drawing.Size@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToVector2(System.Drawing.Size@)
  id: ToVector2(System.Drawing.Size@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToVector2(in Size)
  nameWithType: Ext.ToVector2(in Size)
  fullName: SearchAThing.OpenGL.Core.Ext.ToVector2(in System.Drawing.Size)
  type: Method
  source:
    remote:
      path: src/core/render/Ext.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToVector2
    path: src/core/render/Ext.cs
    startLine: 12
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given screen size (width, height) to a vector2 (x, y).
  example: []
  syntax:
    content: public static Vector2 ToVector2(this in Size size)
    parameters:
    - id: size
      type: System.Drawing.Size
    return:
      type: System.Numerics.Vector2
    content.vb: Public Shared Function ToVector2(size As Size) As Vector2
  overload: SearchAThing.OpenGL.Core.Ext.ToVector2*
  nameWithType.vb: Ext.ToVector2(Size)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToVector2(System.Drawing.Size)
  name.vb: ToVector2(Size)
- uid: SearchAThing.OpenGL.Core.Ext.SetAlphaF(System.Drawing.Color@,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetAlphaF(System.Drawing.Color@,System.Single)
  id: SetAlphaF(System.Drawing.Color@,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetAlphaF(in Color, float)
  nameWithType: Ext.SetAlphaF(in Color, float)
  fullName: SearchAThing.OpenGL.Core.Ext.SetAlphaF(in System.Drawing.Color, float)
  type: Method
  source:
    remote:
      path: src/core/render/Ext.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetAlphaF
    path: src/core/render/Ext.cs
    startLine: 23
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Set alpha channel<br />

    Alpha=1 (full opaque).<br />

    Alpha=0 (full transparent).
  example: []
  syntax:
    content: public static Color SetAlphaF(this in Color color, float alpha)
    parameters:
    - id: color
      type: System.Drawing.Color
    - id: alpha
      type: System.Single
    return:
      type: System.Drawing.Color
    content.vb: Public Shared Function SetAlphaF(color As Color, alpha As Single) As Color
  overload: SearchAThing.OpenGL.Core.Ext.SetAlphaF*
  nameWithType.vb: Ext.SetAlphaF(Color, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetAlphaF(System.Drawing.Color, Single)
  name.vb: SetAlphaF(Color, Single)
- uid: SearchAThing.OpenGL.Core.Ext.SaveTo(SkiaSharp.SKBitmap,System.String,SkiaSharp.SKEncodedImageFormat,System.Int32)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SaveTo(SkiaSharp.SKBitmap,System.String,SkiaSharp.SKEncodedImageFormat,System.Int32)
  id: SaveTo(SkiaSharp.SKBitmap,System.String,SkiaSharp.SKEncodedImageFormat,System.Int32)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SaveTo(SKBitmap, string, SKEncodedImageFormat, int)
  nameWithType: Ext.SaveTo(SKBitmap, string, SKEncodedImageFormat, int)
  fullName: SearchAThing.OpenGL.Core.Ext.SaveTo(SkiaSharp.SKBitmap, string, SkiaSharp.SKEncodedImageFormat, int)
  type: Method
  source:
    remote:
      path: src/core/render/Ext.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SaveTo
    path: src/core/render/Ext.cs
    startLine: 33
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Helper method to save skia bitmap to output image file.
  example: []
  syntax:
    content: public static void SaveTo(this SKBitmap bitmap, string outputPathfilename, SKEncodedImageFormat format = SKEncodedImageFormat.Png, int quality = 80)
    parameters:
    - id: bitmap
      type: SkiaSharp.SKBitmap
    - id: outputPathfilename
      type: System.String
    - id: format
      type: SkiaSharp.SKEncodedImageFormat
    - id: quality
      type: System.Int32
    content.vb: Public Shared Sub SaveTo(bitmap As SKBitmap, outputPathfilename As String, format As SKEncodedImageFormat = SKEncodedImageFormat.Png, quality As Integer = 80)
  overload: SearchAThing.OpenGL.Core.Ext.SaveTo*
  nameWithType.vb: Ext.SaveTo(SKBitmap, String, SKEncodedImageFormat, Integer)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SaveTo(SkiaSharp.SKBitmap, String, SkiaSharp.SKEncodedImageFormat, Integer)
  name.vb: SaveTo(SKBitmap, String, SKEncodedImageFormat, Integer)
- uid: SearchAThing.OpenGL.Core.Ext.Describe(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar},System.String)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Describe(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar},System.String)
  id: Describe(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar},System.String)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Describe(IEnumerable<GLFontChar>, string)
  nameWithType: Ext.Describe(IEnumerable<GLFontChar>, string)
  fullName: SearchAThing.OpenGL.Core.Ext.Describe(System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLFontChar>, string)
  type: Method
  source:
    remote:
      path: src/core/render/Ext.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Describe
    path: src/core/render/Ext.cs
    startLine: 53
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    Debugging of <xref href="SearchAThing.OpenGL.Core.GLFontChar" data-throw-if-not-resolved="false"></xref> to xlsx.<br />

    Used in <xref href="SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(System.String%2cSkiaSharp.SKFont)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void Describe(this IEnumerable<GLFontChar> fontChars, string xlsxPathfilename)
    parameters:
    - id: fontChars
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar}
    - id: xlsxPathfilename
      type: System.String
    content.vb: Public Shared Sub Describe(fontChars As IEnumerable(Of GLFontChar), xlsxPathfilename As String)
  overload: SearchAThing.OpenGL.Core.Ext.Describe*
  nameWithType.vb: Ext.Describe(IEnumerable(Of GLFontChar), String)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Describe(System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLFontChar), String)
  name.vb: Describe(IEnumerable(Of GLFontChar), String)
- uid: SearchAThing.OpenGL.Core.Ext.GL(SearchAThing.OpenGL.Core.GLPrimitiveType)
  commentId: M:SearchAThing.OpenGL.Core.Ext.GL(SearchAThing.OpenGL.Core.GLPrimitiveType)
  id: GL(SearchAThing.OpenGL.Core.GLPrimitiveType)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: GL(GLPrimitiveType)
  nameWithType: Ext.GL(GLPrimitiveType)
  fullName: SearchAThing.OpenGL.Core.Ext.GL(SearchAThing.OpenGL.Core.GLPrimitiveType)
  type: Method
  source:
    remote:
      path: src/core/render/Ext.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: GL
    path: src/core/render/Ext.cs
    startLine: 116
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve corresponding Silk.NET gl type from netcore-opengl <xref href="SearchAThing.OpenGL.Core.GLPrimitiveType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static PrimitiveType GL(this GLPrimitiveType type)
    parameters:
    - id: type
      type: SearchAThing.OpenGL.Core.GLPrimitiveType
    return:
      type: Silk.NET.OpenGL.PrimitiveType
    content.vb: Public Shared Function GL(type As GLPrimitiveType) As PrimitiveType
  overload: SearchAThing.OpenGL.Core.Ext.GL*
- uid: SearchAThing.OpenGL.Core.Ext.LoadTexture(SearchAThing.OpenGL.Core.GLModel,System.String)
  commentId: M:SearchAThing.OpenGL.Core.Ext.LoadTexture(SearchAThing.OpenGL.Core.GLModel,System.String)
  id: LoadTexture(SearchAThing.OpenGL.Core.GLModel,System.String)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: LoadTexture(GLModel, string)
  nameWithType: Ext.LoadTexture(GLModel, string)
  fullName: SearchAThing.OpenGL.Core.Ext.LoadTexture(SearchAThing.OpenGL.Core.GLModel, string)
  type: Method
  source:
    remote:
      path: src/core/render/GLTexture2D.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: LoadTexture
    path: src/core/render/GLTexture2D.cs
    startLine: 245
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Load texture from given bitmap pathfilename.
  example: []
  syntax:
    content: public static GLTexture2D LoadTexture(this GLModel model, string pathfilename)
    parameters:
    - id: model
      type: SearchAThing.OpenGL.Core.GLModel
      description: Gl model into which load the texture.
    - id: pathfilename
      type: System.String
      description: Texture bitmap pathfilename.
    return:
      type: SearchAThing.OpenGL.Core.GLTexture2D
      description: Gl texture 2d object.
    content.vb: Public Shared Function LoadTexture(model As GLModel, pathfilename As String) As GLTexture2D
  overload: SearchAThing.OpenGL.Core.Ext.LoadTexture*
  nameWithType.vb: Ext.LoadTexture(GLModel, String)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.LoadTexture(SearchAThing.OpenGL.Core.GLModel, String)
  name.vb: LoadTexture(GLModel, String)
- uid: SearchAThing.OpenGL.Core.Ext.ToFloat(System.Double)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToFloat(System.Double)
  id: ToFloat(System.Double)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToFloat(double)
  nameWithType: Ext.ToFloat(double)
  fullName: SearchAThing.OpenGL.Core.Ext.ToFloat(double)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToFloat
    path: src/core/types/Utils.cs
    startLine: 10
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given double to float ensuring not exceed the float range.
  example: []
  syntax:
    content: public static float ToFloat(this double d)
    parameters:
    - id: d
      type: System.Double
      description: Double which convert to float.
    return:
      type: System.Single
      description: Float of the given double.
    content.vb: Public Shared Function ToFloat(d As Double) As Single
  overload: SearchAThing.OpenGL.Core.Ext.ToFloat*
  nameWithType.vb: Ext.ToFloat(Double)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToFloat(Double)
  name.vb: ToFloat(Double)
- uid: SearchAThing.OpenGL.Core.Ext.ToRGB(System.Drawing.Color)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToRGB(System.Drawing.Color)
  id: ToRGB(System.Drawing.Color)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToRGB(Color)
  nameWithType: Ext.ToRGB(Color)
  fullName: SearchAThing.OpenGL.Core.Ext.ToRGB(System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToRGB
    path: src/core/types/Utils.cs
    startLine: 21
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve ColorHelper RGB color from given system drawing color.
  example: []
  syntax:
    content: public static RGB ToRGB(this Color color)
    parameters:
    - id: color
      type: System.Drawing.Color
    return:
      type: ColorHelper.RGB
    content.vb: Public Shared Function ToRGB(color As Color) As RGB
  overload: SearchAThing.OpenGL.Core.Ext.ToRGB*
- uid: SearchAThing.OpenGL.Core.Ext.ToHSV(System.Drawing.Color)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToHSV(System.Drawing.Color)
  id: ToHSV(System.Drawing.Color)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToHSV(Color)
  nameWithType: Ext.ToHSV(Color)
  fullName: SearchAThing.OpenGL.Core.Ext.ToHSV(System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToHSV
    path: src/core/types/Utils.cs
    startLine: 26
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve ColorHelper HSV color from given system drawing color.
  example: []
  syntax:
    content: public static HSV ToHSV(this Color color)
    parameters:
    - id: color
      type: System.Drawing.Color
    return:
      type: ColorHelper.HSV
    content.vb: Public Shared Function ToHSV(color As Color) As HSV
  overload: SearchAThing.OpenGL.Core.Ext.ToHSV*
- uid: SearchAThing.OpenGL.Core.Ext.ToRGB(ColorHelper.HSV)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToRGB(ColorHelper.HSV)
  id: ToRGB(ColorHelper.HSV)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToRGB(HSV)
  nameWithType: Ext.ToRGB(HSV)
  fullName: SearchAThing.OpenGL.Core.Ext.ToRGB(ColorHelper.HSV)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToRGB
    path: src/core/types/Utils.cs
    startLine: 31
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve ColorHelper RGB color from given ColorHelper HSV color.
  example: []
  syntax:
    content: public static RGB ToRGB(this HSV hsv)
    parameters:
    - id: hsv
      type: ColorHelper.HSV
    return:
      type: ColorHelper.RGB
    content.vb: Public Shared Function ToRGB(hsv As HSV) As RGB
  overload: SearchAThing.OpenGL.Core.Ext.ToRGB*
- uid: SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.RGB)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.RGB)
  id: ToColor(ColorHelper.RGB)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToColor(RGB)
  nameWithType: Ext.ToColor(RGB)
  fullName: SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.RGB)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToColor
    path: src/core/types/Utils.cs
    startLine: 36
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve system drawing color from given ColorHelper RGB color.
  example: []
  syntax:
    content: public static Color ToColor(this RGB rgb)
    parameters:
    - id: rgb
      type: ColorHelper.RGB
    return:
      type: System.Drawing.Color
    content.vb: Public Shared Function ToColor(rgb As RGB) As Color
  overload: SearchAThing.OpenGL.Core.Ext.ToColor*
- uid: SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.HSV)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.HSV)
  id: ToColor(ColorHelper.HSV)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToColor(HSV)
  nameWithType: Ext.ToColor(HSV)
  fullName: SearchAThing.OpenGL.Core.Ext.ToColor(ColorHelper.HSV)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToColor
    path: src/core/types/Utils.cs
    startLine: 41
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve system drawing color from given ColorHelper HSV color.
  example: []
  syntax:
    content: public static Color ToColor(this HSV hsv)
    parameters:
    - id: hsv
      type: ColorHelper.HSV
    return:
      type: System.Drawing.Color
    content.vb: Public Shared Function ToColor(hsv As HSV) As Color
  overload: SearchAThing.OpenGL.Core.Ext.ToColor*
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfColor(System.Drawing.Color)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToDxfColor(System.Drawing.Color)
  id: ToDxfColor(System.Drawing.Color)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToDxfColor(Color)
  nameWithType: Ext.ToDxfColor(Color)
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfColor(System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/types/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToDxfColor
    path: src/core/types/Utils.cs
    startLine: 46
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert system drawing color to dxf color.
  example: []
  syntax:
    content: public static AciColor ToDxfColor(this Color color)
    parameters:
    - id: color
      type: System.Drawing.Color
    return:
      type: netDxf.AciColor
    content.vb: Public Shared Function ToDxfColor(color As Color) As AciColor
  overload: SearchAThing.OpenGL.Core.Ext.ToDxfColor*
- uid: SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Vector3@)
  id: Fmt(System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: Fmt(in Vector3)
  nameWithType: Ext.Fmt(in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.Fmt(in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/types/Vector3.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: Fmt
    path: src/core/types/Vector3.cs
    startLine: 41
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Invariant representation X Y Z
  example: []
  syntax:
    content: public static string Fmt(this in Vector3 v)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    return:
      type: System.String
    content.vb: Public Shared Function Fmt(v As Vector3) As String
  overload: SearchAThing.OpenGL.Core.Ext.Fmt*
  nameWithType.vb: Ext.Fmt(Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.Fmt(System.Numerics.Vector3)
  name.vb: Fmt(Vector3)
- uid: SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Drawing.Color@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Drawing.Color@)
  id: SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Drawing.Color@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetColor(IGLVertex, in Color)
  nameWithType: Ext.SetColor(IGLVertex, in Color)
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex, in System.Drawing.Color)
  type: Method
  source:
    remote:
      path: src/core/vertex/IGLVertex.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetColor
    path: src/core/vertex/IGLVertex.cs
    startLine: 130
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Change the color of the vertex.
  example: []
  syntax:
    content: public static IGLVertex SetColor(this IGLVertex vertex, in Color color)
    parameters:
    - id: vertex
      type: SearchAThing.OpenGL.Core.IGLVertex
      description: Vertex which change the color.
    - id: color
      type: System.Drawing.Color
      description: Color to apply.
    return:
      type: SearchAThing.OpenGL.Core.IGLVertex
    content.vb: Public Shared Function SetColor(vertex As IGLVertex, color As Color) As IGLVertex
  overload: SearchAThing.OpenGL.Core.Ext.SetColor*
  nameWithType.vb: Ext.SetColor(IGLVertex, Color)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex, System.Drawing.Color)
  name.vb: SetColor(IGLVertex, Color)
- uid: SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Numerics.Vector4@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Numerics.Vector4@)
  id: SetColor(SearchAThing.OpenGL.Core.IGLVertex,System.Numerics.Vector4@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: SetColor(IGLVertex, in Vector4)
  nameWithType: Ext.SetColor(IGLVertex, in Vector4)
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex, in System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/core/vertex/IGLVertex.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: SetColor
    path: src/core/vertex/IGLVertex.cs
    startLine: 138
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Change the color of the vertex.
  example: []
  syntax:
    content: public static IGLVertex SetColor(this IGLVertex vertex, in Vector4 rgbaColor)
    parameters:
    - id: vertex
      type: SearchAThing.OpenGL.Core.IGLVertex
      description: Vertex which change the color.
    - id: rgbaColor
      type: System.Numerics.Vector4
      description: Color to apply encoded in vector4 (range 0..1) as (red, green, blue, alpha).<br />Alpha=1 (full opaque).<br />Alpha=0 (full transparent).
    return:
      type: SearchAThing.OpenGL.Core.IGLVertex
    content.vb: Public Shared Function SetColor(vertex As IGLVertex, rgbaColor As Vector4) As IGLVertex
  overload: SearchAThing.OpenGL.Core.Ext.SetColor*
  nameWithType.vb: Ext.SetColor(IGLVertex, Vector4)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.SetColor(SearchAThing.OpenGL.Core.IGLVertex, System.Numerics.Vector4)
  name.vb: SetColor(IGLVertex, Vector4)
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfVector3(SearchAThing.OpenGL.Core.IGLVertex)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToDxfVector3(SearchAThing.OpenGL.Core.IGLVertex)
  id: ToDxfVector3(SearchAThing.OpenGL.Core.IGLVertex)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToDxfVector3(IGLVertex)
  nameWithType: Ext.ToDxfVector3(IGLVertex)
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfVector3(SearchAThing.OpenGL.Core.IGLVertex)
  type: Method
  source:
    remote:
      path: src/core/vertex/IGLVertex.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToDxfVector3
    path: src/core/vertex/IGLVertex.cs
    startLine: 147
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given gl vertex to dxf vector3.
  example: []
  syntax:
    content: public static Vector3 ToDxfVector3(this IGLVertex vertex)
    parameters:
    - id: vertex
      type: SearchAThing.OpenGL.Core.IGLVertex
    return:
      type: netDxf.Vector3
    content.vb: Public Shared Function ToDxfVector3(vertex As IGLVertex) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.ToDxfVector3*
- uid: SearchAThing.OpenGL.Core.Ext.IsAttached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  commentId: M:SearchAThing.OpenGL.Core.Ext.IsAttached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  id: IsAttached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: IsAttached(IGLVertexManagerObject)
  nameWithType: Ext.IsAttached(IGLVertexManagerObject)
  fullName: SearchAThing.OpenGL.Core.Ext.IsAttached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  type: Method
  source:
    remote:
      path: src/core/vertex/IGLVertexManagerObject.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: IsAttached
    path: src/core/vertex/IGLVertexManagerObject.cs
    startLine: 34
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: States if this object is currently attached to a gl vertex manager.
  example: []
  syntax:
    content: public static bool IsAttached(this IGLVertexManagerObject obj)
    parameters:
    - id: obj
      type: SearchAThing.OpenGL.Core.IGLVertexManagerObject
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsAttached(obj As IGLVertexManagerObject) As Boolean
  overload: SearchAThing.OpenGL.Core.Ext.IsAttached*
- uid: SearchAThing.OpenGL.Core.Ext.EnsureDetached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  commentId: M:SearchAThing.OpenGL.Core.Ext.EnsureDetached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  id: EnsureDetached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: EnsureDetached(IGLVertexManagerObject)
  nameWithType: Ext.EnsureDetached(IGLVertexManagerObject)
  fullName: SearchAThing.OpenGL.Core.Ext.EnsureDetached(SearchAThing.OpenGL.Core.IGLVertexManagerObject)
  type: Method
  source:
    remote:
      path: src/core/vertex/IGLVertexManagerObject.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: EnsureDetached
    path: src/core/vertex/IGLVertexManagerObject.cs
    startLine: 41
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Throws an exception if this object isn't detached from any vertex managers.
  example: []
  syntax:
    content: public static void EnsureDetached(this IGLVertexManagerObject obj)
    parameters:
    - id: obj
      type: SearchAThing.OpenGL.Core.IGLVertexManagerObject
    content.vb: Public Shared Sub EnsureDetached(obj As IGLVertexManagerObject)
  overload: SearchAThing.OpenGL.Core.Ext.EnsureDetached*
- uid: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
  id: PositionSignature(System.Numerics.Vector3,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: PositionSignature(Vector3, float)
  nameWithType: Ext.PositionSignature(Vector3, float)
  fullName: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3, float)
  type: Method
  source:
    remote:
      path: src/core/vertex/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: PositionSignature
    path: src/core/vertex/Utils.cs
    startLine: 8
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve vector3 position signature within given tolerance.
  example: []
  syntax:
    content: public static string PositionSignature(this Vector3 position, float tol)
    parameters:
    - id: position
      type: System.Numerics.Vector3
    - id: tol
      type: System.Single
    return:
      type: System.String
    content.vb: Public Shared Function PositionSignature(position As Vector3, tol As Single) As String
  overload: SearchAThing.OpenGL.Core.Ext.PositionSignature*
  nameWithType.vb: Ext.PositionSignature(Vector3, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3, Single)
  name.vb: PositionSignature(Vector3, Single)
- uid: SearchAThing.OpenGL.Core.Ext.PositionSignature(SearchAThing.OpenGL.Core.IGLVertex,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.PositionSignature(SearchAThing.OpenGL.Core.IGLVertex,System.Single)
  id: PositionSignature(SearchAThing.OpenGL.Core.IGLVertex,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: PositionSignature(IGLVertex, float)
  nameWithType: Ext.PositionSignature(IGLVertex, float)
  fullName: SearchAThing.OpenGL.Core.Ext.PositionSignature(SearchAThing.OpenGL.Core.IGLVertex, float)
  type: Method
  source:
    remote:
      path: src/core/vertex/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: PositionSignature
    path: src/core/vertex/Utils.cs
    startLine: 24
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Retrieve vertex position signature within given tolerance.
  example: []
  syntax:
    content: public static string PositionSignature(this IGLVertex glVertex, float tol)
    parameters:
    - id: glVertex
      type: SearchAThing.OpenGL.Core.IGLVertex
    - id: tol
      type: System.Single
    return:
      type: System.String
    content.vb: Public Shared Function PositionSignature(glVertex As IGLVertex, tol As Single) As String
  overload: SearchAThing.OpenGL.Core.Ext.PositionSignature*
  nameWithType.vb: Ext.PositionSignature(IGLVertex, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.PositionSignature(SearchAThing.OpenGL.Core.IGLVertex, Single)
  name.vb: PositionSignature(IGLVertex, Single)
- uid: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(SearchAThing.OpenGL.Core.IGLFigure,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(SearchAThing.OpenGL.Core.IGLFigure,System.Single)
  id: BuildVertexPosDict(SearchAThing.OpenGL.Core.IGLFigure,System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: BuildVertexPosDict(IGLFigure, float)
  nameWithType: Ext.BuildVertexPosDict(IGLFigure, float)
  fullName: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(SearchAThing.OpenGL.Core.IGLFigure, float)
  type: Method
  source:
    remote:
      path: src/core/vertex/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: BuildVertexPosDict
    path: src/core/vertex/Utils.cs
    startLine: 34
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    From given figure create a vertex position based dictionary suitable to be queries through vertex

    <xref href="SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Dictionary<string, List<GLVertex>> BuildVertexPosDict(this IGLFigure figure, float tol)
    parameters:
    - id: figure
      type: SearchAThing.OpenGL.Core.IGLFigure
      description: Gl figure which retrieve vertexes.
    - id: tol
      type: System.Single
      description: Vertex position tolerance to group them.
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{SearchAThing.OpenGL.Core.GLVertex}}
      description: Dictionary gl vertex position signature to list of gl vertexes within that position.
    content.vb: Public Shared Function BuildVertexPosDict(figure As IGLFigure, tol As Single) As Dictionary(Of String, List(Of GLVertex))
  overload: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict*
  nameWithType.vb: Ext.BuildVertexPosDict(IGLFigure, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(SearchAThing.OpenGL.Core.IGLFigure, Single)
  name.vb: BuildVertexPosDict(IGLFigure, Single)
- uid: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure},System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure},System.Single)
  id: BuildVertexPosDict(System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure},System.Single)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: BuildVertexPosDict(IEnumerable<IGLFigure>, float)
  nameWithType: Ext.BuildVertexPosDict(IEnumerable<IGLFigure>, float)
  fullName: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.IGLFigure>, float)
  type: Method
  source:
    remote:
      path: src/core/vertex/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: BuildVertexPosDict
    path: src/core/vertex/Utils.cs
    startLine: 44
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: >-
    From given list of figures create a vertex position based dictionary suitable to be queries through vertex

    <xref href="SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Dictionary<string, List<GLVertex>> BuildVertexPosDict(this IEnumerable<IGLFigure> figures, float tol)
    parameters:
    - id: figures
      type: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure}
      description: Gl figures which retrieve vertexes.
    - id: tol
      type: System.Single
      description: Vertex position tolerance to group them.
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{SearchAThing.OpenGL.Core.GLVertex}}
      description: Dictionary gl vertex position signature to list of gl vertexes within that position.
    content.vb: Public Shared Function BuildVertexPosDict(figures As IEnumerable(Of IGLFigure), tol As Single) As Dictionary(Of String, List(Of GLVertex))
  overload: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict*
  nameWithType.vb: Ext.BuildVertexPosDict(IEnumerable(Of IGLFigure), Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict(System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.IGLFigure), Single)
  name.vb: BuildVertexPosDict(IEnumerable(Of IGLFigure), Single)
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfVector3(System.Numerics.Vector3@)
  commentId: M:SearchAThing.OpenGL.Core.Ext.ToDxfVector3(System.Numerics.Vector3@)
  id: ToDxfVector3(System.Numerics.Vector3@)
  isExtensionMethod: true
  parent: SearchAThing.OpenGL.Core.Ext
  langs:
  - csharp
  - vb
  name: ToDxfVector3(in Vector3)
  nameWithType: Ext.ToDxfVector3(in Vector3)
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfVector3(in System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/core/vertex/Utils.cs
      branch: docs
      repo: git@github.com:devel0/netcore-opengl.git
    id: ToDxfVector3
    path: src/core/vertex/Utils.cs
    startLine: 59
  assemblies:
  - netcore-opengl-core
  namespace: SearchAThing.OpenGL.Core
  summary: Convert given system numerics vector3 to dxf vector3
  example: []
  syntax:
    content: public static Vector3 ToDxfVector3(this in Vector3 v)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    return:
      type: netDxf.Vector3
    content.vb: Public Shared Function ToDxfVector3(v As Vector3) As Vector3
  overload: SearchAThing.OpenGL.Core.Ext.ToDxfVector3*
  nameWithType.vb: Ext.ToDxfVector3(Vector3)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.ToDxfVector3(System.Numerics.Vector3)
  name.vb: ToDxfVector3(Vector3)
references:
- uid: SearchAThing.OpenGL.Core
  commentId: N:SearchAThing.OpenGL.Core
  href: SearchAThing.html
  name: SearchAThing.OpenGL.Core
  nameWithType: SearchAThing.OpenGL.Core
  fullName: SearchAThing.OpenGL.Core
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.OpenGL
    name: OpenGL
    href: SearchAThing.OpenGL.html
  - name: .
  - uid: SearchAThing.OpenGL.Core
    name: Core
    href: SearchAThing.OpenGL.Core.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.OpenGL
    name: OpenGL
    href: SearchAThing.OpenGL.html
  - name: .
  - uid: SearchAThing.OpenGL.Core
    name: Core
    href: SearchAThing.OpenGL.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.OpenGL.Core.Ext.Vertexes*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Vertexes
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Vertexes_SearchAThing_OpenGL_Core_IGLFigure_
  name: Vertexes
  nameWithType: Ext.Vertexes
  fullName: SearchAThing.OpenGL.Core.Ext.Vertexes
- uid: SearchAThing.OpenGL.Core.IGLFigure
  commentId: T:SearchAThing.OpenGL.Core.IGLFigure
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.IGLFigure.html
  name: IGLFigure
  nameWithType: IGLFigure
  fullName: SearchAThing.OpenGL.Core.IGLFigure
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLVertex}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLVertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GLVertex>
  nameWithType: IEnumerable<GLVertex>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLVertex>
  nameWithType.vb: IEnumerable(Of GLVertex)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLVertex)
  name.vb: IEnumerable(Of GLVertex)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLVertex
    name: GLVertex
    href: SearchAThing.OpenGL.Core.GLVertex.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLVertex
    name: GLVertex
    href: SearchAThing.OpenGL.Core.GLVertex.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.OpenGL.Core.Ext.OBBox*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.OBBox
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_OBBox_System_Collections_Generic_IEnumerable_SearchAThing_OpenGL_Core_GLFigureBase__
  name: OBBox
  nameWithType: Ext.OBBox
  fullName: SearchAThing.OpenGL.Core.Ext.OBBox
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFigureBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GLFigureBase>
  nameWithType: IEnumerable<GLFigureBase>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLFigureBase>
  nameWithType.vb: IEnumerable(Of GLFigureBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLFigureBase)
  name.vb: IEnumerable(Of GLFigureBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLFigureBase
    name: GLFigureBase
    href: SearchAThing.OpenGL.Core.GLFigureBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLFigureBase
    name: GLFigureBase
    href: SearchAThing.OpenGL.Core.GLFigureBase.html
  - name: )
- uid: SearchAThing.OpenGL.Core.BBox
  commentId: T:SearchAThing.OpenGL.Core.BBox
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.BBox.html
  name: BBox
  nameWithType: BBox
  fullName: SearchAThing.OpenGL.Core.BBox
- uid: SearchAThing.OpenGL.Core.Ext.Center*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Center
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Center_SearchAThing_OpenGL_Core_IGLFigure_
  name: Center
  nameWithType: Ext.Center
  fullName: SearchAThing.OpenGL.Core.Ext.Center
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: SearchAThing.OpenGL.Core.IGLFigure.ScreenCoordMode
  commentId: P:SearchAThing.OpenGL.Core.IGLFigure.ScreenCoordMode
  parent: SearchAThing.OpenGL.Core.IGLFigure
  href: SearchAThing.OpenGL.Core.IGLFigure.html#SearchAThing_OpenGL_Core_IGLFigure_ScreenCoordMode
  name: ScreenCoordMode
  nameWithType: IGLFigure.ScreenCoordMode
  fullName: SearchAThing.OpenGL.Core.IGLFigure.ScreenCoordMode
- uid: SearchAThing.OpenGL.Core.Ext.SetScreenMode*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SetScreenMode
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SetScreenMode__1___0_System_Boolean_
  name: SetScreenMode
  nameWithType: Ext.SetScreenMode
  fullName: SearchAThing.OpenGL.Core.Ext.SetScreenMode
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.Move*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Move
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Move__1___0_System_Single_System_Single_System_Single_System_Boolean_
  name: Move
  nameWithType: Ext.Move
  fullName: SearchAThing.OpenGL.Core.Ext.Move
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: SearchAThing.OpenGL.Core.IGLFigure.Alpha
  commentId: P:SearchAThing.OpenGL.Core.IGLFigure.Alpha
  parent: SearchAThing.OpenGL.Core.IGLFigure
  href: SearchAThing.OpenGL.Core.IGLFigure.html#SearchAThing_OpenGL_Core_IGLFigure_Alpha
  name: Alpha
  nameWithType: IGLFigure.Alpha
  fullName: SearchAThing.OpenGL.Core.IGLFigure.Alpha
- uid: SearchAThing.OpenGL.Core.Ext.SetAlpha*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SetAlpha
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SetAlpha__1___0_System_Nullable_System_Single__
  name: SetAlpha
  nameWithType: Ext.SetAlpha
  fullName: SearchAThing.OpenGL.Core.Ext.SetAlpha
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.OpenGL.Core.IGLFigure.Order
  commentId: P:SearchAThing.OpenGL.Core.IGLFigure.Order
  parent: SearchAThing.OpenGL.Core.IGLFigure
  href: SearchAThing.OpenGL.Core.IGLFigure.html#SearchAThing_OpenGL_Core_IGLFigure_Order
  name: Order
  nameWithType: IGLFigure.Order
  fullName: SearchAThing.OpenGL.Core.IGLFigure.Order
- uid: SearchAThing.OpenGL.Core.Ext.SetOrder*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SetOrder
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SetOrder__1___0_System_Int32_
  name: SetOrder
  nameWithType: Ext.SetOrder
  fullName: SearchAThing.OpenGL.Core.Ext.SetOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SearchAThing.OpenGL.Core.Ext.SetColor*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SetColor
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SetColor__1___0_System_Drawing_Color__
  name: SetColor
  nameWithType: Ext.SetColor
  fullName: SearchAThing.OpenGL.Core.Ext.SetColor
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: System.Numerics.Vector4
  commentId: T:System.Numerics.Vector4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector4
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: SearchAThing.OpenGL.Core.Ext.MakeFigure*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.MakeFigure
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_MakeFigure_SearchAThing_OpenGL_Core_BBox_System_Nullable_System_Drawing_Color___
  name: MakeFigure
  nameWithType: Ext.MakeFigure
  fullName: SearchAThing.OpenGL.Core.Ext.MakeFigure
- uid: System.Nullable{System.Drawing.Color}
  commentId: T:System.Nullable{System.Drawing.Color}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  name: Color?
  nameWithType: Color?
  fullName: System.Drawing.Color?
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  - name: '?'
  spec.vb:
  - uid: System.Drawing.Color
    name: Color
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing.color
  - name: '?'
- uid: SearchAThing.OpenGL.Core.GLLineFigure
  commentId: T:SearchAThing.OpenGL.Core.GLLineFigure
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLLineFigure.html
  name: GLLineFigure
  nameWithType: GLLineFigure
  fullName: SearchAThing.OpenGL.Core.GLLineFigure
- uid: SearchAThing.OpenGL.Core.Ext.Lines*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Lines
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Lines_SearchAThing_OpenGL_Core_BBox_System_Nullable_System_Drawing_Color__
  name: Lines
  nameWithType: Ext.Lines
  fullName: SearchAThing.OpenGL.Core.Ext.Lines
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLLine}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLLine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GLLine>
  nameWithType: IEnumerable<GLLine>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLLine>
  nameWithType.vb: IEnumerable(Of GLLine)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLLine)
  name.vb: IEnumerable(Of GLLine)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLLine
    name: GLLine
    href: SearchAThing.OpenGL.Core.GLLine.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLLine
    name: GLLine
    href: SearchAThing.OpenGL.Core.GLLine.html
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.Transform*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Transform
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Transform_SearchAThing_OpenGL_Core_Line_System_Numerics_Matrix4x4__
  name: Transform
  nameWithType: Ext.Transform
  fullName: SearchAThing.OpenGL.Core.Ext.Transform
- uid: SearchAThing.OpenGL.Core.Line
  commentId: T:SearchAThing.OpenGL.Core.Line
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.Line.html
  name: Line
  nameWithType: Line
  fullName: SearchAThing.OpenGL.Core.Line
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: SearchAThing.OpenGL.Core.Ext.LineV*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.LineV
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_LineV_System_Numerics_Vector3__System_Numerics_Vector3__
  name: LineV
  nameWithType: Ext.LineV
  fullName: SearchAThing.OpenGL.Core.Ext.LineV
- uid: SearchAThing.OpenGL.Core.Ext.ToLine*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToLine
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToLine_SearchAThing_Sci_Line3D_
  name: ToLine
  nameWithType: Ext.ToLine
  fullName: SearchAThing.OpenGL.Core.Ext.ToLine
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  parent: SearchAThing.Sci
  isExternal: true
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  isExternal: true
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    isExternal: true
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    isExternal: true
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    isExternal: true
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    isExternal: true
- uid: SearchAThing.OpenGL.Core.Ext.ToLine3D*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToLine3D
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToLine3D_SearchAThing_OpenGL_Core_Line_
  name: ToLine3D
  nameWithType: Ext.ToLine3D
  fullName: SearchAThing.OpenGL.Core.Ext.ToLine3D
- uid: SearchAThing.OpenGL.Core.GLControl.RayCastLocal(System.Numerics.Vector2@)
  commentId: M:SearchAThing.OpenGL.Core.GLControl.RayCastLocal(System.Numerics.Vector2@)
  isExternal: true
  href: SearchAThing.OpenGL.Core.GLControl.html#SearchAThing_OpenGL_Core_GLControl_RayCastLocal_System_Numerics_Vector2__
  name: RayCastLocal(in Vector2)
  nameWithType: GLControl.RayCastLocal(in Vector2)
  fullName: SearchAThing.OpenGL.Core.GLControl.RayCastLocal(in System.Numerics.Vector2)
  nameWithType.vb: GLControl.RayCastLocal(Vector2)
  fullName.vb: SearchAThing.OpenGL.Core.GLControl.RayCastLocal(System.Numerics.Vector2)
  name.vb: RayCastLocal(Vector2)
  spec.csharp:
  - uid: SearchAThing.OpenGL.Core.GLControl.RayCastLocal(System.Numerics.Vector2@)
    name: RayCastLocal
    href: SearchAThing.OpenGL.Core.GLControl.html#SearchAThing_OpenGL_Core_GLControl_RayCastLocal_System_Numerics_Vector2__
  - name: (
  - name: in
  - name: " "
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
  spec.vb:
  - uid: SearchAThing.OpenGL.Core.GLControl.RayCastLocal(System.Numerics.Vector2@)
    name: RayCastLocal
    href: SearchAThing.OpenGL.Core.GLControl.html#SearchAThing_OpenGL_Core_GLControl_RayCastLocal_System_Numerics_Vector2__
  - name: (
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.Intersect*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Intersect
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Intersect_SearchAThing_OpenGL_Core_Line_System_Single_SearchAThing_OpenGL_Core_GLFigureBase_
  name: Intersect
  nameWithType: Ext.Intersect
  fullName: SearchAThing.OpenGL.Core.Ext.Intersect
- uid: SearchAThing.OpenGL.Core.GLFigureBase
  commentId: T:SearchAThing.OpenGL.Core.GLFigureBase
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLFigureBase.html
  name: GLFigureBase
  nameWithType: GLFigureBase
  fullName: SearchAThing.OpenGL.Core.GLFigureBase
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.RayCastHitTest}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.RayCastHitTest}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<RayCastHitTest>
  nameWithType: IEnumerable<RayCastHitTest>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.RayCastHitTest>
  nameWithType.vb: IEnumerable(Of RayCastHitTest)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.RayCastHitTest)
  name.vb: IEnumerable(Of RayCastHitTest)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.RayCastHitTest
    name: RayCastHitTest
    href: SearchAThing.OpenGL.Core.RayCastHitTest.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.RayCastHitTest
    name: RayCastHitTest
    href: SearchAThing.OpenGL.Core.RayCastHitTest.html
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.DistinctPoints*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.DistinctPoints
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_DistinctPoints_System_Collections_Generic_IEnumerable_SearchAThing_OpenGL_Core_Line__System_Single_
  name: DistinctPoints
  nameWithType: Ext.DistinctPoints
  fullName: SearchAThing.OpenGL.Core.Ext.DistinctPoints
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.Line}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Line>
  nameWithType: IEnumerable<Line>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.Line>
  nameWithType.vb: IEnumerable(Of Line)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.Line)
  name.vb: IEnumerable(Of Line)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.Line
    name: Line
    href: SearchAThing.OpenGL.Core.Line.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.Line
    name: Line
    href: SearchAThing.OpenGL.Core.Line.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
  commentId: T:System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3>
  nameWithType: IEnumerable<Vector3>
  fullName: System.Collections.Generic.IEnumerable<System.Numerics.Vector3>
  nameWithType.vb: IEnumerable(Of Vector3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Numerics.Vector3)
  name.vb: IEnumerable(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: )
- uid: System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line}
  commentId: T:System.Collections.Generic.IList{SearchAThing.OpenGL.Core.Line}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Line>
  nameWithType: IList<Line>
  fullName: System.Collections.Generic.IList<SearchAThing.OpenGL.Core.Line>
  nameWithType.vb: IList(Of Line)
  fullName.vb: System.Collections.Generic.IList(Of SearchAThing.OpenGL.Core.Line)
  name.vb: IList(Of Line)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.Line
    name: Line
    href: SearchAThing.OpenGL.Core.Line.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.Line
    name: Line
    href: SearchAThing.OpenGL.Core.Line.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.BaseX*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.BaseX
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_BaseX_System_Numerics_Matrix4x4__
  name: BaseX
  nameWithType: Ext.BaseX
  fullName: SearchAThing.OpenGL.Core.Ext.BaseX
- uid: SearchAThing.OpenGL.Core.Ext.BaseY*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.BaseY
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_BaseY_System_Numerics_Matrix4x4__
  name: BaseY
  nameWithType: Ext.BaseY
  fullName: SearchAThing.OpenGL.Core.Ext.BaseY
- uid: SearchAThing.OpenGL.Core.Ext.BaseZ*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.BaseZ
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_BaseZ_System_Numerics_Matrix4x4__
  name: BaseZ
  nameWithType: Ext.BaseZ
  fullName: SearchAThing.OpenGL.Core.Ext.BaseZ
- uid: SearchAThing.OpenGL.Core.Ext.Origin*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Origin
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Origin_System_Numerics_Matrix4x4__
  name: Origin
  nameWithType: Ext.Origin
  fullName: SearchAThing.OpenGL.Core.Ext.Origin
- uid: SearchAThing.OpenGL.Core.Ext.SetOrigin*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SetOrigin
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SetOrigin_System_Numerics_Matrix4x4__System_Numerics_Vector3__
  name: SetOrigin
  nameWithType: Ext.SetOrigin
  fullName: SearchAThing.OpenGL.Core.Ext.SetOrigin
- uid: System.Nullable{System.Numerics.Vector3}
  commentId: T:System.Nullable{System.Numerics.Vector3}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3?
  nameWithType: Vector3?
  fullName: System.Numerics.Vector3?
  spec.csharp:
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: '?'
  spec.vb:
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: '?'
- uid: SearchAThing.OpenGL.Core.Ext.FlipX*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.FlipX
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_FlipX_System_Numerics_Matrix4x4__
  name: FlipX
  nameWithType: Ext.FlipX
  fullName: SearchAThing.OpenGL.Core.Ext.FlipX
- uid: SearchAThing.OpenGL.Core.Ext.FlipY*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.FlipY
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_FlipY_System_Numerics_Matrix4x4__
  name: FlipY
  nameWithType: Ext.FlipY
  fullName: SearchAThing.OpenGL.Core.Ext.FlipY
- uid: SearchAThing.OpenGL.Core.Ext.FlipZ*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.FlipZ
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_FlipZ_System_Numerics_Matrix4x4__
  name: FlipZ
  nameWithType: Ext.FlipZ
  fullName: SearchAThing.OpenGL.Core.Ext.FlipZ
- uid: SearchAThing.OpenGL.Core.Ext.Inverse*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Inverse
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Inverse_System_Numerics_Matrix4x4__
  name: Inverse
  nameWithType: Ext.Inverse
  fullName: SearchAThing.OpenGL.Core.Ext.Inverse
- uid: SearchAThing.OpenGL.Core.Ext.Fmt*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Fmt
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Fmt_System_Numerics_Matrix4x4__System_Int32_System_Int32_
  name: Fmt
  nameWithType: Ext.Fmt
  fullName: SearchAThing.OpenGL.Core.Ext.Fmt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.OpenGL.Core.Ext.EqualsTol*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.EqualsTol
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_EqualsTol_System_Single_System_Single_System_Single_
  name: EqualsTol
  nameWithType: Ext.EqualsTol
  fullName: SearchAThing.OpenGL.Core.Ext.EqualsTol
- uid: SearchAThing.OpenGL.Core.Ext.GreatThanTol*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.GreatThanTol
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_GreatThanTol_System_Single_System_Single_System_Single_
  name: GreatThanTol
  nameWithType: Ext.GreatThanTol
  fullName: SearchAThing.OpenGL.Core.Ext.GreatThanTol
- uid: SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_GreatThanOrEqualsTol_System_Single_System_Single_System_Single_
  name: GreatThanOrEqualsTol
  nameWithType: Ext.GreatThanOrEqualsTol
  fullName: SearchAThing.OpenGL.Core.Ext.GreatThanOrEqualsTol
- uid: SearchAThing.OpenGL.Core.Ext.LessThanTol*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.LessThanTol
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_LessThanTol_System_Single_System_Single_System_Single_
  name: LessThanTol
  nameWithType: Ext.LessThanTol
  fullName: SearchAThing.OpenGL.Core.Ext.LessThanTol
- uid: SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_LessThanOrEqualsTol_System_Single_System_Single_System_Single_
  name: LessThanOrEqualsTol
  nameWithType: Ext.LessThanOrEqualsTol
  fullName: SearchAThing.OpenGL.Core.Ext.LessThanOrEqualsTol
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Nullable{System.Numerics.Vector2}
  commentId: T:System.Nullable{System.Numerics.Vector2}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2?
  nameWithType: Vector2?
  fullName: System.Numerics.Vector2?
  spec.csharp:
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: '?'
  spec.vb:
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: '?'
- uid: System.Nullable{System.Numerics.Vector4}
  commentId: T:System.Nullable{System.Numerics.Vector4}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector4
  name: Vector4?
  nameWithType: Vector4?
  fullName: System.Numerics.Vector4?
  spec.csharp:
  - uid: System.Numerics.Vector4
    name: Vector4
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector4
  - name: '?'
  spec.vb:
  - uid: System.Numerics.Vector4
    name: Vector4
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector4
  - name: '?'
- uid: SearchAThing.OpenGL.Core.Ext.Max*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Max
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Max_System_Numerics_Vector3__
  name: Max
  nameWithType: Ext.Max
  fullName: SearchAThing.OpenGL.Core.Ext.Max
- uid: SearchAThing.OpenGL.Core.Ext.Magnitude*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Magnitude
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Magnitude_System_Single_
  name: Magnitude
  nameWithType: Ext.Magnitude
  fullName: SearchAThing.OpenGL.Core.Ext.Magnitude
- uid: SearchAThing.OpenGL.Core.Ext.MRound*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.MRound
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_MRound_System_Single_System_Single_
  name: MRound
  nameWithType: Ext.MRound
  fullName: SearchAThing.OpenGL.Core.Ext.MRound
- uid: SearchAThing.OpenGL.Core.Ext.ToString*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToString
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToString_System_Single_System_Int32_
  name: ToString
  nameWithType: Ext.ToString
  fullName: SearchAThing.OpenGL.Core.Ext.ToString
- uid: SearchAThing.OpenGL.Core.GLVertex.TextureST
  commentId: P:SearchAThing.OpenGL.Core.GLVertex.TextureST
  href: SearchAThing.OpenGL.Core.GLVertex.html#SearchAThing_OpenGL_Core_GLVertex_TextureST
  name: TextureST
  nameWithType: GLVertex.TextureST
  fullName: SearchAThing.OpenGL.Core.GLVertex.TextureST
- uid: SearchAThing.OpenGL.Core.Ext.GetTriangles*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.GetTriangles
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_GetTriangles_SearchAThing_OpenGL_Core_Plate_System_Nullable_System_Drawing_Color___System_Boolean_
  name: GetTriangles
  nameWithType: Ext.GetTriangles
  fullName: SearchAThing.OpenGL.Core.Ext.GetTriangles
- uid: SearchAThing.OpenGL.Core.Plate
  commentId: T:SearchAThing.OpenGL.Core.Plate
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.Plate.html
  name: Plate
  nameWithType: Plate
  fullName: SearchAThing.OpenGL.Core.Plate
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLTriangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GLTriangle>
  nameWithType: IEnumerable<GLTriangle>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLTriangle>
  nameWithType.vb: IEnumerable(Of GLTriangle)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLTriangle)
  name.vb: IEnumerable(Of GLTriangle)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLTriangle
    name: GLTriangle
    href: SearchAThing.OpenGL.Core.GLTriangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLTriangle
    name: GLTriangle
    href: SearchAThing.OpenGL.Core.GLTriangle.html
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.Normalized*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Normalized
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Normalized_System_Numerics_Vector3__
  name: Normalized
  nameWithType: Ext.Normalized
  fullName: SearchAThing.OpenGL.Core.Ext.Normalized
- uid: SearchAThing.OpenGL.Core.Ext.ScaleAbout*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ScaleAbout
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ScaleAbout_System_Numerics_Vector3__System_Numerics_Vector3__System_Single_
  name: ScaleAbout
  nameWithType: Ext.ScaleAbout
  fullName: SearchAThing.OpenGL.Core.Ext.ScaleAbout
- uid: SearchAThing.OpenGL.Core.Ext.ToUCS*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToUCS
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToUCS_System_Numerics_Vector3__System_Numerics_Matrix4x4__System_Boolean_
  name: ToUCS
  nameWithType: Ext.ToUCS
  fullName: SearchAThing.OpenGL.Core.Ext.ToUCS
- uid: SearchAThing.OpenGL.Core.Ext.ToWCS*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToWCS
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToWCS_System_Numerics_Vector3__System_Numerics_Matrix4x4__System_Boolean_
  name: ToWCS
  nameWithType: Ext.ToWCS
  fullName: SearchAThing.OpenGL.Core.Ext.ToWCS
- uid: SearchAThing.OpenGL.Core.Ext.Project*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Project
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Project_System_Numerics_Vector3__System_Numerics_Vector3__
  name: Project
  nameWithType: Ext.Project
  fullName: SearchAThing.OpenGL.Core.Ext.Project
- uid: SearchAThing.Sci.Constants.NormalizedLengthTolerance
  commentId: F:SearchAThing.Sci.Constants.NormalizedLengthTolerance
  isExternal: true
  name: NormalizedLengthTolerance
  nameWithType: Constants.NormalizedLengthTolerance
  fullName: SearchAThing.Sci.Constants.NormalizedLengthTolerance
- uid: SearchAThing.OpenGL.Core.Ext.IsParallel*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.IsParallel
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_IsParallel_System_Numerics_Vector3__System_Single_System_Numerics_Vector3__
  name: IsParallel
  nameWithType: Ext.IsParallel
  fullName: SearchAThing.OpenGL.Core.Ext.IsParallel
- uid: SearchAThing.OpenGL.Core.Ext.ToColor*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToColor
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToColor_System_Numerics_Vector4__
  name: ToColor
  nameWithType: Ext.ToColor
  fullName: SearchAThing.OpenGL.Core.Ext.ToColor
- uid: SearchAThing.OpenGL.Core.Ext.ToVector4*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToVector4
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToVector4_System_Drawing_Color__System_Nullable_System_Single__
  name: ToVector4
  nameWithType: Ext.ToVector4
  fullName: SearchAThing.OpenGL.Core.Ext.ToVector4
- uid: SearchAThing.OpenGL.Core.Ext.ToVector3*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToVector3
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToVector3_System_Drawing_Color__
  name: ToVector3
  nameWithType: Ext.ToVector3
  fullName: SearchAThing.OpenGL.Core.Ext.ToVector3
- uid: System.Drawing.Size
  commentId: T:System.Drawing.Size
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.size
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: SearchAThing.OpenGL.Core.Ext.AspectRatio*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.AspectRatio
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_AspectRatio_System_Drawing_Size__
  name: AspectRatio
  nameWithType: Ext.AspectRatio
  fullName: SearchAThing.OpenGL.Core.Ext.AspectRatio
- uid: SearchAThing.OpenGL.Core.Ext.ToFigure*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToFigure
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToFigure_System_Collections_Generic_IEnumerable_SearchAThing_OpenGL_Core_GLPoint__
  name: ToFigure
  nameWithType: Ext.ToFigure
  fullName: SearchAThing.OpenGL.Core.Ext.ToFigure
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GLPoint>
  nameWithType: IEnumerable<GLPoint>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLPoint>
  nameWithType.vb: IEnumerable(Of GLPoint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLPoint)
  name.vb: IEnumerable(Of GLPoint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLPoint
    name: GLPoint
    href: SearchAThing.OpenGL.Core.GLPoint.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLPoint
    name: GLPoint
    href: SearchAThing.OpenGL.Core.GLPoint.html
  - name: )
- uid: SearchAThing.OpenGL.Core.GLPointFigure
  commentId: T:SearchAThing.OpenGL.Core.GLPointFigure
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLPointFigure.html
  name: GLPointFigure
  nameWithType: GLPointFigure
  fullName: SearchAThing.OpenGL.Core.GLPointFigure
- uid: SearchAThing.OpenGL.Core.GLTriangleFigure
  commentId: T:SearchAThing.OpenGL.Core.GLTriangleFigure
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLTriangleFigure.html
  name: GLTriangleFigure
  nameWithType: GLTriangleFigure
  fullName: SearchAThing.OpenGL.Core.GLTriangleFigure
- uid: SearchAThing.OpenGL.Core.Ext.ToTriangle3D*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToTriangle3D
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToTriangle3D_SearchAThing_OpenGL_Core_GLTriangle_
  name: ToTriangle3D
  nameWithType: Ext.ToTriangle3D
  fullName: SearchAThing.OpenGL.Core.Ext.ToTriangle3D
- uid: SearchAThing.OpenGL.Core.GLTriangle
  commentId: T:SearchAThing.OpenGL.Core.GLTriangle
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLTriangle.html
  name: GLTriangle
  nameWithType: GLTriangle
  fullName: SearchAThing.OpenGL.Core.GLTriangle
- uid: SearchAThing.Sci.Triangle3D
  commentId: T:SearchAThing.Sci.Triangle3D
  parent: SearchAThing.Sci
  isExternal: true
  name: Triangle3D
  nameWithType: Triangle3D
  fullName: SearchAThing.Sci.Triangle3D
- uid: SearchAThing.OpenGL.Core.GLLine
  commentId: T:SearchAThing.OpenGL.Core.GLLine
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLLine.html
  name: GLLine
  nameWithType: GLLine
  fullName: SearchAThing.OpenGL.Core.GLLine
- uid: SearchAThing.OpenGL.Core.Ext.LineTo*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.LineTo
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_LineTo_System_Numerics_Vector3__System_Numerics_Vector3__System_Nullable_System_Drawing_Color___
  name: LineTo
  nameWithType: Ext.LineTo
  fullName: SearchAThing.OpenGL.Core.Ext.LineTo
- uid: SearchAThing.OpenGL.Core.Ext.ToGLLine*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToGLLine
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToGLLine_SearchAThing_OpenGL_Core_Line_System_Nullable_System_Drawing_Color___
  name: ToGLLine
  nameWithType: Ext.ToGLLine
  fullName: SearchAThing.OpenGL.Core.Ext.ToGLLine
- uid: SearchAThing.OpenGL.Core.Ext.AverageColor*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.AverageColor
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_AverageColor_SearchAThing_OpenGL_Core_IGLLine_
  name: AverageColor
  nameWithType: Ext.AverageColor
  fullName: SearchAThing.OpenGL.Core.Ext.AverageColor
- uid: SearchAThing.OpenGL.Core.IGLLine
  commentId: T:SearchAThing.OpenGL.Core.IGLLine
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.IGLLine.html
  name: IGLLine
  nameWithType: IGLLine
  fullName: SearchAThing.OpenGL.Core.IGLLine
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfLine*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToDxfLine
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToDxfLine_SearchAThing_OpenGL_Core_IGLLine_
  name: ToDxfLine
  nameWithType: Ext.ToDxfLine
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfLine
- uid: netDxf.Entities.Line
  commentId: T:netDxf.Entities.Line
  parent: netDxf.Entities
  isExternal: true
  name: Line
  nameWithType: Line
  fullName: netDxf.Entities.Line
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfPoint*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToDxfPoint
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToDxfPoint_SearchAThing_OpenGL_Core_IGLPoint_
  name: ToDxfPoint
  nameWithType: Ext.ToDxfPoint
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfPoint
- uid: SearchAThing.OpenGL.Core.IGLPoint
  commentId: T:SearchAThing.OpenGL.Core.IGLPoint
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.IGLPoint.html
  name: IGLPoint
  nameWithType: IGLPoint
  fullName: SearchAThing.OpenGL.Core.IGLPoint
- uid: netDxf.Entities.Point
  commentId: T:netDxf.Entities.Point
  parent: netDxf.Entities
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: netDxf.Entities.Point
- uid: SearchAThing.OpenGL.Core.Ext.Segments*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Segments
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Segments_SearchAThing_OpenGL_Core_IGLTriangle_
  name: Segments
  nameWithType: Ext.Segments
  fullName: SearchAThing.OpenGL.Core.Ext.Segments
- uid: SearchAThing.OpenGL.Core.IGLTriangle
  commentId: T:SearchAThing.OpenGL.Core.IGLTriangle
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.IGLTriangle.html
  name: IGLTriangle
  nameWithType: IGLTriangle
  fullName: SearchAThing.OpenGL.Core.IGLTriangle
- uid: SearchAThing.Sci.DiscreteSpace`1
  commentId: T:SearchAThing.Sci.DiscreteSpace`1
  isExternal: true
  name: DiscreteSpace<T>
  nameWithType: DiscreteSpace<T>
  fullName: SearchAThing.Sci.DiscreteSpace<T>
  nameWithType.vb: DiscreteSpace(Of T)
  fullName.vb: SearchAThing.Sci.DiscreteSpace(Of T)
  name.vb: DiscreteSpace(Of T)
  spec.csharp:
  - uid: SearchAThing.Sci.DiscreteSpace`1
    name: DiscreteSpace
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SearchAThing.Sci.DiscreteSpace`1
    name: DiscreteSpace
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.Sci.DiscreteSpace`1.GetItemsAt(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.DiscreteSpace`1.GetItemsAt(SearchAThing.Sci.Vector3D,System.Double)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: GetItemsAt(Vector3D, double)
  nameWithType: DiscreteSpace<T>.GetItemsAt(Vector3D, double)
  fullName: SearchAThing.Sci.DiscreteSpace<T>.GetItemsAt(SearchAThing.Sci.Vector3D, double)
  nameWithType.vb: DiscreteSpace(Of T).GetItemsAt(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.DiscreteSpace(Of T).GetItemsAt(SearchAThing.Sci.Vector3D, Double)
  name.vb: GetItemsAt(Vector3D, Double)
  spec.csharp:
  - uid: SearchAThing.Sci.DiscreteSpace`1.GetItemsAt(SearchAThing.Sci.Vector3D,System.Double)
    name: GetItemsAt
    isExternal: true
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.DiscreteSpace`1.GetItemsAt(SearchAThing.Sci.Vector3D,System.Double)
    name: GetItemsAt
    isExternal: true
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_FeasibleTriIntersectionTests__1_System_Collections_Generic_IEnumerable___0__System_Double_System_Collections_Generic_IEnumerable___0__System_Double_
  name: FeasibleTriIntersectionTests
  nameWithType: Ext.FeasibleTriIntersectionTests
  fullName: SearchAThing.OpenGL.Core.Ext.FeasibleTriIntersectionTests
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{{T},{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(T tri1, T tri2)>
  nameWithType: IEnumerable<(T tri1, T tri2)>
  fullName: System.Collections.Generic.IEnumerable<(T tri1, T tri2)>
  nameWithType.vb: IEnumerable(Of (tri1 As T, tri2 As T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (tri1 As T, tri2 As T))
  name.vb: IEnumerable(Of (tri1 As T, tri2 As T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - name: T
  - name: " "
  - uid: System.ValueTuple{``0,``0}.tri1
    name: tri1
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,--0-.tri1
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{``0,``0}.tri2
    name: tri2
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,--0-.tri2
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{``0,``0}.tri1
    name: tri1
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,--0-.tri1
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,``0}.tri2
    name: tri2
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,--0-.tri2
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.ShortString*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ShortString
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ShortString_SearchAThing_OpenGL_Core_CameraViewType_
  name: ShortString
  nameWithType: Ext.ShortString
  fullName: SearchAThing.OpenGL.Core.Ext.ShortString
- uid: SearchAThing.OpenGL.Core.CameraViewType
  commentId: T:SearchAThing.OpenGL.Core.CameraViewType
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.CameraViewType.html
  name: CameraViewType
  nameWithType: CameraViewType
  fullName: SearchAThing.OpenGL.Core.CameraViewType
- uid: SearchAThing.OpenGL.Core.Ext.ToVector2*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToVector2
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToVector2_System_Drawing_Size__
  name: ToVector2
  nameWithType: Ext.ToVector2
  fullName: SearchAThing.OpenGL.Core.Ext.ToVector2
- uid: SearchAThing.OpenGL.Core.Ext.SetAlphaF*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SetAlphaF
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SetAlphaF_System_Drawing_Color__System_Single_
  name: SetAlphaF
  nameWithType: Ext.SetAlphaF
  fullName: SearchAThing.OpenGL.Core.Ext.SetAlphaF
- uid: SearchAThing.OpenGL.Core.Ext.SaveTo*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.SaveTo
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_SaveTo_SkiaSharp_SKBitmap_System_String_SkiaSharp_SKEncodedImageFormat_System_Int32_
  name: SaveTo
  nameWithType: Ext.SaveTo
  fullName: SearchAThing.OpenGL.Core.Ext.SaveTo
- uid: SkiaSharp.SKBitmap
  commentId: T:SkiaSharp.SKBitmap
  parent: SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp.skbitmap
  name: SKBitmap
  nameWithType: SKBitmap
  fullName: SkiaSharp.SKBitmap
- uid: SkiaSharp.SKEncodedImageFormat
  commentId: T:SkiaSharp.SKEncodedImageFormat
  parent: SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp.skencodedimageformat
  name: SKEncodedImageFormat
  nameWithType: SKEncodedImageFormat
  fullName: SkiaSharp.SKEncodedImageFormat
- uid: SkiaSharp
  commentId: N:SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp
  name: SkiaSharp
  nameWithType: SkiaSharp
  fullName: SkiaSharp
- uid: SearchAThing.OpenGL.Core.GLFontChar
  commentId: T:SearchAThing.OpenGL.Core.GLFontChar
  href: SearchAThing.OpenGL.Core.GLFontChar.html
  name: GLFontChar
  nameWithType: GLFontChar
  fullName: SearchAThing.OpenGL.Core.GLFontChar
- uid: SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(System.String,SkiaSharp.SKFont)
  commentId: M:SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(System.String,SkiaSharp.SKFont)
  isExternal: true
  href: SearchAThing.OpenGL.Core.GLFontCharManager.html#SearchAThing_OpenGL_Core_GLFontCharManager_GetFontChars_System_String_SkiaSharp_SKFont_
  name: GetFontChars(string, SKFont)
  nameWithType: GLFontCharManager.GetFontChars(string, SKFont)
  fullName: SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(string, SkiaSharp.SKFont)
  nameWithType.vb: GLFontCharManager.GetFontChars(String, SKFont)
  fullName.vb: SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(String, SkiaSharp.SKFont)
  name.vb: GetFontChars(String, SKFont)
  spec.csharp:
  - uid: SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(System.String,SkiaSharp.SKFont)
    name: GetFontChars
    href: SearchAThing.OpenGL.Core.GLFontCharManager.html#SearchAThing_OpenGL_Core_GLFontCharManager_GetFontChars_System_String_SkiaSharp_SKFont_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SkiaSharp.SKFont
    name: SKFont
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/skiasharp.skfont
  - name: )
  spec.vb:
  - uid: SearchAThing.OpenGL.Core.GLFontCharManager.GetFontChars(System.String,SkiaSharp.SKFont)
    name: GetFontChars
    href: SearchAThing.OpenGL.Core.GLFontCharManager.html#SearchAThing_OpenGL_Core_GLFontCharManager_GetFontChars_System_String_SkiaSharp_SKFont_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SkiaSharp.SKFont
    name: SKFont
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/skiasharp.skfont
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.Describe*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.Describe
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_Describe_System_Collections_Generic_IEnumerable_SearchAThing_OpenGL_Core_GLFontChar__System_String_
  name: Describe
  nameWithType: Ext.Describe
  fullName: SearchAThing.OpenGL.Core.Ext.Describe
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.GLFontChar}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GLFontChar>
  nameWithType: IEnumerable<GLFontChar>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.GLFontChar>
  nameWithType.vb: IEnumerable(Of GLFontChar)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.GLFontChar)
  name.vb: IEnumerable(Of GLFontChar)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLFontChar
    name: GLFontChar
    href: SearchAThing.OpenGL.Core.GLFontChar.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLFontChar
    name: GLFontChar
    href: SearchAThing.OpenGL.Core.GLFontChar.html
  - name: )
- uid: SearchAThing.OpenGL.Core.GLPrimitiveType
  commentId: T:SearchAThing.OpenGL.Core.GLPrimitiveType
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLPrimitiveType.html
  name: GLPrimitiveType
  nameWithType: GLPrimitiveType
  fullName: SearchAThing.OpenGL.Core.GLPrimitiveType
- uid: SearchAThing.OpenGL.Core.Ext.GL*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.GL
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_GL_SearchAThing_OpenGL_Core_GLPrimitiveType_
  name: GL
  nameWithType: Ext.GL
  fullName: SearchAThing.OpenGL.Core.Ext.GL
- uid: Silk.NET.OpenGL.PrimitiveType
  commentId: T:Silk.NET.OpenGL.PrimitiveType
  parent: Silk.NET.OpenGL
  isExternal: true
  name: PrimitiveType
  nameWithType: PrimitiveType
  fullName: Silk.NET.OpenGL.PrimitiveType
- uid: Silk.NET.OpenGL
  commentId: N:Silk.NET.OpenGL
  isExternal: true
  name: Silk.NET.OpenGL
  nameWithType: Silk.NET.OpenGL
  fullName: Silk.NET.OpenGL
  spec.csharp:
  - uid: Silk
    name: Silk
    isExternal: true
  - name: .
  - uid: Silk.NET
    name: NET
    isExternal: true
  - name: .
  - uid: Silk.NET.OpenGL
    name: OpenGL
    isExternal: true
  spec.vb:
  - uid: Silk
    name: Silk
    isExternal: true
  - name: .
  - uid: Silk.NET
    name: NET
    isExternal: true
  - name: .
  - uid: Silk.NET.OpenGL
    name: OpenGL
    isExternal: true
- uid: SearchAThing.OpenGL.Core.Ext.LoadTexture*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.LoadTexture
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_LoadTexture_SearchAThing_OpenGL_Core_GLModel_System_String_
  name: LoadTexture
  nameWithType: Ext.LoadTexture
  fullName: SearchAThing.OpenGL.Core.Ext.LoadTexture
- uid: SearchAThing.OpenGL.Core.GLModel
  commentId: T:SearchAThing.OpenGL.Core.GLModel
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLModel.html
  name: GLModel
  nameWithType: GLModel
  fullName: SearchAThing.OpenGL.Core.GLModel
- uid: SearchAThing.OpenGL.Core.GLTexture2D
  commentId: T:SearchAThing.OpenGL.Core.GLTexture2D
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.GLTexture2D.html
  name: GLTexture2D
  nameWithType: GLTexture2D
  fullName: SearchAThing.OpenGL.Core.GLTexture2D
- uid: SearchAThing.OpenGL.Core.Ext.ToFloat*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToFloat
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToFloat_System_Double_
  name: ToFloat
  nameWithType: Ext.ToFloat
  fullName: SearchAThing.OpenGL.Core.Ext.ToFloat
- uid: SearchAThing.OpenGL.Core.Ext.ToRGB*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToRGB
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToRGB_System_Drawing_Color_
  name: ToRGB
  nameWithType: Ext.ToRGB
  fullName: SearchAThing.OpenGL.Core.Ext.ToRGB
- uid: ColorHelper.RGB
  commentId: T:ColorHelper.RGB
  parent: ColorHelper
  isExternal: true
  name: RGB
  nameWithType: RGB
  fullName: ColorHelper.RGB
- uid: ColorHelper
  commentId: N:ColorHelper
  isExternal: true
  name: ColorHelper
  nameWithType: ColorHelper
  fullName: ColorHelper
- uid: SearchAThing.OpenGL.Core.Ext.ToHSV*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToHSV
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToHSV_System_Drawing_Color_
  name: ToHSV
  nameWithType: Ext.ToHSV
  fullName: SearchAThing.OpenGL.Core.Ext.ToHSV
- uid: ColorHelper.HSV
  commentId: T:ColorHelper.HSV
  parent: ColorHelper
  isExternal: true
  name: HSV
  nameWithType: HSV
  fullName: ColorHelper.HSV
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfColor*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToDxfColor
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToDxfColor_System_Drawing_Color_
  name: ToDxfColor
  nameWithType: Ext.ToDxfColor
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfColor
- uid: netDxf.AciColor
  commentId: T:netDxf.AciColor
  parent: netDxf
  isExternal: true
  name: AciColor
  nameWithType: AciColor
  fullName: netDxf.AciColor
- uid: netDxf
  commentId: N:netDxf
  isExternal: true
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: SearchAThing.OpenGL.Core.IGLVertex
  commentId: T:SearchAThing.OpenGL.Core.IGLVertex
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.IGLVertex.html
  name: IGLVertex
  nameWithType: IGLVertex
  fullName: SearchAThing.OpenGL.Core.IGLVertex
- uid: SearchAThing.OpenGL.Core.Ext.ToDxfVector3*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.ToDxfVector3
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_ToDxfVector3_SearchAThing_OpenGL_Core_IGLVertex_
  name: ToDxfVector3
  nameWithType: Ext.ToDxfVector3
  fullName: SearchAThing.OpenGL.Core.Ext.ToDxfVector3
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: SearchAThing.OpenGL.Core.Ext.IsAttached*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.IsAttached
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_IsAttached_SearchAThing_OpenGL_Core_IGLVertexManagerObject_
  name: IsAttached
  nameWithType: Ext.IsAttached
  fullName: SearchAThing.OpenGL.Core.Ext.IsAttached
- uid: SearchAThing.OpenGL.Core.IGLVertexManagerObject
  commentId: T:SearchAThing.OpenGL.Core.IGLVertexManagerObject
  parent: SearchAThing.OpenGL.Core
  href: SearchAThing.OpenGL.Core.IGLVertexManagerObject.html
  name: IGLVertexManagerObject
  nameWithType: IGLVertexManagerObject
  fullName: SearchAThing.OpenGL.Core.IGLVertexManagerObject
- uid: SearchAThing.OpenGL.Core.Ext.EnsureDetached*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.EnsureDetached
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_EnsureDetached_SearchAThing_OpenGL_Core_IGLVertexManagerObject_
  name: EnsureDetached
  nameWithType: Ext.EnsureDetached
  fullName: SearchAThing.OpenGL.Core.Ext.EnsureDetached
- uid: SearchAThing.OpenGL.Core.Ext.PositionSignature*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.PositionSignature
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_PositionSignature_System_Numerics_Vector3_System_Single_
  name: PositionSignature
  nameWithType: Ext.PositionSignature
  fullName: SearchAThing.OpenGL.Core.Ext.PositionSignature
- uid: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
  commentId: M:SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
  isExternal: true
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_PositionSignature_System_Numerics_Vector3_System_Single_
  name: PositionSignature(Vector3, float)
  nameWithType: Ext.PositionSignature(Vector3, float)
  fullName: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3, float)
  nameWithType.vb: Ext.PositionSignature(Vector3, Single)
  fullName.vb: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3, Single)
  name.vb: PositionSignature(Vector3, Single)
  spec.csharp:
  - uid: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
    name: PositionSignature
    href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_PositionSignature_System_Numerics_Vector3_System_Single_
  - name: (
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: SearchAThing.OpenGL.Core.Ext.PositionSignature(System.Numerics.Vector3,System.Single)
    name: PositionSignature
    href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_PositionSignature_System_Numerics_Vector3_System_Single_
  - name: (
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict*
  commentId: Overload:SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict
  href: SearchAThing.OpenGL.Core.Ext.html#SearchAThing_OpenGL_Core_Ext_BuildVertexPosDict_SearchAThing_OpenGL_Core_IGLFigure_System_Single_
  name: BuildVertexPosDict
  nameWithType: Ext.BuildVertexPosDict
  fullName: SearchAThing.OpenGL.Core.Ext.BuildVertexPosDict
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{SearchAThing.OpenGL.Core.GLVertex}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{SearchAThing.OpenGL.Core.GLVertex}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, List<GLVertex>>
  nameWithType: Dictionary<string, List<GLVertex>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<SearchAThing.OpenGL.Core.GLVertex>>
  nameWithType.vb: Dictionary(Of String, List(Of GLVertex))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of SearchAThing.OpenGL.Core.GLVertex))
  name.vb: Dictionary(Of String, List(Of GLVertex))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.GLVertex
    name: GLVertex
    href: SearchAThing.OpenGL.Core.GLVertex.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.GLVertex
    name: GLVertex
    href: SearchAThing.OpenGL.Core.GLVertex.html
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.OpenGL.Core.IGLFigure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IGLFigure>
  nameWithType: IEnumerable<IGLFigure>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.OpenGL.Core.IGLFigure>
  nameWithType.vb: IEnumerable(Of IGLFigure)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.OpenGL.Core.IGLFigure)
  name.vb: IEnumerable(Of IGLFigure)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.OpenGL.Core.IGLFigure
    name: IGLFigure
    href: SearchAThing.OpenGL.Core.IGLFigure.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.OpenGL.Core.IGLFigure
    name: IGLFigure
    href: SearchAThing.OpenGL.Core.IGLFigure.html
  - name: )
