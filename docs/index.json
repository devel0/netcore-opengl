{
  "README.html": {
    "href": "README.html",
    "title": "netcore-opengl | netcore-opengl",
    "keywords": "netcore-opengl .NET core opengl API Documentation Changelog Introduction Quickstart Build solution Examples Running examples from console Running examples from vscode List of examples Development key notes Coordinate spaces GL Dev inspect tool Primitives, figures interaction Selection and coord identify Removal SimpleCmd Change rotation center Send notification View invalidation model Opengl debugging tools Multiplatform Docker (mesa) Software rendered (mesa) C# global usings (full) Gestures Mouse gestures Keybindings Unit tests How this project was built Documentation (github pages) Build and view locally Build and commit into docs branch References Introduction netcore-opengl library provides a multiplatform framework for 3D rendering, visualization and interactions. The library is composed by following modules: module framework dependencies description core NET Standard 2.0 netcore-ext, netcore-sci, System.Drawing.Common, Silk.NET, Magick.NET, SkiaSharp.HarfBuzz, netdxf-devel0 gl calculations, render abstraction over Silk.NET opengl library. gui NET Standard 2.0 core, Avalonia, netcore-desktop desktop gl widget shapes NET Standard 2.0 core box, cone, sphere, arrow shapes nurbs NET Standard 2.0 core, G-Shark nurbs figures Quickstart dotnet new console --use-program-main -n sample cd sample dotnet add package netcore-opengl-gui dotnet add package netcore-opengl-shapes code . # accept to install vscode required assets edit Program.cs as follows ( consider to create a separate global usings.cs file ): namespace sample; // quickstart using Vector3 = System.Numerics.Vector3; using Color = System.Drawing.Color; using SearchAThing.OpenGL.Core; using static SearchAThing.OpenGL.Core.Constants; using SearchAThing.OpenGL.GUI; using static SearchAThing.OpenGL.GUI.Toolkit; using SearchAThing.OpenGL.Shapes; class Program { static void Main(string[] args) { // this must called for console application to enable Avalonia framework // and must called before any other Avalonia control usage InitAvalonia(); // create standalone Avalonia window for Silk.NET opengl rendering var w = GLWindow.Create(); // define the GLModel build function w.GLModel.BuildModel = (glCtl, isInitial) => { if (!isInitial) return; var glModel = glCtl.GLModel; // clear the model glModel.Clear(); // place a point light at xyz=(2,2,2) glModel.PointLights.Add(new GLPointLight(2, 2, 2)); // create and add a sphere centered at (0,0,0) with radius=1 and meshed as uvsphere with N=20 divisions var sphere = new UVSphere(center: Vector3.Zero, radius: 1); glModel.AddFigure(sphere.Figure(divisions: 20).SetColor(Color.Cyan)); // place a base box which receive sphere shadow centered like the sphere but 2*z lower ( out of sphere ) // with size xyz=(5, 5, .1f) larger than sphere but with small thickness var basebox = new Box(cs: WCS.Move(sphere.Center - Vector3.UnitZ * 2), csSize: new Vector3(5, 5, .1f)); glModel.AddFigure(basebox.Sides); glCtl.CameraView(CameraViewType.Right); }; // show the gl window w.ShowSync(); } } dotnet run # or hit F5 from vscode results ( control can manipulated with gestures ): Build solution cd netcore-opengl # git submodule update --init dotnet build Examples Running examples from console cd netcore-opengl dotnet run --project examples/example-0000 Running examples from vscode cd netcore-opengl code . C-S-p -> NET: Generate Assets for Build and Debug choose an example. Tip: to change startup example from bash ./set-startup-example xxxx where xxxx is the nr of one of the examples provided. This will update .vscode/launch.json then hit F5 to start. List of examples Click on the example code link to open source code of the example, read top tour instructions contained in each example to test functions, for example following in the top comment of example 0000: // example-0000 // draw a triangle with 3 colors (one for each vertex) // // use gesture such as: // - 'w' to toggle wireframe // - ctrl right/left to change tilt // - mouse wheel to zoom // - 'z' to zoomfit // - ctrl + x to show bbox Code: 0000 Draw a triangle with 3 colors (one for each vertex). Code: 0001 Random lines ( console program ). Code: 0002 (mvvm) Random lines ( avalonia AXAML program ). Code: 0003 Render stl terrain map varying vertex colors by height ; presence of a point light makes shadows. Code: 0004 Draw text. Code: 0005 Draw box with keyboard face toggler. Code: 0006 Draw nurb surface with triangles normal and animation, layout loaded from saved file. Code: 0007 Draw nurb tube with triangle selection on click through raycast in perspective mode; generate gl split layout programmtically generated. Code: 0008 (mvvm) Draw nurb tube with lighting tunable from mvvm interface. Code: 0009 Generate two captures of different sizes from the same scene. Code: 0010 Draw 3d shapes on a textured cube face. Code: 0011 Texture, light and text transparency. Code: 0012 Show text alignment types with their bounding box. Code: 0013 Multiline text. Code: 0014 Scalability benchmark for text. Code: 0015 Raycast in orthogonal mode for snapping test. Code: 0016 (mvvm) Invalidate control on vertex change. Code: 0017 Figure using screen coord. Code: 0018 Illusion of rotating base box model while its the camera that's rotating around. A small box rotates using object matrix in all scenes ; show camera frustum. Code: 0019 (mvvm) Sphere vertex render and hittest scalability test. Code: 0020 Customize key gesture. Code: 0021 Use of raycast to pick vertexes and define a new ucs. Code: 0022 Nurb surface join on two tubes. Code: 0023 Show 1-D fem element displacement using. Dependency: BriefFiniteElement. Code: 0024 Show 3-D fem element displacement with countour and legend visible only in one of the split views using control and figure custom tag data. Dependency: BriefFiniteElement Code: 0025 Nurb surface intersection generating nurb curves using FeasibleTriIntersectionTests extension method. Code: 0026 Shows 2 triangle intersection and SimpleCmd management. Code: 0027 Shows earth representation through a textured uv sphere. Development key notes Most of technical documentation is directly integrated with API documentation. Coordinate spaces Object, Model, View and Projection matrixes are used by the gl pipeline at the vertex shader set gl position. Clip, NDC and finally Screen spaces are handled by the gl pipeline as further stages where size of render device was set by the gl control render. Forward and backward coordinate transform can be done through provided core helper functions; these methods exists to preview gl transformations done by the gpu on client side and are used forwardly by the zoomfit in compute screen bbox or in the backward case to detect local point from screen through local ray cast. forward transform backward transform GL Dev inspect tool Hit F1 gesture to open gl dev tool useful to understand how conversion translates between spaces; it provides some basic support such as: show render count show/edit GlView title toggle control perspective, shadow, texture, wireframe, shade with edge, show normals override light ambient, diffuse, specular strength change fovdeg, show camera coordinates and frustum toggle autoadjust near/far with near,far edit show bbox size and model/view/projection matrixes add, remove, set position, color of lights Primitives, figures interaction Selection and coord identify cursor type hotkey description normal s Normal pan/zoom/rotate gestures. primitive s Primitive selection toggler. figure s Figure selection toggler. identify i Identify coord. Removal Select a primitive/figures then hit d key to delete from the model. SimpleCmd Each primitive/figure selected can be copied to clipboard by the ctrl+c key and can be pasted within ctrl+v. Actual implementation doesn't support color information but only geometric data: Primitive SimpleCmd point p x1,y1,z1;... line l x1,y1,z1,x2,y2,z2;... triangle t x1,y1,z1,x2,y2,z2,x3,y3,z3;... For example a WCS object figure composed of 3 lines is expressed as follow SimpleCmd: l 0,0,0,1,0,0;0,0,0,0,1,0;0,0,0,0,0,1 Change rotation center select a primitive ( s to enable selection ) hit ctrl+r To return at default rotation center hit ctrl+r again that is with no selection. Send notification Use gl model send notification to display a message with following properties: title message level : Information, Success, Warning, Error View invalidation model The view invalidation follow these rules: View is refreshed automatically as a result of scale/rotate/pan predefined interactions. Gl model changes doesn't imply an invalidation of the view and user have to request view update through gl model Invalidate method. Opengl debugging tools To implement some technical part of this library the RenderDoc tool was a useful to investigate the content of the gl pipeline and to see the cube depth map generated to handle point light shadow rendering. Multiplatform The same binary compiled in a platform can run in others. For example compile the solution then try to copy an example bin folder to other machine, then issue dotnet bin/Debug/net7.0/example-xxxx.dll. Docker (mesa) Unit tests of this projects can run in docker ( see this folder ). For a simple program execution there is an example in the offscreen rendering example-0009, to execute it: cd examples/example-0009/docker-example ./build.sh ./run.sh that executes with follow output: GL VERSION = 4.5 (Core Profile) Mesa 22.2.5 finished Generated file: total 52K drwxr-xr-x 2 devel0 devel0 4.0K Mar 29 13:46 . drwxrwxr-x 3 devel0 devel0 4.0K Mar 29 13:06 .. -rw-r--r-- 1 devel0 devel0 21K Apr 3 10:33 example-0009-1024x768.png -rw-r--r-- 1 devel0 devel0 18K Apr 3 10:33 example-0009-640x480.png generated files can be found in the examples/example-0009/docker-example/output generated folder. Software rendered (mesa) For example if you try to run the binary or sources from Windows guest in VirtualBox linux host you can receive follow error: C:\\Users\\devel0\\Downloads\\bin\\Debug\\net7.0>dotnet example-0010.dll Unhandled exception. System.AggregateException: One or more errors occurred. (ApiUnavailable: WGL: The driver does not appear to support OpenGL) ---> Silk.NET.GLFW.GlfwException: ApiUnavailable: WGL: The driver does not appear to support OpenGL at Silk.NET.GLFW.Glfw.<>c.<.cctor>b__141_0(ErrorCode errorCode, String description) at Silk.NET.GLFW.Glfw.CreateWindow(Int32 width, Int32 height, String title, Monitor* monitor, WindowHandle* share) at Silk.NET.Windowing.Glfw.GlfwWindow.CoreInitialize(WindowOptions opts) at Silk.NET.Windowing.Internals.WindowImplementationBase.CoreInitialize(ViewOptions opts) at Silk.NET.Windowing.Internals.ViewImplementationBase.Initialize() at SearchAThing.OpenGL.Core.GLContext..ctor() in /home/devel0/Documents/opensource/netcore-opengl/src/render/GLContext.cs:line 183 To overcome the issue you can execute with software rendered mesa graphics driver. To install: Download mesa library. Unpack MesaForWindows-x64-20.1.8.7z in a folder. Set the environment variable OPENGL_LIBRARY_PATH to the path of the folder containing opengl32.dll. Technical note: Mesa 20.1.8.7 doesn't expose glsl support for 4.6 regardless of that it contains effective implementation for that. To fix the problem netcore-opengl automatically set two other environment variables when mesa is used. C# global usings (full) Following is the list of global usings for app using gui and shapes modules. Just create a global.cs file and put into your solution to avoid using on each single .cs file. // core global using System; global using System.Linq; global using System.Globalization; global using System.Collections; global using System.Collections.Generic; global using System.Collections.ObjectModel; global using System.Text; global using System.Text.RegularExpressions; global using System.IO; global using System.Diagnostics; global using System.Threading.Tasks; global using System.Numerics; global using System.ComponentModel; global using System.Runtime.CompilerServices; global using static System.Math; global using static System.FormattableString; global using Vector3 = System.Numerics.Vector3; global using Color = System.Drawing.Color; global using Size = System.Drawing.Size; global using ColorTranslator = System.Drawing.ColorTranslator; global using System.Reflection; global using Newtonsoft.Json; global using Newtonsoft.Json.Serialization; global using SkiaSharp; global using Silk.NET.OpenGL; global using SearchAThing.Ext; global using static SearchAThing.Ext.Toolkit; global using SearchAThing.Sci; global using static SearchAThing.Sci.Toolkit; global using SearchAThing.OpenGL.Core; global using static SearchAThing.OpenGL.Core.Toolkit; global using static SearchAThing.OpenGL.Core.Constants; // gui global using System.Threading; global using Avalonia; global using Avalonia.Input; global using Point = Avalonia.Point; global using Avalonia.Media; global using AColor = Avalonia.Media.Color; global using ABrush = Avalonia.Media.Brush; global using Avalonia.Data.Converters; global using SearchAThing.Desktop; global using SearchAThing.OpenGL.GUI; global using static SearchAThing.OpenGL.GUI.Toolkit; global using static SearchAThing.OpenGL.GUI.Constants; // shapes global using SearchAThing.OpenGL.Shapes; global using static SearchAThing.OpenGL.Shapes.Toolkit; global using static SearchAThing.OpenGL.Shapes.Constants; // nurbs global using SearchAThing.OpenGL.Nurbs; global using static SearchAThing.OpenGL.Nurbs.Toolkit; Gestures Mouse gestures Key Description Left + Move Rotate the model over bbox middle Middle + Move Pan Middle double click Zoom fit Keybindings Key gesture can be overriden ( see example-0020 ). Key Description o View bOttom t View Top l View Left r View Right f View Front b View Back i Toggle Identify coord s Toggle selection mode Ctrl + r Change rotation center Ctrl + ⬆ Camera zoom in Ctrl + ⬇ Camera zoom out Shift + ⬅ Camera pan left Shift + ➡ Camera pan right Shift + ⬆ Camera pan up Shift + ⬇ Camera pan up ⬅ Model rotate left ➡ Model rotate right ⬆ Model rotate up ⬇ Model rotate down Ctrl + ⬅ Camera tilt left Ctrl + ➡ Camera tilt right Alt + ⬅ Camera rotate left Alt + ➡ Camera rotate right Alt + ⬆ Camera rotate up Alt + ⬇ Camera rotate down h Split view horizontal v Split view vertical c Close current view w Toggle wireframe Ctrl + w Toggle (geom shader) shade with edges Alt + v Toggle (geom shader) vertex visibility n Toggle show normals p Toggle perspective x Toggle texture Ctrl + s Toggle shadow Ctrl + x Toggle model bbox Ctrl + Shift + c Toggle camera object z Zoom fit Ctrl + c Copy selected primitives/figures to clipboard as SimpleCmd Ctrl + v Paste primitives/figures from clipboard SimpleCmd Delete Delete selected primitives/figures Escape Cancel selection and back to view cursor mode F1 Open dev tool F2 Save current view F3 Restore last saved view Shift + F2 Save current view layout Shift + F3 Restore last saved view layout Ctrl + i Invalidate view Unit tests debugging unit tests from vscode click debug test on codelens button executing all tests from solution root folder dotnet test testing coverage from vscode run task ( ctrl+shift+p ) Tasks: Run Task then test with coverage or use provided script ./generate-coverage.sh extensions required to watch coverage ( Coverage Gutters ) How this project was built mkdir netcore-opengl cd netcore-opengl mkdir src examples cd src dotnet new classlib -n netcore-opengl-core mv netcore-opengl-core core cd .. cd examples dotnet new console --use-program-main -n example mv example/example.csproj example/example-0001.csproj mv example example-0001 dotnet new --install Avalonia.Templates dotnet new avalonia.mvvm -n example mv example/example.csproj example/example-0002.csproj mv example example-0002 dotnet new classlib -n example-figures dotnet new xunit -n test cd test dotnet add reference ../ext/netcore-ext.csproj # enable test coverage collector # to view in vscode ( \"Coverage Gutters\" ext ) run `./test-coverage` then `C-S-p` Coverage Gutters: Watch dotnet add package coverlet.collector dotnet add package coverlet.msbuild cd .. cd .. dotnet new sln dotnet sln add src/core src/test dotnet sln add examples/example-0001 examples/example-0002 examples/example-figures dotnet build Documentation (github pages) Configured through Settings/Pages on Branch docs ( path /docs ). while master branch exclude \"docs\" with .gitignore the docs branch doesn't Build and view locally ./doc build ./doc serve ./doc view Build and commit into docs branch ./doc commit References OpenGL Transformation The Perspective and Orthographic Projection Matrix"
  },
  "api/SearchAThing.OpenGL.Core.BBox.html": {
    "href": "api/SearchAThing.OpenGL.Core.BBox.html",
    "title": "Class BBox | netcore-opengl",
    "keywords": "Class BBox Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Bounding box of a set of points. It can be an oriented bounding box if created with custom coordinate system, WCS elsewhere is used as default. public class BBox Inheritance object BBox Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Lines(BBox, Color?) Ext.MakeFigure(BBox, in Color?) Remarks If a custom CS is given at the constructor min and max point of the bbox evaluates extension increments from the cs point of view. Constructors BBox(BBox) Create a copy of given bbox. public BBox(BBox other) Parameters other BBox Other bbox to copy. BBox(IEnumerable<BBox>) Create a wcs bounding box adding given bboxes wcs extensions. public BBox(IEnumerable<BBox> bboxes) Parameters bboxes IEnumerable<BBox> BBox(IEnumerable<Vector3>) Create a wcs bounding box of given points public BBox(IEnumerable<Vector3> pts) Parameters pts IEnumerable<Vector3> BBox(in Matrix4x4?) Create bounding box object with optional coordinate system. public BBox(in Matrix4x4? cs = null) Parameters cs Matrix4x4? Optional coordinate system ( if null WCS is considered ) BBox(in Matrix4x4?, params Vector3[]) Create a cs oriented bounding box of given set of points. public BBox(in Matrix4x4? cs, params Vector3[] pts) Parameters cs Matrix4x4? pts Vector3[] BBox(in Matrix4x4, IEnumerable<BBox>) Create a cs oriented bounding box adding given bboxes wcs extensions. public BBox(in Matrix4x4 cs, IEnumerable<BBox> bboxes) Parameters cs Matrix4x4 bboxes IEnumerable<BBox> BBox(in Matrix4x4, IEnumerable<Vector3>) Create a cs oriente bounding box of given set of points. public BBox(in Matrix4x4 cs, IEnumerable<Vector3> pts) Parameters cs Matrix4x4 pts IEnumerable<Vector3> BBox(params Vector3[]) Create a wcs bounding box of given set of points. public BBox(params Vector3[] pts) Parameters pts Vector3[] Properties CS Coordinate system related to the bounding box or null if WCS is considered. public Matrix4x4? CS { get; } Property Value Matrix4x4? IsEmpty States if bounding box is empty. This is the default state at construct time and mean no point added yet. public bool IsEmpty { get; } Property Value bool Max Maximum coordinate [wcs]. public Vector3 Max { get; } Property Value Vector3 MaxCS Maximum coordinate [cs]. public Vector3 MaxCS { get; } Property Value Vector3 Middle Bounding box middle coordinate [wcs]. public Vector3 Middle { get; } Property Value Vector3 Min Minimum coordinate [wcs]. public Vector3 Min { get; } Property Value Vector3 MinCS Minimum coordinate [cs]. public Vector3 MinCS { get; } Property Value Vector3 Points Enumerate bounding box eight points. public IEnumerable<Vector3> Points { get; } Property Value IEnumerable<Vector3> Remarks It doesn't check for duplicates. Size Bounding box size [wcs]. public Vector3 Size { get; } Property Value Vector3 SizeCS Bounding box size [cs]. public Vector3 SizeCS { get; } Property Value Vector3 TolHint Retrieve length comparision tolerance hint from bbox size. If bbox empty a default tolerance DefaultTolerance will retrieved. public float TolHint { get; } Property Value float Methods ApplyUnion(BBox) (side effect) Modify current bounding box by adding given other bbox wcs extensions. public bool ApplyUnion(BBox other) Parameters other BBox Other bbox to add. Returns bool True if bbox changed. ApplyUnion(IEnumerable<Vector3>) (side effect) Apply union of given wcs points. If bbox provided with custom CS then bbox aligned comparision will be done. public bool ApplyUnion(IEnumerable<Vector3> pts) Parameters pts IEnumerable<Vector3> Other points to add. Returns bool True if bbox changed. ApplyUnion(params Vector3[]) (side effect) Modify current bounding box by adding given other set ot wcs points. public bool ApplyUnion(params Vector3[] pts) Parameters pts Vector3[] Other wcs points to add. Returns bool True if bbox changed. Clear() Reset bbox to empty state. public void Clear() Contains(float, BBox, bool, bool) WCS tests if given other bounding box is contained (with tolerance) to this one. public bool Contains(float tol, BBox other, bool strictly = false, bool testZ = true) Parameters tol float Comparision tolerance. other BBox Other bbox to test if contained into this one. strictly bool If true, test will fails if one wcs ordinate of other bbox extensions equals to this one. testZ bool If false tests acts only for x, y bounding box extension components (Default: true). Returns bool True if test succeeded. EqualsTol(float, BBox) States if this bbox equals (with tolerance) to another. public bool EqualsTol(float tol, BBox other) Parameters tol float Comparision tolerance. other BBox Other bbox to compare to this one. Returns bool True if two bbox are equals (with tolerance). Intersects(BBox) Test if this bbox and the other given intersects. public bool Intersects(BBox other) Parameters other BBox Other bbox to test intersects with. Returns bool True if one of two box have at least one point inside the other. Returns false if one of the given boxes is empty. Intersects(float, BBox) Test if this bbox and the other given intersects. public bool Intersects(float tol, BBox other) Parameters tol float Comparision length tolerance. other BBox Other bbox to test intersects with. Returns bool True if one of two box have at least one point inside the other. Returns false if one of the given boxes is empty. Move(in Vector3) Create a new bounding box with Min, Max moved by the given wcs delta. public BBox Move(in Vector3 delta) Parameters delta Vector3 WCS delta to apply. Returns BBox Moved bounding box. ToString() public override string ToString() Returns string Transform(Matrix4x4) Create a new bbox that is the given one with extensions transformed by the given transform matrix. public BBox Transform(Matrix4x4 m) Parameters m Matrix4x4 Transform matrix. Returns BBox Transformed bbox. Union(BBox) Create a new bounding box that is the result of the current with addition of the extensions of given other bbox. public BBox Union(BBox other) Parameters other BBox Other bbox to add. Returns BBox Extended bbox. Union(IEnumerable<Vector3>) Create a new bounding box that is the result of the current with addition of given wcs point set. public BBox Union(IEnumerable<Vector3> pts) Parameters pts IEnumerable<Vector3> WCS point set to add. Returns BBox Extended bbox. Union(in Vector3) Create a new bounding box that is the result of the current with addition of given wcs point. public BBox Union(in Vector3 p) Parameters p Vector3 WCS point to add. Returns BBox Extended bbox."
  },
  "api/SearchAThing.OpenGL.Core.CameraViewType.html": {
    "href": "api/SearchAThing.OpenGL.Core.CameraViewType.html",
    "title": "Enum CameraViewType | netcore-opengl",
    "keywords": "Enum CameraViewType Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public enum CameraViewType Extension Methods Ext.ShortString(CameraViewType) Fields Back = 4 view b BackBottom = 33 view bo BackBottomLeft = 34 view bol BackBottomRight = 35 view bor BackLeft = 31 view bl BackRight = 32 view br BackTop = 36 view bt BackTopLeft = 37 view btl BackTopRight = 38 view btr Bottom = 6 view o BottomBottom = 49 view oo BottomBottomLeft = 50 view ool BottomBottomRight = 51 view oor BottomLeft = 47 view ol BottomRight = 48 view or BottomTop = 52 view ot BottomTopLeft = 53 view otl BottomTopRight = 54 view otr Front = 3 view f FrontBottom = 25 view fo FrontBottomLeft = 26 view fol FrontBottomRight = 27 view for FrontLeft = 23 view fl FrontRight = 24 view fr FrontTop = 28 view ft FrontTopLeft = 29 view ftl FrontTopRight = 30 view ftr Left = 1 view l LeftBottom = 9 view lo LeftBottomLeft = 10 view lol LeftBottomRight = 11 view lor LeftLeft = 7 view ll LeftRight = 8 view lr LeftTop = 12 view lt LeftTopLeft = 13 view ltl LeftTopRight = 14 view ltr Manual = 0 allow to specify x, y, z rotation angles Right = 2 view r RightBottom = 17 view ro RightBottomLeft = 18 view rol RightBottomRight = 19 view ror RightLeft = 15 view rl RightRight = 16 view rr RightTop = 20 view rt RightTopLeft = 21 view ltl RightTopRight = 22 view ltr Top = 5 view t TopBottom = 41 view to TopBottomLeft = 42 view tol TopBottomRight = 43 view tor TopLeft = 39 view tl TopRight = 40 view tr TopTop = 44 view tt TopTopLeft = 45 view ttl TopTopRight = 46 view ttr"
  },
  "api/SearchAThing.OpenGL.Core.ColorConverterPatch.html": {
    "href": "api/SearchAThing.OpenGL.Core.ColorConverterPatch.html",
    "title": "Class ColorConverterPatch | netcore-opengl",
    "keywords": "Class ColorConverterPatch Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public static class ColorConverterPatch Inheritance object ColorConverterPatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HslToRgb(HSL) public static RGB HslToRgb(HSL hsl) Parameters hsl HSL Returns RGB HsvToRgb(HSV) public static RGB HsvToRgb(HSV hsv) Parameters hsv HSV Returns RGB"
  },
  "api/SearchAThing.OpenGL.Core.ComputeTriangleNormalDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.ComputeTriangleNormalDelegate.html",
    "title": "Delegate ComputeTriangleNormalDelegate | netcore-opengl",
    "keywords": "Delegate ComputeTriangleNormalDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Compute normal function delegate. public delegate Vector3 ComputeTriangleNormalDelegate(IGLTriangle triangle, IGLVertex vertex) Parameters triangle IGLTriangle Triangle primitive which to compute normal. vertex IGLVertex Triangle vertex which to compute normal. Returns Vector3 Vector that represents the normal of the vertex of the triangle."
  },
  "api/SearchAThing.OpenGL.Core.Constants.html": {
    "href": "api/SearchAThing.OpenGL.Core.Constants.html",
    "title": "Class Constants | netcore-opengl",
    "keywords": "Class Constants Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public static class Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ATTNAME_vFlags Name of vertex shader attribute ( flags ). public const string ATTNAME_vFlags = \"vFlags\" Field Value string ATTNAME_vMatColor Name of vertex shader attribute ( rgba vertex color ). public const string ATTNAME_vMatColor = \"vMatColor\" Field Value string ATTNAME_vMatProp Name of vertex shader attribute ( Describe the strength (0..1) of the ambient, diffuse, specular light effects. ). public const string ATTNAME_vMatProp = \"vMatProp\" Field Value string ATTNAME_vNormal Name of vertex shader attribute ( vertex normal [local] ). public const string ATTNAME_vNormal = \"vNormal\" Field Value string ATTNAME_vPos Name of vertex shader attribute ( vertex position [local] ). public const string ATTNAME_vPos = \"vPos\" Field Value string ATTNAME_vTexCoord Name of vertex shader attribute ( texture coordinate mapping in the range [0,0]...[1,1] ). public const string ATTNAME_vTexCoord = \"vTexCoord\" Field Value string BUILTIN_FONTFILE https://fontlibrary.org/en/font/dejavu-sans-mono public const string BUILTIN_FONTFILE = \"DejaVuSansMono.ttf\" Field Value string BUILTIN_FONTNAME public const string BUILTIN_FONTNAME = \"DejaVu Sans Mono\" Field Value string DEFAULT_CAMERA_POS (Default) gl control camera pos [world]. public static readonly Vector3 DEFAULT_CAMERA_POS Field Value Vector3 DEFAULT_CAMERA_TARGET (Default) gl control camera target [world]. public static readonly Vector3 DEFAULT_CAMERA_TARGET Field Value Vector3 DEFAULT_CAMERA_UP (Default) gl control camera up [world]. public static readonly Vector3 DEFAULT_CAMERA_UP Field Value Vector3 DEFAULT_CameraObjectColor (Default) MakeFrustum(in Vector3, in Vector3, in Vector3, float, float, float, in Matrix4x4) camera object lines color. public static readonly Color DEFAULT_CameraObjectColor Field Value Color DEFAULT_ClearColor (Default) Clear(bool, Color?) background color. public static readonly Color DEFAULT_ClearColor Field Value Color DEFAULT_CursorMode (Default) gl control cursor mode. public const CursorMode DEFAULT_CursorMode = View Field Value CursorMode DEFAULT_Far (Default) Absolute position along [eye] z axis of the far clipping plane. public const float DEFAULT_Far = 50000 Field Value float DEFAULT_FigureOrder (Default) Order of a figure. public const int DEFAULT_FigureOrder = 0 Field Value int DEFAULT_FigureVisible (Default) Visible of a figure. public const bool DEFAULT_FigureVisible = true Field Value bool DEFAULT_FovDeg (Default) perspective mode field of view (deg). public const float DEFAULT_FovDeg = 28 Field Value float DEFAULT_INVALIDATE (Default) gl control invalidate behavior for api. public const bool DEFAULT_INVALIDATE = true Field Value bool DEFAULT_LIGHT_COLOR (Default) gl point light color. public static readonly Color DEFAULT_LIGHT_COLOR Field Value Color DEFAULT_LIGHT_CONSTANT (Default) gl point light constant attenuation factor. public const float DEFAULT_LIGHT_CONSTANT = 1 Field Value float DEFAULT_LIGHT_LINEAR (Default) gl point light linear attenuation factor. public const float DEFAULT_LIGHT_LINEAR = 0 Field Value float DEFAULT_LIGHT_QUADRATIC (Default) gl point light quadratic attenuation factor. public const float DEFAULT_LIGHT_QUADRATIC = 0 Field Value float DEFAULT_LIGHT_SHOW_POINT (Default) gl point light show point flag. public const bool DEFAULT_LIGHT_SHOW_POINT = false Field Value bool DEFAULT_LIGHT_SHOW_POINT_SIZE (Default) gl point light show point size (pixel). public const float DEFAULT_LIGHT_SHOW_POINT_SIZE = 10 Field Value float DEFAULT_MaterialAmbientStrength ( Default ) material ambient strength ( 0.8 ). public const float DEFAULT_MaterialAmbientStrength = 0.8 Field Value float DEFAULT_MaterialColor ( Default ) color. public static readonly Color DEFAULT_MaterialColor Field Value Color DEFAULT_MaterialDiffuseStrength ( Default ) material diffuse strength ( 0.6 ). public const float DEFAULT_MaterialDiffuseStrength = 0.6 Field Value float DEFAULT_MaterialProperties ( Default ) material properties ( ambient:0.8, diffuse:0.6, strength:0.6 ). public static readonly MaterialProperties DEFAULT_MaterialProperties Field Value MaterialProperties DEFAULT_MaterialSpecularStrength ( Default ) material specular strength ( 0.6 ). public const float DEFAULT_MaterialSpecularStrength = 0.6 Field Value float DEFAULT_NORMAL_FACTOR (Default) gl shader UNINAME_uNormalFactor. public const float DEFAULT_NORMAL_FACTOR = 0.025 Field Value float DEFAULT_Near (Default) Absolute position along [eye] z axis of the near clipping plane. public const float DEFAULT_Near = 0.1 Field Value float DEFAULT_Normal (Default) vertex normal (0,0,0). public static readonly Vector3 DEFAULT_Normal Field Value Vector3 DEFAULT_ObjectMatrix (Default) ObjectMatrix of a figure. public static readonly Matrix4x4 DEFAULT_ObjectMatrix Field Value Matrix4x4 DEFAULT_OrthoZoom (Default) orthogonal mode scale factor. public const float DEFAULT_OrthoZoom = 1 Field Value float DEFAULT_PIXEL_FORMAT Specify default image buffer format by GLTexture2D. public const PixelFormat DEFAULT_PIXEL_FORMAT = Rgba Field Value PixelFormat DEFAULT_Perspective (Default) gl control perspective mode. public const bool DEFAULT_Perspective = true Field Value bool DEFAULT_PointSize (Default) PointSize of a point figure. public const float DEFAULT_PointSize = 10 Field Value float DEFAULT_SHADE_WITH_EDGE (Default) gl control shade with edge flag. public const bool DEFAULT_SHADE_WITH_EDGE = false Field Value bool DEFAULT_SHOW_NORMALS (Default) gl control show normals flags. public const bool DEFAULT_SHOW_NORMALS = false Field Value bool DEFAULT_ScreenCoord (Default) ScreenCoordMode of a figure. public const bool DEFAULT_ScreenCoord = false Field Value bool DEFAULT_StdViewAngleDeg (Default) gl control angle view addition in standard cube views (deg). public const float DEFAULT_StdViewAngleDeg = 45 Field Value float DEFAULT_TEXTURE_INTERNAL_FORMAT Specify gpy internal format of texture used by GLTexture2D. public const InternalFormat DEFAULT_TEXTURE_INTERNAL_FORMAT = Rgba8 Field Value InternalFormat DEFAULT_TRACE_LOCATION_WARNINGS (Default) trace shader location warning. public const bool DEFAULT_TRACE_LOCATION_WARNINGS = false Field Value bool DEFAULT_TexCoord (Default) vertex texture mapping coordinate (0,0). public static readonly Vector2 DEFAULT_TexCoord Field Value Vector2 DEFAULT_TextColor (Default) Color. public static readonly Color DEFAULT_TextColor Field Value Color DEFAULT_UseShadows (Default) gl control use shadow flag. public const bool DEFAULT_UseShadows = true Field Value bool DEFAULT_UseTexture (Default) gl control use texture flag. public const bool DEFAULT_UseTexture = true Field Value bool DEFAULT_VERTEX_VISIBILITY (Default) gl control vertex visibility flag. public const bool DEFAULT_VERTEX_VISIBILITY = false Field Value bool DEFAULT_VERTEX_VISIBILITY_POINT_SIZE (Default) gl geometry shader vertex visibility point size. public const float DEFAULT_VERTEX_VISIBILITY_POINT_SIZE = 5 Field Value float DEFAULT_VertexPosition (Default) vertex position (0,0,0). public static readonly Vector3 DEFAULT_VertexPosition Field Value Vector3 DEFAULT_Wireframe (Default) gl control wireframe enable/ public const bool DEFAULT_Wireframe = false Field Value bool DefaultHitTestTolerance Default hit test tolerance. public const float DefaultHitTestTolerance = 0.01 Field Value float DefaultTolerance Default tolerance for empty model. TolHint public const float DefaultTolerance = 1E-05 Field Value float FONT_BITMAP_PIXEL Height (pixel) of font samples rendering. Used by the GetFontChars(string, SKFont) public const int FONT_BITMAP_PIXEL = 300 Field Value int MAIN_TEXTURE_UNIT Gl texture unit used for main figure texture usages. public const TextureUnit MAIN_TEXTURE_UNIT = Texture2 Field Value TextureUnit MESA_WIN_LIBRARY_ENV Environment variable to set in order to use mesa library in Windows. GLContext public const string MESA_WIN_LIBRARY_ENV = \"OPENGL_LIBRARY_PATH\" Field Value string NETCORE_OPENGL_CORE_ASSEMBLY_NAME SearchAThing.OpenGL.Core assembly name (regex). public const string NETCORE_OPENGL_CORE_ASSEMBLY_NAME = \"netcore-opengl-core\" Field Value string NormalizedTolerance Tolerance to be used in comparision of normalized vectors. public const float NormalizedTolerance = 1E-06 Field Value float PAN_LITTLE_FACTOR (Default) gl control pan factor respect the screen size. public const float PAN_LITTLE_FACTOR = 0.1 Field Value float RESOURCE_NAMESPACE_BASE SearchAThing.OpenGL.Core (regex). public static readonly string RESOURCE_NAMESPACE_BASE Field Value string ROTATE_LITTLE_DEG (Default) gl control rotate model step (deg). public const float ROTATE_LITTLE_DEG = 5 Field Value float SCREEN_ADJUST_H (Default) Used in BuildScreenProjectMatrix(). public const float SCREEN_ADJUST_H = 0 Field Value float SCREEN_ADJUST_TX (Default) Used in BuildScreenProjectMatrix(). public const float SCREEN_ADJUST_TX = 0 Field Value float SCREEN_ADJUST_TY (Default) Used in BuildScreenProjectMatrix(). public const float SCREEN_ADJUST_TY = 0 Field Value float SCREEN_ADJUST_W (Default) Used in BuildScreenProjectMatrix(). public const float SCREEN_ADJUST_W = 0 Field Value float SHADER_RESOURCE_DEPTH_FRAG Shader \"3.depth.fs\" resource name (regex). public static readonly string SHADER_RESOURCE_DEPTH_FRAG Field Value string SHADER_RESOURCE_DEPTH_GEOM Shader \"2.depth.gs\" resource name (regex). public static readonly string SHADER_RESOURCE_DEPTH_GEOM Field Value string SHADER_RESOURCE_DEPTH_VERT Shader \"1.depth.vs\" resource name (regex). public static readonly string SHADER_RESOURCE_DEPTH_VERT Field Value string SHADER_RESOURCE_MAIN_FRAG Shader \"6.main.fs\" resource name (regex). public static readonly string SHADER_RESOURCE_MAIN_FRAG Field Value string SHADER_RESOURCE_MAIN_GEOM_NORMAL Shader \"5.normal.gs\" resource name (regex). public static readonly string SHADER_RESOURCE_MAIN_GEOM_NORMAL Field Value string SHADER_RESOURCE_MAIN_GEOM_SHADE_WITH_EDGE Shader \"5.shadewithedge.gs\" resource name (regex). public static readonly string SHADER_RESOURCE_MAIN_GEOM_SHADE_WITH_EDGE Field Value string SHADER_RESOURCE_MAIN_GEOM_VERTEX_VISIBILITY_LINE Shader \"5.vertexvisibilityline.gs\" resource name (regex). public static readonly string SHADER_RESOURCE_MAIN_GEOM_VERTEX_VISIBILITY_LINE Field Value string SHADER_RESOURCE_MAIN_GEOM_VERTEX_VISIBILITY_TRI Shader \"5.vertexvisibilitytri.gs\" resource name (regex). public static readonly string SHADER_RESOURCE_MAIN_GEOM_VERTEX_VISIBILITY_TRI Field Value string SHADER_RESOURCE_MAIN_VERT Shader \"4.main.vs\" resource name (regex). public static readonly string SHADER_RESOURCE_MAIN_VERT Field Value string SHADOW_HEIGHT Height (pixels) of the cube depth shadow. public static uint SHADOW_HEIGHT Field Value uint SHADOW_TEXTURE_UNIT Gl texture unit used for shadow map generation. public const TextureUnit SHADOW_TEXTURE_UNIT = Texture1 Field Value TextureUnit SHADOW_WIDTH Width (pixels) of the cube depth shadow. public static uint SHADOW_WIDTH Field Value uint SIMPLE_CMD_COORD_SEP public const char SIMPLE_CMD_COORD_SEP = ',' Field Value char SIMPLE_CMD_LINE public const string SIMPLE_CMD_LINE = \"l\" Field Value string SIMPLE_CMD_POINT public const string SIMPLE_CMD_POINT = \"p\" Field Value string SIMPLE_CMD_POINT_SEP public const char SIMPLE_CMD_POINT_SEP = ';' Field Value char SIMPLE_CMD_TRIANGLE public const string SIMPLE_CMD_TRIANGLE = \"t\" Field Value string SSBO_Blockname_PointLightsBlock Name of the uniform shader variable for the name of points light block buffer. public const string SSBO_Blockname_PointLightsBlock = \"PointLightsBlock\" Field Value string SSBO_Blockname_PointLightsMatrixesBlock Name of the uniform shader variable for the name of points light matrixes block buffer. public const string SSBO_Blockname_PointLightsMatrixesBlock = \"PointLightsMatrixesBlock\" Field Value string TILT_LITTLE_DEG (Default) gl control camera tilt step (deg). public const float TILT_LITTLE_DEG = 2 Field Value float UNINAME_uBBoxMax Name of the uniform shader variable for the model bbox max vertex [local]. Used by normal geometry shader to compute normal scale length. public const string UNINAME_uBBoxMax = \"uBBoxMax\" Field Value string UNINAME_uBBoxMin Name of the uniform shader variable for the model bbox min vertex [local]. Used by normal geometry shader to compute normal scaled length. public const string UNINAME_uBBoxMin = \"uBBoxMin\" Field Value string UNINAME_uCameraPos Name of the uniform shader variable for the camera position [world]. public const string UNINAME_uCameraPos = \"uCameraPos\" Field Value string UNINAME_uDepthMap Name of the uniform shader variable to specify depth texture cube array reference. public const string UNINAME_uDepthMap = \"uDepthMap\" Field Value string UNINAME_uEvalLight Name of the uniform shader variable that enables evaluation of the light. public const string UNINAME_uEvalLight = \"uEvalLight\" Field Value string UNINAME_uFarPlaneLight Name of the uniform shader variable to set far plane in light depth map calc. public const string UNINAME_uFarPlaneLight = \"uFarPlaneLight\" Field Value string UNINAME_uFigureAlpha Name of the uniform shader variable for the figure alpha. Alpha. public const string UNINAME_uFigureAlpha = \"uFigureAlpha\" Field Value string UNINAME_uFigureHighlight Name of the uniform shader variable for the figure highlight flag. public const string UNINAME_uFigureHighlight = \"uFigureHighlight\" Field Value string UNINAME_uFigureScreenCoord Name of the uniform shader variable that enable screen coord mode vertex evaluation [object]. public const string UNINAME_uFigureScreenCoord = \"uFigureScreenCoord\" Field Value string UNINAME_uFigureSelected Name of the uniform shader variable for the figure selected flag. public const string UNINAME_uFigureSelected = \"uFigureSelected\" Field Value string UNINAME_uIsText Name of the uniform shader variable to enable evluation of color from UNINAME_uTextColor variable. public const string UNINAME_uIsText = \"uIsText\" Field Value string UNINAME_uLightIdx Name of the uniform shader variable that describe the index of the light to evaluate. ( used in depth shader ). public const string UNINAME_uLightIdx = \"uLightIdx\" Field Value string UNINAME_uMainTexture Name of the uniform shader variable to specify main texture sampler reference. public const string UNINAME_uMainTexture = \"uMainTexture\" Field Value string UNINAME_uModel Name of the uniform shader variable for the model matrix [local]. public const string UNINAME_uModel = \"uModel\" Field Value string UNINAME_uNormalFactor Name of the uniform shader variable for the normal length scaling factor respect model bbox size [local]. Used by normal geometry shader to compute normal scale length. public const string UNINAME_uNormalFactor = \"uNormalFactor\" Field Value string UNINAME_uObject Name of the uniform shader variable for the object matrix [object]. public const string UNINAME_uObject = \"uObject\" Field Value string UNINAME_uOverrideAmbient Name of the uniform shader variable to override vertex material ambient strength (0..1). public const string UNINAME_uOverrideAmbient = \"uOverrideAmbient\" Field Value string UNINAME_uOverrideAmbientEnabled Name of the uniform shader variable to enable/disable vertex material ambient override strength. public const string UNINAME_uOverrideAmbientEnabled = \"uOverrideAmbientEnabled\" Field Value string UNINAME_uOverrideDiffuse Name of the uniform shader variable to override vertex material diffuse strength (0..1). public const string UNINAME_uOverrideDiffuse = \"uOverrideDiffuse\" Field Value string UNINAME_uOverrideDiffuseEnabled Name of the uniform shader variable to enable/disable vertex material diffuse override strength. public const string UNINAME_uOverrideDiffuseEnabled = \"uOverrideDiffuseEnabled\" Field Value string UNINAME_uOverrideSpecular Name of the uniform shader variable to override vertex material specular strength (0..1). public const string UNINAME_uOverrideSpecular = \"uOverrideSpecular\" Field Value string UNINAME_uOverrideSpecularEnabled Name of the uniform shader variable to enable/disable vertex material specular override strength. public const string UNINAME_uOverrideSpecularEnabled = \"uOverrideSpecularEnabled\" Field Value string UNINAME_uProjection Name of the uniform shader variable for the projection matrix [eye]. public const string UNINAME_uProjection = \"uProjection\" Field Value string UNINAME_uScreenModel Name of the uniform shader variable for the screen mode model matrix [local]. public const string UNINAME_uScreenModel = \"uScreenModel\" Field Value string UNINAME_uScreenProjection Name of the uniform shader variable for the screen mode projection matrix [eye]. public const string UNINAME_uScreenProjection = \"uScreenProjection\" Field Value string UNINAME_uShadows Name of the uniform shader variable to enable/disable shadow. public const string UNINAME_uShadows = \"uShadows\" Field Value string UNINAME_uTextColor Name of the uniform shader variable that specify color for text figure types. public const string UNINAME_uTextColor = \"uTextColor\" Field Value string UNINAME_uUseTexture Name of the uniform shader variable to consider vertex color from texture. public const string UNINAME_uUseTexture = \"uUseTexture\" Field Value string UNINAME_uView Name of the uniform shader variable for the view matrix [world]. public const string UNINAME_uView = \"uView\" Field Value string WCS CS world with origin=(0,0,0) basex=(1,0,0) basey=(0,1,0) basez=(0,0,1) public static readonly Matrix4x4 WCS Field Value Matrix4x4 XZCS CS representing XZ plane origin=(0,0,0) basex=(1,0,0) basey=(0,0,1) basez=(0,-1,0) public static readonly Matrix4x4 XZCS Field Value Matrix4x4 YAxisOrientation Y axis orientation [screen]. public const YAxisOrientationEnum YAxisOrientation = YPositiveUp Field Value YAxisOrientationEnum Remarks NOTE: Actually tested only for YPositiveUp. It's a constant hard coded. YZCS CS representing YZ plane origin=(0,0,0) basex=(0,1,0) basey=(0,0,1) basez=(1,0,0) public static readonly Matrix4x4 YZCS Field Value Matrix4x4 ZOOM_LITTLE_FACTOR (Default) gl control step zoom scale factor. public const float ZOOM_LITTLE_FACTOR = 0.1 Field Value float aaaSmall Constant used in ArbitraryAxisAlghorithm(in Vector3, out Vector3, out Vector3, out Vector3). public const float aaaSmall = 0.015625 Field Value float Properties ViewDefaultPathfilename (Default) pathfilename of the view.json used by SaveView(string?). public static string ViewDefaultPathfilename { get; } Property Value string"
  },
  "api/SearchAThing.OpenGL.Core.ControlFigureVisibileDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.ControlFigureVisibileDelegate.html",
    "title": "Delegate ControlFigureVisibileDelegate | netcore-opengl",
    "keywords": "Delegate ControlFigureVisibileDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Delegate for ControlFigureVisible. It allow to customize the visilibty of a figure in relation within a Gl control. public delegate bool ControlFigureVisibileDelegate(GLControl glControl, GLFigureBase figure) Parameters glControl GLControl GL control reference. figure GLFigureBase GL figure for which state visibility in given control. Returns bool True if figure must shown in the gl control, false otherwise."
  },
  "api/SearchAThing.OpenGL.Core.CursorMode.html": {
    "href": "api/SearchAThing.OpenGL.Core.CursorMode.html",
    "title": "Enum CursorMode | netcore-opengl",
    "keywords": "Enum CursorMode Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public enum CursorMode Fields Figure = 2 Select figure under cursor. Primitive = 1 Select primitive under cursor. View = 0 Normal scale/rotate/pan view gestures."
  },
  "api/SearchAThing.OpenGL.Core.DebugVtxMgr.html": {
    "href": "api/SearchAThing.OpenGL.Core.DebugVtxMgr.html",
    "title": "Class DebugVtxMgr | netcore-opengl",
    "keywords": "Class DebugVtxMgr Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Debug object containing a vertex manager to allow create figures and a gl control to allow invalidate the view. Used for debug purpose. public class DebugVtxMgr Inheritance object DebugVtxMgr Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DebugVtxMgr(GLVertexManager, GLControl, Action) public DebugVtxMgr(GLVertexManager vtxMgr, GLControl glControl, Action invalidate) Parameters vtxMgr GLVertexManager glControl GLControl invalidate Action Properties GLControl public GLControl GLControl { get; } Property Value GLControl Invalidate public Action Invalidate { get; } Property Value Action VtxMgr public GLVertexManager VtxMgr { get; } Property Value GLVertexManager"
  },
  "api/SearchAThing.OpenGL.Core.DummyRenderDevice.html": {
    "href": "api/SearchAThing.OpenGL.Core.DummyRenderDevice.html",
    "title": "Class DummyRenderDevice | netcore-opengl",
    "keywords": "Class DummyRenderDevice Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll A render device that doesn't write GL pixel anywhere. This object can be used for testing purpouse. public class DummyRenderDevice : IRenderDevice, INotifyPropertyChanged Inheritance object DummyRenderDevice Implements IRenderDevice INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DummyRenderDevice(in Size) public DummyRenderDevice(in Size size) Parameters size Size Properties Size Retrieve actual size of the device screen (pixels). public Size Size { get; set; } Property Value Size TransferGLPixelsCount Stats counter of TransferGLPixels(GL) calls. public int TransferGLPixelsCount { get; set; } Property Value int Methods OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Post(Action) Used by GLControl to emit PropertyChanged event. This is needed in most frameworks that allow ui interactions only from the ui thread itself. Its necessary expecially if want to access ui data from a separate Task running in parallel. public void Post(Action action) Parameters action Action Action to be executed in ui thread. TransferGLPixels(GL) Use given GL object to issue a ReadPixel and transfer them to destination device. Following some details how this function is involved in the rendering process: image \\image html ReactiveUI.svg width=100% Here an example implementation given from the TransferGLPixels(GL): \\snippet{'trimleft'} src/render/OffscreenRenderDevice.cs OffscreenTrasferGLPixels public void TransferGLPixels(GL GL) Parameters GL GL Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.Ext.html": {
    "href": "api/SearchAThing.OpenGL.Core.Ext.html",
    "title": "Class Ext | netcore-opengl",
    "keywords": "Class Ext Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public static class Ext Inheritance object Ext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AspectRatio(in Size) Compute aspect ratio of given Size object. public static float AspectRatio(this in Size size) Parameters size Size Returns float Remarks If size height is zero returns 1, width / height elsewhere. AverageColor(IGLLine) Average color of lines vertexes color. public static Color AverageColor(this IGLLine line) Parameters line IGLLine Returns Color BaseX(in Matrix4x4) Extract basex (m1[1..3]) from the given world matrix. public static Vector3 BaseX(this in Matrix4x4 m) Parameters m Matrix4x4 Returns Vector3 BaseY(in Matrix4x4) Extract basey (m2[1..3]) from the given world matrix. public static Vector3 BaseY(this in Matrix4x4 m) Parameters m Matrix4x4 Returns Vector3 BaseZ(in Matrix4x4) Extract basez (m3[1..3]) from the given world matrix. public static Vector3 BaseZ(this in Matrix4x4 m) Parameters m Matrix4x4 Returns Vector3 BuildVertexPosDict(IGLFigure, float) From given figure create a vertex position based dictionary suitable to be queries through vertex PositionSignature(Vector3, float). public static Dictionary<string, List<GLVertex>> BuildVertexPosDict(this IGLFigure figure, float tol) Parameters figure IGLFigure Gl figure which retrieve vertexes. tol float Vertex position tolerance to group them. Returns Dictionary<string, List<GLVertex>> Dictionary gl vertex position signature to list of gl vertexes within that position. BuildVertexPosDict(IEnumerable<IGLFigure>, float) From given list of figures create a vertex position based dictionary suitable to be queries through vertex PositionSignature(Vector3, float). public static Dictionary<string, List<GLVertex>> BuildVertexPosDict(this IEnumerable<IGLFigure> figures, float tol) Parameters figures IEnumerable<IGLFigure> Gl figures which retrieve vertexes. tol float Vertex position tolerance to group them. Returns Dictionary<string, List<GLVertex>> Dictionary gl vertex position signature to list of gl vertexes within that position. Center(IGLFigure) Mean of figure vertexes. public static Vector3 Center(this IGLFigure figure) Parameters figure IGLFigure Returns Vector3 Describe(IEnumerable<GLFontChar>, string) Debugging of GLFontChar to xlsx. Used in GetFontChars(string, SKFont). public static void Describe(this IEnumerable<GLFontChar> fontChars, string xlsxPathfilename) Parameters fontChars IEnumerable<GLFontChar> xlsxPathfilename string DistinctPoints(IEnumerable<Line>, float) public static IEnumerable<Vector3> DistinctPoints(this IEnumerable<Line> lines, float tol) Parameters lines IEnumerable<Line> tol float Returns IEnumerable<Vector3> DistinctPoints(IList<Line>, float) From the given set of consecutive lines (from,to not required to be adjacent between) retrieve the sorted points of the line sequence without duplicates. public static IEnumerable<Vector3> DistinctPoints(this IList<Line> lines, float tol) Parameters lines IList<Line> Input lines. tol float Comparision length tolerance. Returns IEnumerable<Vector3> Sorted lines points. EnsureDetached(IGLVertexManagerObject) Throws an exception if this object isn't detached from any vertex managers. public static void EnsureDetached(this IGLVertexManagerObject obj) Parameters obj IGLVertexManagerObject EqualsTol(in Vector2, float, in Vector2?) States if given vector2 equals (with tolerance) to the given one. public static bool EqualsTol(this in Vector2 v, float tol, in Vector2? other) Parameters v Vector2 tol float other Vector2? Returns bool EqualsTol(in Vector3, float, in Vector3?) States if given vector3 equals (with tolerance) to the given one. public static bool EqualsTol(this in Vector3 v, float tol, in Vector3? other) Parameters v Vector3 tol float other Vector3? Returns bool EqualsTol(in Vector4, float, in Vector4?) States if given vector4 equals (with tolerance) to the given one. public static bool EqualsTol(this in Vector4 v, float tol, in Vector4? other) Parameters v Vector4 tol float other Vector4? Returns bool EqualsTol(float, float, float) States if given number equals (with tolerance) to the given one. public static bool EqualsTol(this float x, float tol, float y) Parameters x float tol float y float Returns bool FeasibleTriIntersectionTests<T>(IEnumerable<T>, double, IEnumerable<T>, double) Find feasible triangle pairs that could intersect by evaluating the SearchAThing.Sci.DiscreteSpace<T> over this set of triangles against the given set of triangles. Search will be done using GetItemsAt(Vector3D, double) method within given margin parameter factor respect the triangle bbox. public static IEnumerable<(T tri1, T tri2)> FeasibleTriIntersectionTests<T>(this IEnumerable<T> tris1, double tol, IEnumerable<T> tris2, double margin = 1.2) where T : IGLTriangle Parameters tris1 IEnumerable<T> This triangles. tol double Intersection test length comparision tolerance. tris2 IEnumerable<T> Other triangles. margin double Bbox factor (Default:1.2). Returns IEnumerable<(T tri1, T tri2)> Type Parameters T FlipX(in Matrix4x4) Create a new world matrix copy of the given one but with x flipped ( then also the z ). public static Matrix4x4 FlipX(this in Matrix4x4 m) Parameters m Matrix4x4 Input world matrix. Returns Matrix4x4 FlipY(in Matrix4x4) Create a new world matrix copy of the given one but with y flipped ( then also the z ). public static Matrix4x4 FlipY(this in Matrix4x4 m) Parameters m Matrix4x4 Input world matrix. Returns Matrix4x4 FlipZ(in Matrix4x4) Create a new world matrix copy of the given one but with z flipped ( then also the x ). public static Matrix4x4 FlipZ(this in Matrix4x4 m) Parameters m Matrix4x4 Input world matrix. Returns Matrix4x4 Fmt(in Matrix4x4, int, int) Format to string given matrix. public static string Fmt(this in Matrix4x4 m, int dec, int width = 10) Parameters m Matrix4x4 Input matrix. dec int Decimal places to show in formatted string. width int Nr. of characters foreach component. Returns string String formatted representation of the matrix. Fmt(in Vector3) Invariant representation X Y Z public static string Fmt(this in Vector3 v) Parameters v Vector3 Returns string GL(GLPrimitiveType) Retrieve corresponding Silk.NET gl type from netcore-opengl GLPrimitiveType. public static PrimitiveType GL(this GLPrimitiveType type) Parameters type GLPrimitiveType Returns PrimitiveType GetTriangles(Plate, Color?, Color?, Color?, Color?, bool) Create 2 triangles from given plate. Default normal of generated triangles will be in accord between them having: first triangle (P1, P2, P3) second triangle (P3, P4, P1) public static IEnumerable<GLTriangle> GetTriangles(this Plate plate, Color? color1, Color? color2, Color? color3, Color? color4, bool setTextureST = false) Parameters plate Plate Plate for which create 2 triangles. color1 Color? (optional) color to apply to vertex1. color2 Color? (optional) color to apply to vertex2. color3 Color? (optional) color to apply to vertex3. color4 Color? (optional) color to apply to vertex4. setTextureST bool If true TextureST will be set in order to map texture on the plate. Returns IEnumerable<GLTriangle> Two triangles. GetTriangles(Plate, in Color?, bool) Create 2 triangles from given plate. Default normal of generated triangles will be in accord between them having: first triangle (P1, P2, P3) second triangle (P3, P4, P1) public static IEnumerable<GLTriangle> GetTriangles(this Plate plate, in Color? color = null, bool setTextureST = false) Parameters plate Plate Plate for which create 2 triangles. color Color? Color to apply to created triangles. setTextureST bool If true TextureST will be set in order to map texture on the plate. Returns IEnumerable<GLTriangle> Two triangles. GreatThanOrEqualsTol(float, float, float) States if given number great than or equals (with tolerance) to the given one. public static bool GreatThanOrEqualsTol(this float x, float tol, float y) Parameters x float tol float y float Returns bool GreatThanTol(float, float, float) States if given number great than (with tolerance) to the given one. public static bool GreatThanTol(this float x, float tol, float y) Parameters x float tol float y float Returns bool Intersect(GLTriangle, float, GLTriangle, out bool) Retrieve intersection segment if exists between given two triangles. public static Line? Intersect(this GLTriangle tri1, float tol, GLTriangle tri2, out bool bboxSkipped) Parameters tri1 GLTriangle First triangle. tol float Length comparision tolerance. tri2 GLTriangle Second triangle. bboxSkipped bool True if intersect test skipped due to non intersecting bboxes. Returns Line Intersection line between two triangles or null if no intersection exists. Intersect(Line, float, GLFigureBase) Intersect given raycast to given figure primitives. Given [local] raycast will automatically backwarded to [object] raycast depending on the object matrix of given figure. RayCastLocal(in Vector2) public static IEnumerable<RayCastHitTest> Intersect(this Line lraycast, float tol, GLFigureBase figure) Parameters lraycast Line Ray cast [local]. tol float Length tolerance comparision ( used for point and line primitives match ). figure GLFigureBase Figure to test for hit vs. given raycast. Returns IEnumerable<RayCastHitTest> List of hits, at most one foreach figure primitive. Inverse(in Matrix4x4) Compute the inverse of the given 4x4 matrix. public static Matrix4x4 Inverse(this in Matrix4x4 m) Parameters m Matrix4x4 Input matrix. Returns Matrix4x4 Inverse matrix. IsAttached(IGLVertexManagerObject) States if this object is currently attached to a gl vertex manager. public static bool IsAttached(this IGLVertexManagerObject obj) Parameters obj IGLVertexManagerObject Returns bool IsParallel(in Vector3, float, in Vector3) States if two vectors are parallel. public static bool IsParallel(this in Vector3 v, float tol, in Vector3 other) Parameters v Vector3 This vector. tol float Length tolerance (use SearchAThing.Sci.Constants.NormalizedLengthTolerance for normalized vectors). other Vector3 Other vector. Returns bool True if two vectors are parallel. LessThanOrEqualsTol(float, float, float) States if given number less than or equals (with tolerance) to the given one. public static bool LessThanOrEqualsTol(this float x, float tol, float y) Parameters x float tol float y float Returns bool LessThanTol(float, float, float) States if given number less than (with tolerance) to the given one. public static bool LessThanTol(this float x, float tol, float y) Parameters x float tol float y float Returns bool LineTo(in Vector3, in Vector3, in Color?) Create a gl line primitive from given two points. public static GLLine LineTo(this in Vector3 from, in Vector3 to, in Color? color = null) Parameters from Vector3 From position. to Vector3 To position. color Color? (Optional) from, to line vertexes color. Returns GLLine LineV(in Vector3, in Vector3) Create a line from this point with given extension vector. public static Line LineV(this in Vector3 from, in Vector3 v) Parameters from Vector3 This point. v Vector3 Extension vector. Returns Line LineV(in Vector3, in Vector3, in Color?) Create a gl line primitive from given position and vector extension. public static GLLine LineV(this in Vector3 p, in Vector3 v, in Color? color = null) Parameters p Vector3 From position. v Vector3 Extension vector. color Color? (Optional) from, to line vertexes color. Returns GLLine Lines(BBox, Color?) Create wcs gl lines that represents the given bounding box. public static IEnumerable<GLLine> Lines(this BBox bbox, Color? color = null) Parameters bbox BBox Bounding box for which create gl lines. color Color? (optional) color to apply created gl lines. Returns IEnumerable<GLLine> GL lines. LoadTexture(GLModel, string) Load texture from given bitmap pathfilename. public static GLTexture2D LoadTexture(this GLModel model, string pathfilename) Parameters model GLModel Gl model into which load the texture. pathfilename string Texture bitmap pathfilename. Returns GLTexture2D Gl texture 2d object. MRound(float, float) Round given number using the multiple basis. public static float MRound(this float value, float multiple) Parameters value float multiple float Returns float Magnitude(float) Retrieve the magnitude of given number. public static int Magnitude(this float value) Parameters value float Returns int MakeFigure(BBox, in Color?) Create wcs lines figure that represents the given bounding box. public static GLLineFigure MakeFigure(this BBox bbox, in Color? color) Parameters bbox BBox Bounding box for which create line figures. color Color? (optional) color to apply created figure. Returns GLLineFigure Lines figure. Max(in Vector3) Retrieve the maxest component between x, y, z of given vector3. public static float Max(this in Vector3 v) Parameters v Vector3 Returns float Move(in Matrix4x4, in Vector3?) Create a new world matrix copy of the given one but with origin moved of given delta. public static Matrix4x4 Move(this in Matrix4x4 m, in Vector3? delta = null) Parameters m Matrix4x4 Input world matrix. delta Vector3? Delta to apply to the origin. Returns Matrix4x4 Origin moved world matrix. Move(in Matrix4x4, float, float, float) Create a new world matrix copy of the given one but with origin moved of given delta. public static Matrix4x4 Move(this in Matrix4x4 m, float dx, float dy, float dz) Parameters m Matrix4x4 Input world matrix. dx float Delta (x) to apply to the origin. dy float Delta (y) to apply to the origin. dz float Delta (z) to apply to the origin. Returns Matrix4x4 Origin moved world matrix. Move<T>(IEnumerable<T>, Vector3, bool) Move given figures by the given delta. public static IEnumerable<T> Move<T>(this IEnumerable<T> figures, Vector3 coord, bool relative = true) where T : IGLFigure Parameters figures IEnumerable<T> Figures to move. coord Vector3 Delta vector3 [object] relative bool If true (default) sum the given delta elsewhere replace the object matrix translation. Returns IEnumerable<T> This figure reference. Type Parameters T Remarks No vertex change, but only the object matrix associated to this figure. Object matrix will replaced with a single translation. Move<T>(T, in Vector3, bool) Move the figure by the given delta. public static T Move<T>(this T figure, in Vector3 coord, bool relative = true) where T : IGLFigure Parameters figure T Figure to move. coord Vector3 Delta vector3 [object] relative bool If true (default) sum the given delta elsewhere replace the object matrix translation. Returns T This figure reference. Type Parameters T Remarks No vertex change, but only the object matrix associated to this figure. Object matrix will replaced with a single translation. Move<T>(T, float, float, float, bool) Move the figure by the given delta. public static T Move<T>(this T figure, float dx, float dy, float dz, bool relative = true) where T : IGLFigure Parameters figure T Figure to move. dx float Delta (x) [object] dy float Delta (y) [object] dz float Delta (z) [object] relative bool If true (default) sum the given delta elsewhere replace the object matrix translation. Returns T This figure reference. Type Parameters T Remarks No vertex change, but only the object matrix associated to this figure. Object matrix will replaced with a single translation. Normalized(in Vector3) Normalize given vector. public static Vector3 Normalized(this in Vector3 v) Parameters v Vector3 Returns Vector3 OBBox(IEnumerable<GLFigureBase>) Object space bbox of given figures vertexes. public static BBox OBBox(this IEnumerable<GLFigureBase> figures) Parameters figures IEnumerable<GLFigureBase> Gl figures to compute bbox. Returns BBox Figures bbox [object]. Origin(in Matrix4x4) Extract the origin (m4[1..3]) from the given world matrix. public static Vector3 Origin(this in Matrix4x4 m) Parameters m Matrix4x4 Returns Vector3 PositionSignature(IGLVertex, float) Retrieve vertex position signature within given tolerance. public static string PositionSignature(this IGLVertex glVertex, float tol) Parameters glVertex IGLVertex tol float Returns string PositionSignature(Vector3, float) Retrieve vector3 position signature within given tolerance. public static string PositionSignature(this Vector3 position, float tol) Parameters position Vector3 tol float Returns string Project(in Vector3, in Matrix4x4) Project this vector to given xy plane. public static Vector3? Project(this in Vector3 v, in Matrix4x4 xyPlane) Parameters v Vector3 Vector to project. xyPlane Matrix4x4 XY plane which project the vector into. Returns Vector3? Projected vector. Project(in Vector3, in Vector3) Project this vector to the other given. References: https://en.wikipedia.org/wiki/Vector_projection public static Vector3 Project(this in Vector3 v, in Vector3 other) Parameters v Vector3 Vector to project. other Vector3 Receiving projection vector. Returns Vector3 Projection point if any on the other vector. SaveTo(SKBitmap, string, SKEncodedImageFormat, int) Helper method to save skia bitmap to output image file. public static void SaveTo(this SKBitmap bitmap, string outputPathfilename, SKEncodedImageFormat format = SKEncodedImageFormat.Png, int quality = 80) Parameters bitmap SKBitmap outputPathfilename string format SKEncodedImageFormat quality int ScaleAbout(in Vector3, in Vector3, float) Scale given vector respect given origin by the given scale factor. public static Vector3 ScaleAbout(this in Vector3 v, in Vector3 origin, float factor) Parameters v Vector3 Vector to scale. origin Vector3 Reference point. factor float Scale factor. Returns Vector3 Scaled vector. Segments(IGLTriangle) Retrieve gl triangle segments {v1,v2},{v2,v3},{v3,v1} [object]. public static IEnumerable<Line> Segments(this IGLTriangle tri) Parameters tri IGLTriangle Returns IEnumerable<Line> SetAlphaF(in Color, float) Set alpha channel Alpha=1 (full opaque). Alpha=0 (full transparent). public static Color SetAlphaF(this in Color color, float alpha) Parameters color Color alpha float Returns Color SetAlpha<T>(T, float?) Set figure alpha ( 0:full transparent, 1:full opaque ). Alpha Figure on which operate. Alpha (0:transparent, 1:opaque). public static T SetAlpha<T>(this T fig, float? alpha) where T : IGLFigure Parameters fig T alpha float? Returns T Type Parameters T SetColor(IGLVertex, in Color) Change the color of the vertex. public static IGLVertex SetColor(this IGLVertex vertex, in Color color) Parameters vertex IGLVertex Vertex which change the color. color Color Color to apply. Returns IGLVertex SetColor(IGLVertex, in Vector4) Change the color of the vertex. public static IGLVertex SetColor(this IGLVertex vertex, in Vector4 rgbaColor) Parameters vertex IGLVertex Vertex which change the color. rgbaColor Vector4 Color to apply encoded in vector4 (range 0..1) as (red, green, blue, alpha). Alpha=1 (full opaque). Alpha=0 (full transparent). Returns IGLVertex SetColor<T>(IEnumerable<T>, in Color) Set the color primitives vertexes. public static IEnumerable<T> SetColor<T>(this IEnumerable<T> primitives, in Color color) where T : GLPrimitiveBase Parameters primitives IEnumerable<T> Gl primitives. color Color Color to set on primitives vertexes. Returns IEnumerable<T> Calling enumerable. Type Parameters T SetColor<T>(IEnumerable<T>, in Vector4) Set the color primitives vertexes. public static IEnumerable<T> SetColor<T>(this IEnumerable<T> primitives, in Vector4 rgbaColor) where T : GLPrimitiveBase Parameters primitives IEnumerable<T> Gl primitives. rgbaColor Vector4 Color to set on primitives vertexes. Returns IEnumerable<T> Calling enumerable. Type Parameters T SetColor<T>(T, in Color) Set color on primitives vertexes of this figure. public static T SetColor<T>(this T fig, in Color color) where T : IGLFigure Parameters fig T Figure on which operate. color Color Color to set on vertexes. Returns T This figure. Type Parameters T SetColor<T>(T, in Vector4) Set color on primitives vertexes of this figure. public static T SetColor<T>(this T fig, in Vector4 rgbaColor) where T : IGLFigure Parameters fig T Figure on which operate. rgbaColor Vector4 Color to set on vertexes. Returns T This figure. Type Parameters T SetOrder<T>(T, int) Change the figure order. public static T SetOrder<T>(this T fig, int order) where T : IGLFigure Parameters fig T Figure on which operate. order int Order to set. Returns T This figure. Type Parameters T See Also Order SetOrigin(in Matrix4x4, in Vector3) Create a new world matrix copy of the given one but with origin set to given one. public static Matrix4x4 SetOrigin(this in Matrix4x4 m, in Vector3 origin) Parameters m Matrix4x4 Input world matrix. origin Vector3 New origin. Returns Matrix4x4 Origin repositioned world matrix. SetScreenMode<T>(IEnumerable<T>, bool) Sets ScreenCoordMode on given figures. public static IEnumerable<T> SetScreenMode<T>(this IEnumerable<T> figures, bool screenCoordMode) where T : IGLFigure Parameters figures IEnumerable<T> screenCoordMode bool Returns IEnumerable<T> Type Parameters T SetScreenMode<T>(T, bool) Sets ScreenCoordMode on given figure. public static T SetScreenMode<T>(this T figure, bool screenCoordMode) where T : IGLFigure Parameters figure T screenCoordMode bool Returns T Type Parameters T ShortString(CameraViewType) public static string ShortString(this CameraViewType cvt) Parameters cvt CameraViewType Returns string ToColor(HSV) Retrieve system drawing color from given ColorHelper HSV color. public static Color ToColor(this HSV hsv) Parameters hsv HSV Returns Color ToColor(RGB) Retrieve system drawing color from given ColorHelper RGB color. public static Color ToColor(this RGB rgb) Parameters rgb RGB Returns Color ToColor(in Vector4) Convert given vector4 (red, green, blue, alpha) color to Color. public static Color ToColor(this in Vector4 rgbaColor) Parameters rgbaColor Vector4 Color encoded in vector4 (range 0..1) as (red, green, blue, alpha). Alpha=1 (full opaque). Alpha=0 (full transparent). Returns Color ToDxfColor(Color) Convert system drawing color to dxf color. public static AciColor ToDxfColor(this Color color) Parameters color Color Returns AciColor ToDxfLine(IGLLine) Create dxf line from given gl line. public static Line ToDxfLine(this IGLLine line) Parameters line IGLLine Returns Line ToDxfPoint(IGLPoint) Create dxf point from given gl point. public static Point ToDxfPoint(this IGLPoint point) Parameters point IGLPoint Returns Point ToDxfVector3(IGLVertex) Convert given gl vertex to dxf vector3. public static Vector3 ToDxfVector3(this IGLVertex vertex) Parameters vertex IGLVertex Returns Vector3 ToDxfVector3(in Vector3) Convert given system numerics vector3 to dxf vector3 public static Vector3 ToDxfVector3(this in Vector3 v) Parameters v Vector3 Returns Vector3 ToFigure(IEnumerable<GLPoint>) Create point figure from given point set. public static GLPointFigure ToFigure(this IEnumerable<GLPoint> points) Parameters points IEnumerable<GLPoint> Returns GLPointFigure ToFigure(IEnumerable<GLTriangle>) Create a gl figure from given gl triangles. public static GLTriangleFigure ToFigure(this IEnumerable<GLTriangle> triangles) Parameters triangles IEnumerable<GLTriangle> Returns GLTriangleFigure ToFigure(IEnumerable<Vector3>) Create point figure from given point set. public static GLPointFigure ToFigure(this IEnumerable<Vector3> points) Parameters points IEnumerable<Vector3> Returns GLPointFigure ToFloat(double) Convert given double to float ensuring not exceed the float range. public static float ToFloat(this double d) Parameters d double Double which convert to float. Returns float Float of the given double. ToGLLine(Line, in Color, in Color) Create a gl line primitive from given line geometry applying given from, to colors. public static GLLine ToGLLine(this Line line, in Color colorFrom, in Color colorTo) Parameters line Line Line geometry. colorFrom Color Color to apply the from vertex. colorTo Color Color to apply the to vertex. Returns GLLine GL line primitive. ToGLLine(Line, in Color?) Create a gl line primitive from given line geometry. public static GLLine ToGLLine(this Line line, in Color? color) Parameters line Line Line geometry. color Color? (Optional) from, to line vertexes color. Returns GLLine GL line primitive. ToHSV(Color) Retrieve ColorHelper HSV color from given system drawing color. public static HSV ToHSV(this Color color) Parameters color Color Returns HSV ToLine(Line3D) Convert given sci line to line. public static Line ToLine(this Line3D line) Parameters line Line3D Returns Line ToLine3D(Line) Convert given line to sci line. public static Line3D ToLine3D(this Line line) Parameters line Line Returns Line3D ToRGB(HSV) Retrieve ColorHelper RGB color from given ColorHelper HSV color. public static RGB ToRGB(this HSV hsv) Parameters hsv HSV Returns RGB ToRGB(Color) Retrieve ColorHelper RGB color from given system drawing color. public static RGB ToRGB(this Color color) Parameters color Color Returns RGB ToString(in Vector3, int) public static string ToString(this in Vector3 v, int digits = 3) Parameters v Vector3 digits int Returns string ToString(in Vector3, float) public static string ToString(this in Vector3 v, float tol) Parameters v Vector3 tol float Returns string ToString(float, int) public static string ToString(this float d, int significantDigits) Parameters d float significantDigits int Returns string ToTriangle3D(GLTriangle) Create sci Triangle3D from given gl triangle. public static Triangle3D ToTriangle3D(this GLTriangle tri) Parameters tri GLTriangle Returns Triangle3D ToUCS(in Vector3, in Matrix4x4, bool) Transformation given one from wcs toward the given destination coordinate system. public static Vector3 ToUCS(this in Vector3 v, in Matrix4x4 cs, bool evalCSOrigin = true) Parameters v Vector3 Vector to transform. cs Matrix4x4 Destination coordinate system. evalCSOrigin bool If true the origin of the coordinate system will be evaluated during transformation ( default: true ). Returns Vector3 ToVector2(in Size) Convert given screen size (width, height) to a vector2 (x, y). public static Vector2 ToVector2(this in Size size) Parameters size Size Returns Vector2 ToVector3(in Color) Convert given Color to vector3 (red, green, blue) discarding alpha information. public static Vector3 ToVector3(this in Color color) Parameters color Color Color to convert. Returns Vector3 ToVector4(in Color, float?) Convert given Color to vector4 (red, green, blue, alpha). public static Vector4 ToVector4(this in Color color, float? alpha = null) Parameters color Color Color to convert. alpha float? (optional) Alpha override. Alpha=1 (full opaque). Alpha=0 (full transparent). If not specified given color alpha will taken. Returns Vector4 ToWCS(in Vector3, in Matrix4x4, bool) Transformation given one from the coordinate system given toward the wcs. public static Vector3 ToWCS(this in Vector3 v, in Matrix4x4 cs, bool evalCSOrigin = true) Parameters v Vector3 Vector to transform. cs Matrix4x4 Source coordinate system. evalCSOrigin bool If true the origin of the coordinate system will be evaluated during transofmration ( default: true ). Returns Vector3 Transform(Line, in Matrix4x4) Create a new line with from, to transformed by the given transformation matrix. public static Line Transform(this Line line, in Matrix4x4 m) Parameters line Line Line to transform. m Matrix4x4 Transformation matrix. Returns Line Transformed line. Transform(in Vector3, in Matrix4x4) Transform given one within given transformation matrix. public static Vector3 Transform(this in Vector3 v, in Matrix4x4 transform) Parameters v Vector3 Vector to transform. transform Matrix4x4 Transformation matrix. Returns Vector3 Transformed vector. Vertexes(IGLFigure) Vertexes belonging this figure [object]. public static IEnumerable<GLVertex> Vertexes(this IGLFigure figure) Parameters figure IGLFigure Returns IEnumerable<GLVertex>"
  },
  "api/SearchAThing.OpenGL.Core.FigureEvent.html": {
    "href": "api/SearchAThing.OpenGL.Core.FigureEvent.html",
    "title": "Delegate FigureEvent | netcore-opengl",
    "keywords": "Delegate FigureEvent Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Generic figure event from the vertex manager. public delegate void FigureEvent(IGLVertexManager vertexManager, GLFigureBase figure) Parameters vertexManager IGLVertexManager Generic figure event from the vertex manager. figure GLFigureBase Generic figure event from the vertex manager."
  },
  "api/SearchAThing.OpenGL.Core.FigureInvalidatedDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.FigureInvalidatedDelegate.html",
    "title": "Delegate FigureInvalidatedDelegate | netcore-opengl",
    "keywords": "Delegate FigureInvalidatedDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Delegate for FigureInvalidated. This event is managed internally by the GLModel and signal that a model figure changed some of its vertex propertties. public delegate void FigureInvalidatedDelegate(IGLFigure figure) Parameters figure IGLFigure GL figure invalidated."
  },
  "api/SearchAThing.OpenGL.Core.FiguresEvent.html": {
    "href": "api/SearchAThing.OpenGL.Core.FiguresEvent.html",
    "title": "Delegate FiguresEvent | netcore-opengl",
    "keywords": "Delegate FiguresEvent Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Generic figures event from the vertex manager. public delegate void FiguresEvent(IGLVertexManager vertexManager, GLFigureBase[] figures) Parameters vertexManager IGLVertexManager Generic figures event from the vertex manager. figures GLFigureBase[] Generic figures event from the vertex manager."
  },
  "api/SearchAThing.OpenGL.Core.GLBuildModelDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLBuildModelDelegate.html",
    "title": "Delegate GLBuildModelDelegate | netcore-opengl",
    "keywords": "Delegate GLBuildModelDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Build model action that will executed each time the model requires a full rebuild because invalidated. public delegate void GLBuildModelDelegate(GLControl glControl, bool initialCall) Parameters glControl GLControl GL control belonging to model that requires rebuild. initialCall bool True is this is the first-est call to the build model."
  },
  "api/SearchAThing.OpenGL.Core.GLContext.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLContext.html",
    "title": "Class GLContext | netcore-opengl",
    "keywords": "Class GLContext Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl context object with purpose to: create Silk.NET gl window Silk.NET.Windowing.IWindow. expose Silk.NET.OpenGL.GL interface. handle font char cache through instance of GLFontCharManager. load GLPipeline objects used by the framework. handle environment variable \"OPENGL_LIBRARY_PATH\" for mesa win library } loading. Useful for windows guest on virtualbox linux host. handle gl debug messages by using DebugMessageCallback. public class GLContext : IDisposable Inheritance object GLContext Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Toolkit.MakeTextFigure(GLContext, GLText) Constructors GLContext() Construct a new gl context. public GLContext() Properties DepthShader (depth) Shader used for shadow generation. public GLPipeline DepthShader { get; } Property Value GLPipeline See Also UseShadow FontCharMgr Gl font char manager used to cache font char bitmap and textures. public GLFontCharManager FontCharMgr { get; } Property Value GLFontCharManager GL Silk.NET GL handle. public GL GL { get; } Property Value GL MainShader Shader used to render main scene. public GLPipeline MainShader { get; } Property Value GLPipeline NormalShader (geometry) Shader used to render triangle vertex normals. ShowNormals. public GLPipeline NormalShader { get; } Property Value GLPipeline ShadeWithEdgeShader (geometry) Shader used to render triangles with edges. public GLPipeline ShadeWithEdgeShader { get; } Property Value GLPipeline See Also ShadeWithEdge VertexVisibilityLineShader (geometry) Shader used to render lines with point on their vertexes. public GLPipeline VertexVisibilityLineShader { get; } Property Value GLPipeline See Also VertexVisbiility VertexVisibilityTriShader (geometry) Shader used to render triangles with point on their vertexes. public GLPipeline VertexVisibilityTriShader { get; } Property Value GLPipeline See Also VertexVisbiility Methods AddDisposedTextureId(uint) public void AddDisposedTextureId(uint textureId) Parameters textureId uint AutoCleanup() release disposed resources ( texture, ... ) ; this will be called during GL2DTexture() constructor or before GLModel.EnsureModel() or before GLControl.Invalidate() public void AutoCleanup() Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~GLContext() protected ~GLContext() GetVersion() Retrieve GL library version. public string GetVersion() Returns string LoadLibrary(string) Windows load dll library invoke. public static extern IntPtr LoadLibrary(string path) Parameters path string DLL library path Returns IntPtr"
  },
  "api/SearchAThing.OpenGL.Core.GLControl.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLControl.html",
    "title": "Class GLControl | netcore-opengl",
    "keywords": "Class GLControl Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Provides basic opengl abstraction to create entities such as GLPoint, GLLine and GLTriangle. It provides high level functions to manage camera view and related pan/zoom functions. The Invalidate(InvalidateEnum) emit a RenderInvalidated event that SearchAThing.OpenGL.GUI.AvaloniaGLControl listen to invalidte its visual. image \\image html Render.svg width=100% public class GLControl : INotifyPropertyChanged Inheritance object GLControl Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Toolkit.MakeFrustum(GLControl) Constructors GLControl(GLControl, IRenderDevice) Create a new gl control using the same control properties of the given template. public GLControl(GLControl template, IRenderDevice device) Parameters template GLControl Gl control template to config this new one created. device IRenderDevice Target render device. GLControl(GLModel, IRenderDevice) Create a new gl control attached to given model and rendering to the given rendere device. public GLControl(GLModel glModel, IRenderDevice device) Parameters glModel GLModel Gl model. device IRenderDevice Target render device. Properties AutoAdjustNearFar Auto adjust near,far to prevent z-fighting. public bool AutoAdjustNearFar { get; set; } Property Value bool See Also PreventZFighting(BBox, in Matrix4x4, in Matrix4x4, in Vector3, out float, out float) CameraPos CameraPos [world]. public Vector3 CameraPos { get; set; } Property Value Vector3 CameraTarget CameraTarget [world]. public Vector3 CameraTarget { get; set; } Property Value Vector3 CameraUp CameraUp [world] public Vector3 CameraUp { get; set; } Property Value Vector3 ClearColor Default scene background color ( Default: black ). public Color ClearColor { get; set; } Property Value Color ControlFigureVisible Control specific custom figure visibility. If null default model figure visibiltiy not changes. Args: (GLControl glControl, GLFigureBase figure). public ControlFigureVisibileDelegate? ControlFigureVisible { get; set; } Property Value ControlFigureVisibileDelegate Remarks Keep delegate function as light as possible to avoid performance penalty. ControlOverlay1 ControlOverlay1 ( used for IdentifyCoord output ) public string ControlOverlay1 { get; set; } Property Value string DepthShader Depth only shader for shadow cube maps ( retrieved from gl context ). public GLPipeline DepthShader { get; } Property Value GLPipeline Device Render device associateed to this control. public IRenderDevice Device { get; } Property Value IRenderDevice Far Far clipping plane distance [world]. public float Far { get; set; } Property Value float See Also CreatePerspectiveProjectionMatrix(float, float, float, float, out Matrix4x4) PreventZFighting(BBox, in Matrix4x4, in Matrix4x4, in Vector3, out float, out float) FovDeg Perspective field of view [world] (deg). public float FovDeg { get; set; } Property Value float See Also CreatePerspectiveProjectionMatrix(float, float, float, float, out Matrix4x4) FrameRate Stats the number of render per sec given by latest rendered frames. public float FrameRate { get; set; } Property Value float GLContext Gl context reference ( retrieved through gl model ). public GLContext GLContext { get; } Property Value GLContext GLModel Gl model associated to this control. public GLModel GLModel { get; } Property Value GLModel ID unique control ID public string ID { get; } Property Value string IdentifyCoord If true an overlay display vertex under mouse coord. public bool IdentifyCoord { get; set; } Property Value bool IsControlInvalidated Triggered by control view/preferences and by model lights changes. public bool IsControlInvalidated { get; } Property Value bool IsInitial States if this gl control is the initial created into a gl split view. public bool IsInitial { get; } Property Value bool IsRenderInvalidated States if last render transferred is actually invalidated respect to the gl model or this gl control view/preferences. Evaluated in Render(IRenderDevice?) to avoid re-entrance. public bool IsRenderInvalidated { get; } Property Value bool IsRendering States if rendering is in progress. Its used by Render(IRenderDevice?) and Invalidate(InvalidateEnum) to avoid re-entrance from RenderInvalidated event callback. public bool IsRendering { get; } Property Value bool LastCameraView public CameraViewType? LastCameraView { get; } Property Value CameraViewType? LastRenderTime Time (sec) required for latest render. public float LastRenderTime { get; set; } Property Value float MainShader Main shader ( retrieved from gl context ). public GLPipeline MainShader { get; } Property Value GLPipeline ModelMatrix ModelMatrix [local] of this control. public Matrix4x4 ModelMatrix { get; set; } Property Value Matrix4x4 See Also CreateModelMatrix(in Vector3, in Quaternion, in Vector3, out Matrix4x4) ModelMatrixFmt Formatted version of model matrix. public string? ModelMatrixFmt { get; } Property Value string Near Near clipping plane distance [world]. public float Near { get; set; } Property Value float See Also CreatePerspectiveProjectionMatrix(float, float, float, float, out Matrix4x4) PreventZFighting(BBox, in Matrix4x4, in Matrix4x4, in Vector3, out float, out float) NormalShader Geometry shader used if ShowNormals enabled ( retrieved from gl context ). public GLPipeline NormalShader { get; } Property Value GLPipeline OrthoZoom Ortho zoom [eye] factor. public float OrthoZoom { get; set; } Property Value float See Also CreateOrthogonalProjectionMatrix(in Vector2, float, float, float, in Matrix4x4, out Matrix4x4) Perspective If true perspective projection matrix will be used, orthogonal projection matrix elsewhere. (default:true) public bool Perspective { get; set; } Property Value bool See Also CreatePerspectiveProjectionMatrix(float, float, float, float, out Matrix4x4) CreateOrthogonalProjectionMatrix(in Vector2, float, float, float, in Matrix4x4, out Matrix4x4) PointerCoord Actual pointer coord [screen] public Vector2 PointerCoord { get; set; } Property Value Vector2 PointerLRayCast Actual pointer raycast [local] public Line? PointerLRayCast { get; } Property Value Line ProjectionMatrix ProjectionMatrix [eye]. public Matrix4x4 ProjectionMatrix { get; set; } Property Value Matrix4x4 See Also CreatePerspectiveProjectionMatrix(float, float, float, float, out Matrix4x4) CreateOrthogonalProjectionMatrix(in Vector2, float, float, float, in Matrix4x4, out Matrix4x4) ProjectionMatrixFmt Formatted version of project matrix. public string? ProjectionMatrixFmt { get; } Property Value string RenderCount Stats the count of completed Render(IRenderDevice?) calls. public int RenderCount { get; } Property Value int RotationCenter Rotation center [local]. public Vector3 RotationCenter { get; } Property Value Vector3 ScreenModelMatrix Screen model matrix [world]. public Matrix4x4 ScreenModelMatrix { get; set; } Property Value Matrix4x4 See Also ScreenCoordMode ScreenProjectionMatrix ScreenProjectionMatrix [eye]. public Matrix4x4 ScreenProjectionMatrix { get; set; } Property Value Matrix4x4 See Also ScreenCoordMode ShadeWithEdge If true a geometry shader will generate addictional lines that marks triangle edges if displayed in shaded mode. public bool ShadeWithEdge { get; set; } Property Value bool ShadeWithEdgeShader Geometry shader used if ShadeWithEdge enabled ( retrieved from gl context ). public GLPipeline ShadeWithEdgeShader { get; } Property Value GLPipeline ShadowHeight Shadow height (pixels) public uint ShadowHeight { get; set; } Property Value uint ShadowWidth Shadow width (pixels) public uint ShadowWidth { get; set; } Property Value uint ShowCameraObject If true a green camera frustum object represented with lines are displayed using a temporary vertex manager at runtime. public bool ShowCameraObject { get; set; } Property Value bool ShowModelBBox If true the model bbox as lines are displayed using a temporary vertex manager at runtime. public bool ShowModelBBox { get; set; } Property Value bool ShowNormals If true a geometry shader will create yellow vertex normals using a size specified by a factor of the bbox. public bool ShowNormals { get; set; } Property Value bool See Also NormalFactor Tag User defined object. public object? Tag { get; set; } Property Value object Title Title public string Title { get; set; } Property Value string UseShadow If true and at least one point light exists in the gl model shadows are dropped, no shadow elsewhere (default:true). public bool UseShadow { get; set; } Property Value bool UseTexture If true triangles with texture will display the texture, empty elsewhere. (default:true) public bool UseTexture { get; set; } Property Value bool VertexVisbiility If true a geometry shader will generate addictional point that marks primitive vertexes. public bool VertexVisbiility { get; set; } Property Value bool VertexVisibilityLineShader Geometry shader used to show line vertexes if VertexVisbiility enabled ( retrieved from gl context ). public GLPipeline VertexVisibilityLineShader { get; } Property Value GLPipeline VertexVisibilityTriShader Geometry shader used to show triangle vertexes if VertexVisbiility enabled ( retrieved from gl context ). public GLPipeline VertexVisibilityTriShader { get; } Property Value GLPipeline ViewMatrix ViewMatrix [world] of this control. public Matrix4x4 ViewMatrix { get; set; } Property Value Matrix4x4 See Also CreateViewMatrix(in Vector3, in Vector3, in Vector3, out Matrix4x4) ViewMatrixFmt Formatted version of view matrix. public string? ViewMatrixFmt { get; } Property Value string Wireframe If true triangles will be displayed using lines, shaded elsewhere (default:false). public bool Wireframe { get; set; } Property Value bool Methods CameraRotate(float, float, bool) Rotate the camera [view] a given rotation center [local]. ( not yet tested ) public void CameraRotate(float sAngleXRad, float sAngleYRad, bool invalidate = true) Parameters sAngleXRad float sAngleYRad float invalidate bool If true refresh the scene. See Also CameraRotate(float, float, in Vector3, in Vector3, in Vector3, out Vector3, out Vector3) CameraRotateDown() Rotate the camera down of a little factor. public void CameraRotateDown() CameraRotateLeft() Rotate the camera left of little factor. public void CameraRotateLeft() CameraRotateRight() Rotate the camera right of a little factor. public void CameraRotateRight() CameraRotateUp() Rotate the camera up of a little factor. public void CameraRotateUp() CameraView(CameraViewType, bool, bool) Set the view using given cube view type. public void CameraView(CameraViewType type, bool zoomFit = true, bool invalidate = true) Parameters type CameraViewType Cube view type CameraViewType. zoomFit bool If true execute a zoom fit (Default: true). invalidate bool If true refresh the scene. CameraZoom(float, bool) Zoom eye space by given scale factor. public void CameraZoom(float scale, bool invalidate = true) Parameters scale float Zoom scale factor. invalidate bool If true refresh the scene. See Also PerspectiveZoom(float, BBox, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) OrthoZoom CameraZoomIn(float, bool) Zoom in eye space. public void CameraZoomIn(float scale = 0.1, bool invalidate = true) Parameters scale float Zoom in scale factor. invalidate bool If true refresh the scene. CameraZoomOut(float, bool) Zoom out eye space. public void CameraZoomOut(float scale = 0.1, bool invalidate = true) Parameters scale float Zoom out scale factor. invalidate bool If true refresh the scene. CaptureImage(string) Capture an image of current control using offscreen render device and actual rendere device size. public void CaptureImage(string offscreenPathfilename) Parameters offscreenPathfilename string Pathfilename where to save the capture. CaptureImage(string, int, int) Capture an image of current control using offscreen render device with given render device size. public void CaptureImage(string offscreenPathfilename, int w, int h) Parameters offscreenPathfilename string Pathfilename where to save the capture. w int Width of capture image (pixels). h int Height of capture image (pixels). GetGLMatrixes() Retrieve model/view/projection matrixes and camera pos/target/up through a single object. public GLMatrixes GetGLMatrixes() Returns GLMatrixes GetViewNfo(bool) Retrieve actual view config. public ViewNfo GetViewNfo(bool includeLights = true) Parameters includeLights bool If true (default) lights will saved within view nfo. Returns ViewNfo See Also SaveView(string?) Invalidate(InvalidateEnum) Regenerate the model with BuildModel if this is the first invalidation or the invalidate argument is of type RebuildModelAndRedraw. Emits a RenderInvalidated event that avalonia gl control will intercept to update the render surface. public void Invalidate(InvalidateEnum invalidate = InvalidateEnum.RedrawOnly) Parameters invalidate InvalidateEnum Type of invalidation (Default:RedrawOnly). InvalidateAll() All gl split control invalidation. public void InvalidateAll() LoadView(string?) Restore current view config from given pathfilename. public void LoadView(string? pathfilename = null) Parameters pathfilename string See Also SetViewNfo(ViewNfo, bool) ModelRotate(double, double, Vector3?, GLMatrixes?, bool) Rotate the model by given [eye] x,y angles around given [local] rotation center. public void ModelRotate(double angleXRad, double angleYRad, Vector3? rot_center = null, GLMatrixes? mFrom = null, bool invalidate = true) Parameters angleXRad double Eye space x angle rotation (rad). angleYRad double Eye space y angle rotation (rad). rot_center Vector3? (Optional) Local space (x,y,z) rotation center [local]. mFrom GLMatrixes (Optional) gl matrixes at rotation start. invalidate bool If true refresh the scene. ModelRotateDown() Rotate the model down of a little factor. public void ModelRotateDown() ModelRotateLeft() Rotate the model left of a little factor. public void ModelRotateLeft() ModelRotateRight() Rotate the model right of a little factor. public void ModelRotateRight() ModelRotateUp() Rotate the model up of a little factor. public void ModelRotateUp() OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Pan(in Vector2, in Vector2, GLMatrixes?, bool) Pan the view by the given screen translation. public void Pan(in Vector2 screenFrom, in Vector2 screenTo, GLMatrixes? mFrom = null, bool invalidate = true) Parameters screenFrom Vector2 Pan screen position from. screenTo Vector2 Pan screen position to. mFrom GLMatrixes (Optional) begin pan matrixes. invalidate bool If true refresh the scene. See Also PerspectivePan(in Vector3, in Vector2, in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) OrthoPan(in Vector2, in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) GetGLMatrixes() PanDown() Pan the view down of a little factor public void PanDown() PanLeft() Pan the view left of a little factor. public void PanLeft() PanRight() Pan the view right of a little factor. public void PanRight() PanUp() Pan the view up of a little factor. public void PanUp() RayCastLocal(in Vector2) Create a raycast Line suitable for hit test of figure primitives. public Line RayCastLocal(in Vector2 screen) Parameters screen Vector2 Screen coord (x,y) [screen]. Returns Line Examples Example \\snippet{'trimleft'} example-0007/Program.cs RayCast Render(IRenderDevice?) Main gl render process. public void Render(IRenderDevice? device = null) Parameters device IRenderDevice Target render surface. SaveView(string?) Save actual view info to given pathfilename. A Notification GLControl.NotificationRequest event emitted. ViewDefaultPathfilename public void SaveView(string? pathfilename = null) Parameters pathfilename string SetRotationCenter(bool) Set the rotation center for model and camera. public void SetRotationCenter(bool keepSelection = false) Parameters keepSelection bool If false (Default) the active selection will cleared and mode back to view gesture. SetViewNfo(ViewNfo, bool) Restore current view config. public void SetViewNfo(ViewNfo nfo, bool includeLights = true) Parameters nfo ViewNfo view config object includeLights bool If true (default) lights set to the model. See Also LoadView(string?) Size() Get render surface size (pixels). public Vector2 Size() Returns Vector2 SwitchSelectionMode(bool) Switch (model) selection mode. public void SwitchSelectionMode(bool invalidate = true) Parameters invalidate bool If true refresh the scene. Tilt(float, bool) Tilt camera [view] by rotating it's up vector around [view] z axis. public void Tilt(float angleDeg = 2, bool invalidate = true) Parameters angleDeg float Tilt angle (deg) [view]. invalidate bool If true refresh the scene. See Also CameraTilt(float, in Vector3, out Vector3) TiltLeft() Tilt the camera left of a little factor. public void TiltLeft() TiltRight() Titl the camera right of a little factor. public void TiltRight() ToggleCameraObject(bool) Toggle display of camera frustum object ( generated at runtime through a temporary vertex manager ). public void ToggleCameraObject(bool invalidate = true) Parameters invalidate bool If true refresh the scene. ToggleIdentifyCoord() Toggle identify vertex coord. public void ToggleIdentifyCoord() TogglePerspective(bool) Toggle perspective mode. public void TogglePerspective(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also Perspective ToggleShadeWithEdge(bool) Toggle shade with edge. public void ToggleShadeWithEdge(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also ShadeWithEdge ToggleShowModelBBox(bool) Toggle display of model bounding box ( generated at runtime through a temporary vertex manager ). public void ToggleShowModelBBox(bool invalidate = true) Parameters invalidate bool If true refresh the scene. ToggleShowNormals(bool) Toggle show normals. public void ToggleShowNormals(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also ShowNormals ToggleUseShadow(bool) Toggle shadows generation. public void ToggleUseShadow(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also UseShadow ToggleUseTexture(bool) Toggle use of textures. public void ToggleUseTexture(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also UseTexture ToggleVertexVisibility(bool) Toggle vertex visibility. public void ToggleVertexVisibility(bool invalidate = true) Parameters invalidate bool If true refresh the scene. ToggleWireframe(bool) Toggle wireframe mode. public void ToggleWireframe(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also Wireframe ZoomFit(bool) Fit gl model into the view. public void ZoomFit(bool invalidate = true) Parameters invalidate bool If true refresh the scene. See Also PerspectiveZoomFit(IEnumerable<Vector3>, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, in Vector3, float, out Vector3, out Vector3, int, float) OrthoZoomFit(IEnumerable<Vector3>, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, float, float, float, Vector3, Vector3, Vector3, out float, out Vector3, out Vector3) Events InvalidateAllRequest public event EventHandler? InvalidateAllRequest Event Type EventHandler NotEmptyRenderPreview Event generated at first non bbox empty render generated. public event RenderPreviewDelegate? NotEmptyRenderPreview Event Type RenderPreviewDelegate PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler RenderInvalidated Event emitted when Invalidate(InvalidateEnum) called. Handled by avalonia gl control to execute the Render(IRenderDevice?) and transfer gl pixels to the device target surface. public event EventHandler? RenderInvalidated Event Type EventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLFigureBase.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLFigureBase.html",
    "title": "Class GLFigureBase | netcore-opengl",
    "keywords": "Class GLFigureBase Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Base abstract class for point, line, triangle figures. public abstract class GLFigureBase : IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLFigureBase Implements IGLFigure IGLVertexManagerObject INotifyPropertyChanged Derived GLFigureTypeBase<P> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties Alpha Allow to change alpha (0:full transparent, 1:full opaque) of the figure without the need to change primitives color. If null figure primitives alpha will not overriden. (Default: null) Changing this property emits FigureInvalidated event. public float? Alpha { get; set; } Property Value float? EvalInShadowMap States if this figure has to be considered for building of the shadow map. While is true by default in GLFigureBase, is overriden to false by GLTextCharFigure specialization of GLTriangleFigure in order to avoid dropping shadows of the triangles used by the font textures. public virtual bool EvalInShadowMap { get; } Property Value bool ExcludeFromShadeWithEdge ExcludeFromShadeWithEdge public bool ExcludeFromShadeWithEdge { get; set; } Property Value bool ExpandBBox States if this figure is considered in bbox expansion (Default: true). Useful to avoid cs figure or non related to content of interest to decrease view and zoom experience. public bool ExpandBBox { get; set; } Property Value bool Highlight Enable highlight of a figure with a color ( Default: Yellow ). Changing this property emits FigureInvalidated event. public bool Highlight { get; set; } Property Value bool Indexes List of vertex manager vertex indexes used by this figure. Used in the final render phase where GL.DrawElements take place to mapped as opengl ElementArrayBuffer. public IEnumerable<uint> Indexes { get; } Property Value IEnumerable<uint> LBBox (cached) Bounding box of this figure vertexes [local]. public BBox LBBox { get; } Property Value BBox OBBox Bounding bbox of this figure vertexes [object]. public BBox OBBox { get; } Property Value BBox ObjectMatrix Object coord [object] to local space coord [local] transformation matrix. Changing this property emits FigureInvalidated event. public Matrix4x4 ObjectMatrix { get; set; } Property Value Matrix4x4 Remarks While each control has separate model/view/projection matrixes, the figure object matrix is common to all controls that uses the same model containing this figure instance. ObjectMatrixIsIdentity States if object matrix is an identity. public bool ObjectMatrixIsIdentity { get; } Property Value bool Remarks This property caches Matrix4x4.IsIdentity information and keeps updated only upon effective object matrix change. Order Figure order appareance ( Default: 0 ). Higher order figure appears front to lower order figures. From the opengl point of view figures with higher order ( front ) are drawn firstly then lower order ( back ). Changing this property emits FigureInvalidated event. public int Order { get; set; } Property Value int ParentVertexManager Vertex manager which this object is registered to. Before the object is added to the GLModel, therefore to the GLVertexManager, or after the object is removed from, this pointer is null. public GLVertexManager? ParentVertexManager { get; } Property Value GLVertexManager PrimitiveType Enum that describe which type underlying to the instance. public abstract GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Primitives A figure can contains primitives that in turn can contains vertexes. public abstract ReadOnlyObservableCollection<GLPrimitiveBase> Primitives { get; } Property Value ReadOnlyObservableCollection<GLPrimitiveBase> ScreenCoordMode Enable handling of figure primitive vertexes as screen coord. At vertex manager level these vertexes coord not distinguish from non screen coord vertexes types, these can share the same memory region, but when render cycles through figures at each a uniform variable inform the shader to transform within screen scoped projection/model matrixes designed to make a unscaled orthografic projection with a model translated by (-sw/2, -sh/2) where sw,sh = screen width,height. Changing this property emits FigureInvalidated event. public bool ScreenCoordMode { get; set; } Property Value bool Selected States if figure is actually selected. It true the figure is listed in model selected figures SelectedFigures. public bool Selected { get; } Property Value bool Tag User object public object? Tag { get; set; } Property Value object Visible Figure visibility. Changing this property emits FigureInvalidated event. public bool Visible { get; set; } Property Value bool Remarks Changing visbility of a figure affects all controls that uses the same model containing this figure instance. Methods Copy() Create a copy of this gl vertex manager object copying all relevant data except the ParentVertexManager that will default to null for copies object until added to a vertex manager. public IGLVertexManagerObject Copy() Returns IGLVertexManagerObject CopyBase() Create a copy with all elements down the hierarchy until GLFigureBase included. public GLFigureBase CopyBase() Returns GLFigureBase CopySpecialized(GLFigureBase) protected abstract void CopySpecialized(GLFigureBase other) Parameters other GLFigureBase Invalidate() Emit FigureInvalidated event. public void Invalidate() MakeInstance() Create an instance of derived type. protected abstract GLFigureBase MakeInstance() Returns GLFigureBase See Also Copy() Mirror(in Matrix4x4) Create a mirrored figure against given xy plane. public abstract GLFigureBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLFigureBase Mirrored figure. OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string RemovePrimitive(GLPrimitiveBase) Remove primitive from this figure. public abstract void RemovePrimitive(GLPrimitiveBase primitive) Parameters primitive GLPrimitiveBase Gl primitive to remove. SimpleCmd() Retrieve e simple cmd representation of this figure. Its a textual representation of figure information useful to regen in a separate tool. public abstract string SimpleCmd() Returns string ToString() public override string ToString() Returns string Events FigureInvalidated This event is managed internally by the GLModel and signal that a model figure changed some of its vertex propertties. When a model figure emit this event the model emit ViewInvalidated. public event FigureInvalidatedDelegate? FigureInvalidated Event Type FigureInvalidatedDelegate PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLFigureTypeBase-1.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLFigureTypeBase-1.html",
    "title": "Class GLFigureTypeBase<P> | netcore-opengl",
    "keywords": "Class GLFigureTypeBase<P> Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Template typed GLPrimitiveBase figure base operations such as Add and Remove primitives from the figure. public abstract class GLFigureTypeBase<P> : GLFigureBase, IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged where P : GLPrimitiveBase Type Parameters P Template typed figure base operations such as Add and Remove primitives from the figure. Inheritance object GLFigureBase GLFigureTypeBase<P> Implements IGLFigure IGLVertexManagerObject INotifyPropertyChanged Derived GLLineFigure GLPointFigure GLTriangleFigure Inherited Members GLFigureBase.PropertyChanged GLFigureBase.OnPropertyChanged(string) GLFigureBase.ParentVertexManager GLFigureBase.MakeInstance() GLFigureBase.CopyBase() GLFigureBase.Copy() GLFigureBase.Mirror(in Matrix4x4) GLFigureBase.FigureInvalidated GLFigureBase.PrimitiveType GLFigureBase.ExcludeFromShadeWithEdge GLFigureBase.ObjectMatrixIsIdentity GLFigureBase.ObjectMatrix GLFigureBase.Visible GLFigureBase.Order GLFigureBase.Highlight GLFigureBase.Alpha GLFigureBase.Selected GLFigureBase.ScreenCoordMode GLFigureBase.Tag GLFigureBase.ExpandBBox GLFigureBase.SimpleCmd() GLFigureBase.Indexes GLFigureBase.LBBox GLFigureBase.OBBox GLFigureBase.EvalInShadowMap GLFigureBase.Invalidate() GLFigureBase.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLFigureTypeBase() Create an empty figure. public GLFigureTypeBase() GLFigureTypeBase(IEnumerable<P>) Create a figure with the set of given primitives all of the same type. public GLFigureTypeBase(IEnumerable<P> primitives) Parameters primitives IEnumerable<P> GLFigureTypeBase(params P[]) Create a figure with the set of given primitives all of the same type. public GLFigureTypeBase(params P[] primitives) Parameters primitives P[] Fields PrimitivesOBC Observable collection of primitives in this figure. [JsonProperty] protected ObservableCollection<GLPrimitiveBase> PrimitivesOBC Field Value ObservableCollection<GLPrimitiveBase> Properties Primitives A figure can contains primitives that in turn can contains vertexes. public override ReadOnlyObservableCollection<GLPrimitiveBase> Primitives { get; } Property Value ReadOnlyObservableCollection<GLPrimitiveBase> Methods Add(P) Add given primitive to this figure. public void Add(P primitive) Parameters primitive P Primitive such as GLPoint, GLLine or GLTriangle to be added. CopySpecialized(GLFigureBase) protected override void CopySpecialized(GLFigureBase other) Parameters other GLFigureBase Remove(P) Remove existing primitive from this figure. public void Remove(P primitive) Parameters primitive P Primitive such as GLPoint, GLLine or GLTriangle to remove. RemovePrimitive(GLPrimitiveBase) Remove primitive from this figure. public override void RemovePrimitive(GLPrimitiveBase primitive) Parameters primitive GLPrimitiveBase Gl primitive to remove."
  },
  "api/SearchAThing.OpenGL.Core.GLFontChar.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLFontChar.html",
    "title": "Class GLFontChar | netcore-opengl",
    "keywords": "Class GLFontChar Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Holds a single font character bitmap and allocated texture. public class GLFontChar Inheritance object GLFontChar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GLFontChar(GLContext, char, float, in SKRect, SKBitmap, SKFont) Construct a character bitmap and texture object. public GLFontChar(GLContext glContext, char c, float measure, in SKRect textBounds, SKBitmap bitmap, SKFont font) Parameters glContext GLContext Gl context. c char Font character code. measure float Width of the (virtual) bitmap. This value is computed through SKPaint.MeasureText(), its used by MakeTextFigure(GLModel, GLText) for empty characters such as white space where TextBounds gives no useful information and bitmap is empty. textBounds SKRect Bounds of the character font rendered at FONT_BITMAP_PIXEL pixels. bitmap SKBitmap Bitmap that hold the White on transparent background image of the character. font SKFont Pointer to the font associated. Properties Bitmap Bitmap that hold the White on transparent background image of the character. public SKBitmap Bitmap { get; } Property Value SKBitmap Font Pointer to the font associated. public SKFont Font { get; } Property Value SKFont Measure Width of the (virtual) bitmap. public float Measure { get; } Property Value float TextBounds Bounds of the character font rendered at FONT_BITMAP_PIXEL pixels. public SKRect TextBounds { get; } Property Value SKRect Texture Texture allocated at constructor using given gl context for the character bitmap. public GLTexture2D? Texture { get; } Property Value GLTexture2D c Font character code. public char c { get; } Property Value char Methods ToString() public override string ToString() Returns string See Also GLFontCharManager"
  },
  "api/SearchAThing.OpenGL.Core.GLFontCharManager.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLFontCharManager.html",
    "title": "Class GLFontCharManager | netcore-opengl",
    "keywords": "Class GLFontCharManager Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl font char manager, allocated through gl context. It manage the cache of GLFontChar avoid there are duplicates of the same gl font char for the same font/character. public class GLFontCharManager Inheritance object GLFontCharManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLFontCharManager(GLContext) Instantiate gl font char manager. public GLFontCharManager(GLContext glContext) Parameters glContext GLContext Gl context. Properties GLContext public GLContext GLContext { get; } Property Value GLContext Methods GetFontChars(string, SKFont) Retrieve the list of GLFontChar objects for given text and font. public List<GLFontChar> GetFontChars(string text, SKFont font) Parameters text string Text string for which retrieve gl font chars. font SKFont Font to use in retrieval of gl font chars. Returns List<GLFontChar> See Also Describe(IEnumerable<GLFontChar>, string)"
  },
  "api/SearchAThing.OpenGL.Core.GLLine.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLLine.html",
    "title": "Class GLLine | netcore-opengl",
    "keywords": "Class GLLine Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Opengl line primitive. public class GLLine : GLPrimitiveBase, IGLLine, IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLPrimitiveBase GLLine Implements IGLLine IGLPrimitive IGLVertexManagerObject INotifyPropertyChanged Inherited Members GLPrimitiveBase.PropertyChanged GLPrimitiveBase.OnPropertyChanged(string) GLPrimitiveBase.ParentFigure GLPrimitiveBase.ParentVertexManager GLPrimitiveBase.PrimitiveType GLPrimitiveBase.CopyBase() GLPrimitiveBase.Copy() GLPrimitiveBase.Order GLPrimitiveBase.Selected GLPrimitiveBase.LBBox GLPrimitiveBase.SetColor(in Color) GLPrimitiveBase.SetColor(in Vector4) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.AverageColor(IGLLine) Ext.ToDxfLine(IGLLine) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLLine() Create an opengl line. public GLLine() Remarks This entity can be added into the model through a GLLineFigure. GLLine(Line) Create an opengl line by given geometric line template. public GLLine(Line line) Parameters line Line Remarks This entity can be added into the model through a GLLineFigure. Properties From Line from vertex. public GLVertex From { get; set; } Property Value GLVertex Remarks Changing this property will: checks that the incoming value is a detached vertex ( EnsureDetached(IGLVertexManagerObject) ). use RemoveVertex(GLVertex) set the value use AddVertex To Line to vertex. public GLVertex To { get; set; } Property Value GLVertex Remarks Changing this property will: checks that the incoming value is a detached vertex ( EnsureDetached(IGLVertexManagerObject) ). use RemoveVertex(GLVertex) set the value use AddVertex(GLVertex, bool) Vertexes Enumerate primitive gl vertexes. public override IEnumerable<GLVertex> Vertexes { get; } Property Value IEnumerable<GLVertex> Methods CopySpecialized(GLPrimitiveBase) protected override void CopySpecialized(GLPrimitiveBase other) Parameters other GLPrimitiveBase FromTo(GLVertex, GLVertex) Create a new opengl line by two points through given two gl vertexes. public static GLLine FromTo(GLVertex from, GLVertex to) Parameters from GLVertex From vertex. to GLVertex To vertex. Returns GLLine FromTo(in Vector2, in Vector2, in Color?) Create a new opengl line by two given 2d points ( assuming z=0 ) setting given optional color. public static GLLine FromTo(in Vector2 from, in Vector2 to, in Color? color = null) Parameters from Vector2 From position. to Vector2 To position. color Color? (Optional) color. Returns GLLine FromTo(in Vector3, in Vector3, in Color, in Color) Create a new opengl line by two given points setting color of two points. public static GLLine FromTo(in Vector3 from, in Vector3 to, in Color colorFrom, in Color colorTo) Parameters from Vector3 From position. to Vector3 To position. colorFrom Color From vertex color. colorTo Color To vertex color. Returns GLLine FromTo(in Vector3, in Vector3, in Color?) Create a new opengl line by two given points setting given optional color. public static GLLine FromTo(in Vector3 from, in Vector3 to, in Color? color = null) Parameters from Vector3 From position. to Vector3 To position. color Color? (Optional) color. Returns GLLine Intersect(in Matrix4x4) Compute intersection point of this gl line to the given plane. public Vector3? Intersect(in Matrix4x4 plane) Parameters plane Matrix4x4 World matrix plane. Returns Vector3? Intersection point or null if no intersection found. See Also MakeCS(in Vector3, in Vector3) MakeInstance() protected override GLPrimitiveBase MakeInstance() Returns GLPrimitiveBase Mirror(in Matrix4x4) Create a mirrored primitive against given xy plane. public override GLPrimitiveBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLPrimitiveBase Mirrored primitive. PointV(GLVertex, GLVertex) Create a new opengl line by given from point extending of the given vector. public static GLLine PointV(GLVertex point, GLVertex v) Parameters point GLVertex From position. v GLVertex Extension vector. Returns GLLine PointV(in Vector2, in Vector2, in Color?) Create a new opengl line by given 2d point extending of the given 2d vector (assuming Z=0) settings optionally the color. public static GLLine PointV(in Vector2 point, in Vector2 v, in Color? color = null) Parameters point Vector2 From position. v Vector2 Extension vector. color Color? (Optional) color to set. Returns GLLine PointV(in Vector3, in Vector3, in Color, in Color) Create a new opengl line by given point extending of the given vector with given color for the from, to vertexes. public static GLLine PointV(in Vector3 point, in Vector3 v, in Color colorFrom, in Color colorTo) Parameters point Vector3 From position. v Vector3 Extension vector. colorFrom Color From vertex color. colorTo Color To vertex color. Returns GLLine PointV(in Vector3, in Vector3, in Color?) Create a new opengl line by given point extending from there extending of the given vector setting optionally the color. public static GLLine PointV(in Vector3 point, in Vector3 v, in Color? color = null) Parameters point Vector3 From position. v Vector3 Extension vector. color Color? Color to apply the line ( from, to vertexes ). Returns GLLine SimpleCmd(bool) Retrieve e simple cmd representation of this primtiive. Its a textual representation of primitive information useful to regen in a separate tool. public override string SimpleCmd(bool includeHeader = true) Parameters includeHeader bool If true header will prepended to form a complete command. Returns string ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLLineFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLLineFigure.html",
    "title": "Class GLLineFigure | netcore-opengl",
    "keywords": "Class GLLineFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Specialization of typed figure within the GLLine primitive. [JsonObject(MemberSerialization.OptIn)] public class GLLineFigure : GLFigureTypeBase<GLLine>, IGLLineFigure, IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLFigureBase GLFigureTypeBase<GLLine> GLLineFigure Implements IGLLineFigure IGLFigure IGLVertexManagerObject INotifyPropertyChanged Inherited Members GLFigureTypeBase<GLLine>.Primitives GLFigureTypeBase<GLLine>.PrimitivesOBC GLFigureTypeBase<GLLine>.RemovePrimitive(GLPrimitiveBase) GLFigureTypeBase<GLLine>.Add(GLLine) GLFigureTypeBase<GLLine>.Remove(GLLine) GLFigureBase.PropertyChanged GLFigureBase.OnPropertyChanged(string) GLFigureBase.ParentVertexManager GLFigureBase.CopyBase() GLFigureBase.Copy() GLFigureBase.FigureInvalidated GLFigureBase.ExcludeFromShadeWithEdge GLFigureBase.ObjectMatrixIsIdentity GLFigureBase.ObjectMatrix GLFigureBase.Visible GLFigureBase.Order GLFigureBase.Highlight GLFigureBase.Alpha GLFigureBase.Selected GLFigureBase.ScreenCoordMode GLFigureBase.Tag GLFigureBase.ExpandBBox GLFigureBase.Indexes GLFigureBase.LBBox GLFigureBase.OBBox GLFigureBase.EvalInShadowMap GLFigureBase.Invalidate() GLFigureBase.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLLineFigure(params GLLine[]) Create a line typed figure with the given set of GLLine primitives. public GLLineFigure(params GLLine[] lines) Parameters lines GLLine[] GLLineFigure(IEnumerable<GLLine>) Create a line typed figure with the given set of GLLine primitives. public GLLineFigure(IEnumerable<GLLine> lines) Parameters lines IEnumerable<GLLine> Properties Lines Enumeration of the line primitives of this figure. public IEnumerable<GLLine> Lines { get; } Property Value IEnumerable<GLLine> PrimitiveType Enum that describe which type underlying to the instance. public override GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Methods CopySpecialized(GLFigureBase) protected override void CopySpecialized(GLFigureBase other) Parameters other GLFigureBase MakeInstance() Create an instance of derived type. protected override GLFigureBase MakeInstance() Returns GLFigureBase See Also Copy() Mirror(in Matrix4x4) Create a mirrored figure against given xy plane. public override GLFigureBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLFigureBase Mirrored figure. SimpleCmd() Retrieve e simple cmd representation of this figure. Its a textual representation of figure information useful to regen in a separate tool. public override string SimpleCmd() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLMatrix4x4Struct.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLMatrix4x4Struct.html",
    "title": "Struct GLMatrix4x4Struct | netcore-opengl",
    "keywords": "Struct GLMatrix4x4Struct Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Structure that contains a matrix4x4. It will be used by the RenderVertexManager(Func<GLFigureBase, bool>, GLPipeline, GLVertexManager, GLPointLightStruct[], GLMatrix4x4Struct[]) and loaded into gpu pipeline through GLShaderStorageBlock<T>. public struct GLMatrix4x4Struct Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields m public Matrix4x4 m Field Value Matrix4x4"
  },
  "api/SearchAThing.OpenGL.Core.GLMatrixes.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLMatrixes.html",
    "title": "Class GLMatrixes | netcore-opengl",
    "keywords": "Class GLMatrixes Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Helper class to store model/view/projection and camera pos/target/up in a single object. public class GLMatrixes Inheritance object GLMatrixes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLMatrixes(in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, in Vector3) Constructor. public GLMatrixes(in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, in Vector3 cp, in Vector3 ct, in Vector3 cu) Parameters mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. pm Matrix4x4 Projection matrix [eye]. cp Vector3 Camera position [world]. ct Vector3 Camera target [world]. cu Vector3 Camera up [world]. Properties cp Camera position [world]. public Vector3 cp { get; } Property Value Vector3 ct Camera target [world]. public Vector3 ct { get; } Property Value Vector3 cu Camera up [world]. public Vector3 cu { get; } Property Value Vector3 mm Model matrix [local]. public Matrix4x4 mm { get; } Property Value Matrix4x4 pm Projection matrix [eye]. public Matrix4x4 pm { get; } Property Value Matrix4x4 vm View matrix [world]. public Matrix4x4 vm { get; } Property Value Matrix4x4"
  },
  "api/SearchAThing.OpenGL.Core.GLModel.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLModel.html",
    "title": "Class GLModel | netcore-opengl",
    "keywords": "Class GLModel Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl model. contains the associated GLVertexManager the list of model figures GLFigureBase point lights GLPointLight. custom vertex managers AddCustomVertexManager(GLVertexManager) contains the default build model action. [JsonObject(MemberSerialization.OptIn)] public class GLModel : IGLContextObject Inheritance object GLModel Implements IGLContextObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.LoadTexture(GLModel, string) Toolkit.MakeTextFigure(GLModel, GLText) Constructors GLModel(GLContext) Constructor. public GLModel(GLContext glContext) Parameters glContext GLContext Gl context. Fields BuildModel Build model action that will executed each time the model requires a full rebuild because invalidated. Arguments (GLControl, bool isInitial). public GLBuildModelDelegate? BuildModel Field Value GLBuildModelDelegate NotificationRequest Event emitted when gl control would to notify something. This will handled by SearchAThing.OpenGL.GUI.AvaloniaGLControl. public NotificationDelegate NotificationRequest Field Value NotificationDelegate Properties CursorMode Current cursor mode. public CursorMode CursorMode { get; set; } Property Value CursorMode See Also CursorMode CustomVertexManagers Enumerates custom vertex managers registered into this model. public IEnumerable<GLVertexManager> CustomVertexManagers { get; } Property Value IEnumerable<GLVertexManager> Figures Figures (included those from custom vertex managers) public ReadOnlyObservableCollection<GLFigureBase> Figures { get; } Property Value ReadOnlyObservableCollection<GLFigureBase> GLContext Gl context. public GLContext GLContext { get; } Property Value GLContext GLVertexManager Gl vertex manager. public GLVertexManager GLVertexManager { get; } Property Value GLVertexManager IsInvalidated States if model is invalidated thus BuildModel will be automatically invoked at first render. public bool IsInvalidated { get; set; } Property Value bool LBBox bbox of model vertexes [local]. public BBox LBBox { get; } Property Value BBox NormalFactor Factor respect to bbox size used when normal geometry shader generates normals. public float NormalFactor { get; set; } Property Value float See Also ShowNormals OverrideAmbient Override ambient strength (default:0.8). public float OverrideAmbient { get; set; } Property Value float Remarks Requires OverrideAmbient to be effective. See Also OverrideLightStrengths(float?, float?, float?) OverrideAmbientEnabled Override ambient strength enabled. public bool OverrideAmbientEnabled { get; set; } Property Value bool OverrideDiffuse Override diffuse strength (default:0.6). public float OverrideDiffuse { get; set; } Property Value float Remarks Requires OverrideDiffuse to be effective. See Also OverrideLightStrengths(float?, float?, float?) OverrideDiffuseEnabled Override diffuse strength enabled. public bool OverrideDiffuseEnabled { get; set; } Property Value bool OverrideSpecular Override specular strength (default:0.6). public float OverrideSpecular { get; set; } Property Value float Remarks Requires OverrideSpecular to be effective. See Also OverrideLightStrengths(float?, float?, float?) OverrideSpecularEnabled Override specular strength enabled. public bool OverrideSpecularEnabled { get; set; } Property Value bool PointLights Observable collection of model point lights. [JsonProperty] public ObservableCollection2<GLPointLight> PointLights { get; } Property Value ObservableCollection2<GLPointLight> See Also GLPointLight SelectedFigures Selected figures. public ReadOnlyObservableCollection<GLFigureBase> SelectedFigures { get; } Property Value ReadOnlyObservableCollection<GLFigureBase> SelectedPrimitives Selected primitives. public ReadOnlyObservableCollection<GLPrimitiveBase> SelectedPrimitives { get; } Property Value ReadOnlyObservableCollection<GLPrimitiveBase> SerializerSettings Default settings for json serialization of model. public static JsonSerializerSettings SerializerSettings { get; } Property Value JsonSerializerSettings Vertexes Enumerates gl vertexes [object]. public IEnumerable<GLVertex> Vertexes { get; } Property Value IEnumerable<GLVertex> Methods AddCustomVertexManager(GLVertexManager) Attach given custom vertex manager to the model. public void AddCustomVertexManager(GLVertexManager vertexManager) Parameters vertexManager GLVertexManager Gl vertex manager to attach. AddFigure(GLFigureBase) Adds given figure to the vertex manager. public void AddFigure(GLFigureBase figure) Parameters figure GLFigureBase Gl figure to add. See Also AddFigure(GLFigureBase) AddFigure(IEnumerable<GLFigureBase>) Adds given figures to the vertex manager. public void AddFigure(IEnumerable<GLFigureBase> figures) Parameters figures IEnumerable<GLFigureBase> Gl figures to add. See Also AddFigure(IEnumerable<GLFigureBase>) Clear(bool) Clear the model removing all entities from vertex manager, deregistering custom vertex manager and clearing point lights if specified. public void Clear(bool clearPointLights = false) Parameters clearPointLights bool If true clear point lights (Default:false). ClearSelection(bool) Clear current selection ( of figures, primitives ) and cancel select command. public void ClearSelection(bool resetToViewMode = true) Parameters resetToViewMode bool If true (Default) cursor back to View. DeleteSelected() Delete selected primitives/figures. public void DeleteSelected() DeserializeFigures(string) Deserialize given gl model retrieving gl figures. public IEnumerable<GLFigureBase> DeserializeFigures(string json) Parameters json string Returns IEnumerable<GLFigureBase> DeserializeFiguresFromFile(string) Deserialize gl figures from given serialized gl model pathfilename. public IEnumerable<GLFigureBase> DeserializeFiguresFromFile(string pathfilename) Parameters pathfilename string Returns IEnumerable<GLFigureBase> FiguresFromSimpleCmd(string) Load primitives from given simgple cmd and group them by primitive type creating figures ( newlines supported ). SimpleCmd() SimpleCmd() SimpleCmd() public IEnumerable<GLFigureBase> FiguresFromSimpleCmd(string simpleCmd) Parameters simpleCmd string Returns IEnumerable<GLFigureBase> GetSelectionSimpleCmd() Retrieve SimpleCmd(bool) representation of selected primitives and figure primitives. public string GetSelectionSimpleCmd() Returns string InvalidateModel() Invalidate the gl model. This cause BuildModel to be invoked at next render. public void InvalidateModel() See Also IsInvalidated OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string OverrideLightStrengths(float?, float?, float?) Override vertex material properties. Has no effect if no light points present. public void OverrideLightStrengths(float? ambient = null, float? diffuse = null, float? specular = null) Parameters ambient float? Ambient light strength (Default:0.8). diffuse float? Diffuse light strength (Default:0.6). specular float? Specular light strength (Default:0.6). PasteSimpleCmd(string) Add to the model figures coming from given SimpleCmd(bool). Generated figures are primitives coming from the cmd grouped by primitive type. public IEnumerable<IGLFigure> PasteSimpleCmd(string simpleCmd) Parameters simpleCmd string Simple cmd representation. Returns IEnumerable<IGLFigure> Figures added to the model. PrimitivesFromSimpleCmd(string) Load figure primitives from simple cmd ( newlines supported ). SimpleCmd() SimpleCmd() SimpleCmd() public IEnumerable<GLPrimitiveBase> PrimitivesFromSimpleCmd(string simpleCmd) Parameters simpleCmd string Returns IEnumerable<GLPrimitiveBase> RecomputeLBBox() Invalidate and recalc bounding box [local]. Used internally after delete of figures/primitives. public void RecomputeLBBox() RemoveCustomVertexManager(GLVertexManager) Detach given custom manager from the model. public void RemoveCustomVertexManager(GLVertexManager vertexManager) Parameters vertexManager GLVertexManager Gl vertex manager to detach. RemoveFigure(GLFigureBase) Remove given figure from the vertex manager. public bool RemoveFigure(GLFigureBase figure) Parameters figure GLFigureBase Gl figure to remove. Returns bool True if figure effectively removed. See Also RemoveFigure(GLFigureBase) RemoveFigure(params GLFigureBase[]) Remove given figures from the vertex manager. public int RemoveFigure(params GLFigureBase[] figures) Parameters figures GLFigureBase[] Gl figures to remove. Returns int Count of figures effectively removed. See Also RemoveFigure(params GLFigureBase[]) RemoveFigure(IEnumerable<GLFigureBase>) Remove given figures from the vertex manager. public int RemoveFigure(IEnumerable<GLFigureBase> figures) Parameters figures IEnumerable<GLFigureBase> Gl figures to remove. Returns int Count of figures effectively removed. See Also RemoveFigure(IEnumerable<GLFigureBase>) ResetLight() Resets and create predefined lights public void ResetLight() SendNotification(string, string, GLNotificationType) Send notification to frontend that manage this gl control. public void SendNotification(string title, string msg, GLNotificationType notifyType = GLNotificationType.Information) Parameters title string Title of notification. msg string Message to display, it can contains at most 1 newlines. notifyType GLNotificationType Level type of notification (Default:Information). Serialize() Json serialized representation of this model. public string Serialize() Returns string SerializeToFile(string) Save json serialized representation of this model to given pathfilename. public void SerializeToFile(string pathfilename) Parameters pathfilename string SetupLightAttenuation(float?, float?, float?) Configure light constant, linear, quadratic attenuation based on the model size. public void SetupLightAttenuation(float? adjustConstant = 1, float? adjustLinear = 0, float? adjustQuadratic = 0) Parameters adjustConstant float? Gl point light constant attenuation (Default:1f). adjustLinear float? Gl point light linear attenuation (Default:5e-1f). adjustQuadratic float? Gl point light quadratic attenuation (Default:1e-4). ToString() public override string? ToString() Returns string ToggleSelectFigures(IEnumerable<GLFigureBase>) Select/Deselect given figures. public void ToggleSelectFigures(IEnumerable<GLFigureBase> figures) Parameters figures IEnumerable<GLFigureBase> Figures for which toggle selection. ToggleSelectPrimitives(IEnumerable<GLPrimitiveBase>) Select/Deselect given primitives. public void ToggleSelectPrimitives(IEnumerable<GLPrimitiveBase> primitives) Parameters primitives IEnumerable<GLPrimitiveBase> Primitives for which toggle selection. Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler ViewInvalidated Event emitted when a vertex of the model changes. Useful to keep in sync the view calling the Invalidate(InvalidateEnum). See example-0016 public event ModelViewInvalidated? ViewInvalidated Event Type ModelViewInvalidated"
  },
  "api/SearchAThing.OpenGL.Core.GLNotificationType.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLNotificationType.html",
    "title": "Enum GLNotificationType | netcore-opengl",
    "keywords": "Enum GLNotificationType Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Type of notification emitted by gl control. public enum GLNotificationType Fields Error = 3 Information = 0 Success = 1 Warning = 2"
  },
  "api/SearchAThing.OpenGL.Core.GLPipeline.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPipeline.html",
    "title": "Class GLPipeline | netcore-opengl",
    "keywords": "Class GLPipeline Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl pipeline object. Contains vertex, geometry and fragment shaders where defined and helper method to set uniforms, attributes ans storage blocks. public class GLPipeline : IGLContextObject Inheritance object GLPipeline Implements IGLContextObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLPipeline(GLContext, string?, string?, string?, bool, string) Create a gl shader. public GLPipeline(GLContext glContext, string? vertexShaderSource = null, string? geometryShaderSource = null, string? fragmentShaderSource = null, bool exceptionOnMissingLocation = false, string friendlyName = \"\") Parameters glContext GLContext Gl context. vertexShaderSource string (Optional) GLSL source code of the vertex shader. geometryShaderSource string (Optional) GLSL source code of the geometry shader. fragmentShaderSource string (Optional) GLSL source code of the fragment shader. exceptionOnMissingLocation bool (Optional) If true an exception will generated if setting a non existant uniform. (Default: false). friendlyName string (Optional) Friendly shader name. Fields Program Gl Program id. public uint Program Field Value uint TraceWarnings If true shader warning are logged to Debug.WriteLine. public bool TraceWarnings Field Value bool Properties ExceptionOnMissingLocation If set true an exception will generated if setting a non existant uniform. (Default: false). public bool ExceptionOnMissingLocation { get; set; } Property Value bool FragmentShader Gl fragment shader id. public uint FragmentShader { get; } Property Value uint FragmentShaderSource GLSL source code of the fragment shader. public string? FragmentShaderSource { get; } Property Value string FriendlyName Custom friendly name of the shader. public string FriendlyName { get; } Property Value string GL Gl api. public GL GL { get; } Property Value GL GLContext Gl context. public GLContext GLContext { get; } Property Value GLContext GeometryShader Gl geometry shader id. public uint GeometryShader { get; } Property Value uint GeometryShaderSource GLSL source code of the geometry shader. public string? GeometryShaderSource { get; } Property Value string VertexShader Gl vertex shader id. public uint VertexShader { get; } Property Value uint VertexShaderSource GLSL source code of the vertex shader. public string? VertexShaderSource { get; } Property Value string Methods GetAttributeLocation(string) Retrieve the attribute location by the given attribute name. public uint? GetAttributeLocation(string name) Parameters name string Attribute name for which retrieve the id. Returns uint? Id of the attribute. GetStorageBlockBinding(string, out uint, out uint) Eetrieve program resource index of given ssbo and retrieve associated binding. a shader unique shared storage binding is auto incremented if no default associated binding found in shader. public bool GetStorageBlockBinding(string name, out uint storageBlockIndex, out uint storageBlockBinding) Parameters name string SSBO name. storageBlockIndex uint Resulting SSBO block index. storageBlockBinding uint Resulting SSBO block binding. Returns bool True if SSBO found. GetUniformLocation(string) Retrieve the uniform id by the given uniform name. public uint? GetUniformLocation(string name) Parameters name string Name of the location for which retrieve the id. Returns uint? Id of the uniform. SetBool(string, bool) Set bool uniform variable. public void SetBool(string name, bool value) Parameters name string Uniform variable name. value bool Value to set. SetFloat(string, float) Set float uniform variable. public void SetFloat(string name, float value) Parameters name string Uniform variable name. value float Value to set. SetInt(string, int) Set int uniform variable. public void SetInt(string name, int value) Parameters name string Uniform variable name. value int Value to set. SetMat4(string, Matrix4x4) Set Matrix4x4 uniform variable. public void SetMat4(string name, Matrix4x4 value) Parameters name string Uniform variable name. value Matrix4x4 Value to set. SetVec2(string, in Vector2) Set Vector2 uniform variable. public void SetVec2(string name, in Vector2 value) Parameters name string Uniform variable name. value Vector2 Value to set. SetVec3(string, in Vector3) Set Vector3 uniform variable. public void SetVec3(string name, in Vector3 value) Parameters name string Uniform variable name. value Vector3 Value to set. SetVec4(string, in Vector4) Set Vector4 uniform variable. public void SetVec4(string name, in Vector4 value) Parameters name string Uniform variable name. value Vector4 Value to set. Use() Use the program containing pipeline of shaders configured here. public void Use()"
  },
  "api/SearchAThing.OpenGL.Core.GLPoint.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPoint.html",
    "title": "Class GLPoint | netcore-opengl",
    "keywords": "Class GLPoint Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public class GLPoint : GLPrimitiveBase, IGLPoint, IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLPrimitiveBase GLPoint Implements IGLPoint IGLPrimitive IGLVertexManagerObject INotifyPropertyChanged Inherited Members GLPrimitiveBase.PropertyChanged GLPrimitiveBase.OnPropertyChanged(string) GLPrimitiveBase.ParentFigure GLPrimitiveBase.ParentVertexManager GLPrimitiveBase.PrimitiveType GLPrimitiveBase.CopyBase() GLPrimitiveBase.Copy() GLPrimitiveBase.Order GLPrimitiveBase.Selected GLPrimitiveBase.LBBox GLPrimitiveBase.SetColor(in Color) GLPrimitiveBase.SetColor(in Vector4) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Ext.ToDxfPoint(IGLPoint) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLPoint(GLVertex) Create an opengl point by given vertex. public GLPoint(GLVertex v) Parameters v GLVertex Point vertex [object]. GLPoint(in Vector3, in Color?) Create an opengl point by given coordinate and optional vertex color. public GLPoint(in Vector3 coord, in Color? color = null) Parameters coord Vector3 Point position [object]. color Color? Point color. GLPoint(float, float, float, in Color?) Create an opengl point by given coordinate and optional vertex color. public GLPoint(float x, float y, float z, in Color? color = null) Parameters x float Point coord x [object]. y float Point coord y [object]. z float Point coord z [object]. color Color? Point color. Properties Vertex Point vertex. public GLVertex Vertex { get; set; } Property Value GLVertex Vertexes Enumerate primitive gl vertexes. public override IEnumerable<GLVertex> Vertexes { get; } Property Value IEnumerable<GLVertex> Methods CopySpecialized(GLPrimitiveBase) protected override void CopySpecialized(GLPrimitiveBase other) Parameters other GLPrimitiveBase MakeInstance() protected override GLPrimitiveBase MakeInstance() Returns GLPrimitiveBase Mirror(in Matrix4x4) Create a mirrored primitive against given xy plane. public override GLPrimitiveBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLPrimitiveBase Mirrored primitive. SimpleCmd(bool) Retrieve e simple cmd representation of this primtiive. Its a textual representation of primitive information useful to regen in a separate tool. public override string SimpleCmd(bool includeHeader = true) Parameters includeHeader bool If true header will prepended to form a complete command. Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLPointFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPointFigure.html",
    "title": "Class GLPointFigure | netcore-opengl",
    "keywords": "Class GLPointFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Specialization of typed figure within the GLPoint} primitive. public class GLPointFigure : GLFigureTypeBase<GLPoint>, IGLPointFigure, IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLFigureBase GLFigureTypeBase<GLPoint> GLPointFigure Implements IGLPointFigure IGLFigure IGLVertexManagerObject INotifyPropertyChanged Inherited Members GLFigureTypeBase<GLPoint>.Primitives GLFigureTypeBase<GLPoint>.PrimitivesOBC GLFigureTypeBase<GLPoint>.RemovePrimitive(GLPrimitiveBase) GLFigureTypeBase<GLPoint>.Add(GLPoint) GLFigureTypeBase<GLPoint>.Remove(GLPoint) GLFigureBase.PropertyChanged GLFigureBase.OnPropertyChanged(string) GLFigureBase.ParentVertexManager GLFigureBase.CopyBase() GLFigureBase.Copy() GLFigureBase.FigureInvalidated GLFigureBase.ExcludeFromShadeWithEdge GLFigureBase.ObjectMatrixIsIdentity GLFigureBase.ObjectMatrix GLFigureBase.Visible GLFigureBase.Order GLFigureBase.Highlight GLFigureBase.Alpha GLFigureBase.Selected GLFigureBase.ScreenCoordMode GLFigureBase.Tag GLFigureBase.ExpandBBox GLFigureBase.Indexes GLFigureBase.LBBox GLFigureBase.OBBox GLFigureBase.EvalInShadowMap GLFigureBase.Invalidate() GLFigureBase.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLPointFigure() Create an empty points figure. [JsonConstructor] public GLPointFigure() GLPointFigure(params GLPoint[]) Create a point typed figure with the given set of GLPoint primitives. public GLPointFigure(params GLPoint[] points) Parameters points GLPoint[] GLPointFigure(IEnumerable<GLPoint>) Create a point typed figure with the given set of GLPoint primitives. public GLPointFigure(IEnumerable<GLPoint> points) Parameters points IEnumerable<GLPoint> GLPointFigure(IEnumerable<Vector3>) Create a point typed figure with the given set of GLPoint primitives created by the given coords [local]. public GLPointFigure(IEnumerable<Vector3> points) Parameters points IEnumerable<Vector3> GLPointFigure(params Vector3[]) Create a point typed figure with the given set of GLPoint primitives created by the given coords [local]. public GLPointFigure(params Vector3[] points) Parameters points Vector3[] Properties PointSize Size of the point in pixels [screen] ( Default: 10 ). Changing this property emits FigureInvalidated event. public float PointSize { get; set; } Property Value float Points Enumeration of the point primitives of this figure. public IEnumerable<GLPoint> Points { get; } Property Value IEnumerable<GLPoint> PrimitiveType Enum that describe which type underlying to the instance. public override GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Methods CopySpecialized(GLFigureBase) protected override void CopySpecialized(GLFigureBase other) Parameters other GLFigureBase MakeInstance() Create an instance of derived type. protected override GLFigureBase MakeInstance() Returns GLFigureBase See Also Copy() Mirror(in Matrix4x4) Create a mirrored figure against given xy plane. public override GLFigureBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLFigureBase Mirrored figure. SetPointSize(float) Set figure points size. public GLPointFigure SetPointSize(float pointSize) Parameters pointSize float point size in pixels [screen]. Returns GLPointFigure This figure. SimpleCmd() Retrieve e simple cmd representation of this figure. Its a textual representation of figure information useful to regen in a separate tool. public override string SimpleCmd() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLPointLight.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPointLight.html",
    "title": "Class GLPointLight | netcore-opengl",
    "keywords": "Class GLPointLight Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl point light. [JsonObject(MemberSerialization.OptIn)] public class GLPointLight : INotifyPropertyChanged Inheritance object GLPointLight Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLPointLight(Vector3?, Color?, bool) Create a gl point light at given coordinates [local]. public GLPointLight(Vector3? pos = null, Color? color = null, bool showPoint = false) Parameters pos Vector3? Light coordinate [local]. color Color? Light color (ambient, diffuse, specular). showPoint bool If true a gl point will displayed where light is. GLPointLight(float, float, float, in Color?, bool) Create a gl point light at given coordinates [local]. public GLPointLight(float x, float y, float z, in Color? color = null, bool showPoint = false) Parameters x float X coordinate [local]. y float Y coordinate [local]. z float Z coordinate [local]. color Color? Light color (ambient, diffuse, specular). showPoint bool If true a gl point will displayed where light is. Properties Active If false light don't drop any shadow nor affects vertex colours. [JsonProperty] public bool Active { get; set; } Property Value bool Ambient Ambient light color (Default:White). [JsonProperty] public Color Ambient { get; set; } Property Value Color Constant Light attenuation constant factor. [JsonProperty] public float Constant { get; set; } Property Value float Diffuse Diffuse light color (Default:white). [JsonProperty] public Color Diffuse { get; set; } Property Value Color Linear Light attenuation linear factor. [JsonProperty] public float Linear { get; set; } Property Value float Position Position [local]. [JsonProperty] public Vector3 Position { get; set; } Property Value Vector3 Quadratic Light attenuation quadratica factor. [JsonProperty] public float Quadratic { get; set; } Property Value float ShowPoint If true a Gl point will be shown where the light is positioned. Colored yellow if light is active, darkgray if inactive. [JsonProperty] public bool ShowPoint { get; set; } Property Value bool Specular Specular light color (Default:white). [JsonProperty] public Color Specular { get; set; } Property Value Color Methods OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string SetupAttenuation(GLModel, float?, float?, float?) Setup light attenuation factor based on model bbox size. public void SetupAttenuation(GLModel model, float? adjustConstant = 1, float? adjustLinear = 0, float? adjustQuadratic = 0) Parameters model GLModel Gl model. adjustConstant float? Light constant attenuation factor. adjustLinear float? Light linear attenuation factor. adjustQuadratic float? Light quadratic attenuation factor. Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLPointLightStruct.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPointLightStruct.html",
    "title": "Struct GLPointLightStruct | netcore-opengl",
    "keywords": "Struct GLPointLightStruct Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Structure that contains gl point light info. It will be used by the RenderVertexManager(Func<GLFigureBase, bool>, GLPipeline, GLVertexManager, GLPointLightStruct[], GLMatrix4x4Struct[]) and loaded into the gpu pipeline through GLShaderStorageBlock<T> public struct GLPointLightStruct Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ambient Ambient color. DEFAULT_LIGHT_COLOR public Vector3 ambient Field Value Vector3 constant Light constant attenuation (0..1). DEFAULT_LIGHT_CONSTANT public float constant Field Value float diffuse Diffuse color. DEFAULT_LIGHT_COLOR public Vector3 diffuse Field Value Vector3 linear Light linear attenutation (0..1). DEFAULT_LIGHT_LINEAR public float linear Field Value float position Light position [world]. public Vector3 position Field Value Vector3 quadratic Light quadratic attenuation (0..1). DEFAULT_LIGHT_QUADRATIC. public float quadratic Field Value float specular Specular color. DEFAULT_LIGHT_COLOR public Vector3 specular Field Value Vector3 Methods ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLPrimitiveBase.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPrimitiveBase.html",
    "title": "Class GLPrimitiveBase | netcore-opengl",
    "keywords": "Class GLPrimitiveBase Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public abstract class GLPrimitiveBase : IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLPrimitiveBase Implements IGLPrimitive IGLVertexManagerObject INotifyPropertyChanged Derived GLLine GLPoint GLTriangle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties LBBox (cached) Bounding box of the primitive [local]. public BBox LBBox { get; } Property Value BBox Order Primitive order appareance ( Default: 0 ). Higher order primitives appears front to lower order primitives of the same figure. From the opengl point of view figures with higher order ( front ) are drawn firstly then lower order ( back ). Changing this property emits FigureInvalidated event. public int Order { get; set; } Property Value int ParentFigure Reference to the parent figure. public IGLFigure? ParentFigure { get; } Property Value IGLFigure ParentVertexManager Vertex manager which this object is registered to. Before the object is added to the GLModel, therefore to the GLVertexManager, or after the object is removed from, this pointer is null. public GLVertexManager? ParentVertexManager { get; } Property Value GLVertexManager PrimitiveType Enum that describe which type underlying to the instance. public GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Selected States if primitive is actually selected. It true the primitive is listed in model selected primitives SelectedPrimitives. public bool Selected { get; } Property Value bool Vertexes Enumerate primitive gl vertexes. public abstract IEnumerable<GLVertex> Vertexes { get; } Property Value IEnumerable<GLVertex> Methods Copy() Create a copy of this gl vertex manager object copying all relevant data except the ParentVertexManager that will default to null for copies object until added to a vertex manager. public IGLVertexManagerObject Copy() Returns IGLVertexManagerObject CopyBase() Creates a copy with all elements down the hierarchy until GLPrimitiveBase included. protected GLPrimitiveBase CopyBase() Returns GLPrimitiveBase CopySpecialized(GLPrimitiveBase) protected abstract void CopySpecialized(GLPrimitiveBase other) Parameters other GLPrimitiveBase MakeInstance() protected abstract GLPrimitiveBase MakeInstance() Returns GLPrimitiveBase Mirror(in Matrix4x4) Create a mirrored primitive against given xy plane. public abstract GLPrimitiveBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLPrimitiveBase Mirrored primitive. OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string SetColor(in Color) Set the color of primitive vertexes. public GLPrimitiveBase SetColor(in Color color) Parameters color Color Color to set on primitive vertexes. Returns GLPrimitiveBase This primitive. SetColor(in Vector4) Set the color of primitive vertexes. public GLPrimitiveBase SetColor(in Vector4 rgbaColor) Parameters rgbaColor Vector4 Color to set on primitive vertexes. Returns GLPrimitiveBase This primitive. SimpleCmd(bool) Retrieve e simple cmd representation of this primtiive. Its a textual representation of primitive information useful to regen in a separate tool. public abstract string SimpleCmd(bool includeHeader = true) Parameters includeHeader bool If true header will prepended to form a complete command. Returns string Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLPrimitiveType.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLPrimitiveType.html",
    "title": "Enum GLPrimitiveType | netcore-opengl",
    "keywords": "Enum GLPrimitiveType Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Enum that specify which type of primitive belong to a figure. public enum GLPrimitiveType Extension Methods Ext.GL(GLPrimitiveType) Fields Line = 1 Corresponds to GL_LINES opengl primitive. Its described by 2 GLVertex. A line primitive will rasterized with 1 pixel screen size. Point = 0 Corresponds to GL_POINTS opengl primitive. Its described by 1 GLVertex. A point primitive can have a screen pixel size. Triangle = 2 Corresponds to GL_TRIANGLES opengl primitive. Its described by 3 GLVertex. A triangle primitive can be rendered in wireframe or shade mode. The option ShadeWidthEdge allow to overlay triangles edges with lines generated at runtime through geometry shader."
  },
  "api/SearchAThing.OpenGL.Core.GLShaderStorageBlock-1.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLShaderStorageBlock-1.html",
    "title": "Class GLShaderStorageBlock<T> | netcore-opengl",
    "keywords": "Class GLShaderStorageBlock<T> Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Manage mapping of given template typed data to gpu memory. public class GLShaderStorageBlock<T> : IDisposable where T : unmanaged Type Parameters T Type of packet structure. Inheritance object GLShaderStorageBlock<T> Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GLShaderStorageBlock(GLContext, GLPipeline, string, Span<T>) Execute glGenBuffer to create buffer handle and glBindBuffer() on given target, finally glBufferData() to map given data onto block storage. public GLShaderStorageBlock(GLContext glCtx, GLPipeline shader, string blockName, Span<T> data) Parameters glCtx GLContext shader GLPipeline blockName string data Span<T> Remarks It will dispose automatically with the call of glDeleteBuffer(). Properties Target public GLEnum Target { get; } Property Value GLEnum Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~GLShaderStorageBlock() protected ~GLShaderStorageBlock() ReplaceItems(int, Span<T>) public void ReplaceItems(int offset, Span<T> newdata) Parameters offset int newdata Span<T> ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLText.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLText.html",
    "title": "Class GLText | netcore-opengl",
    "keywords": "Class GLText Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl text object. [JsonObject(MemberSerialization.OptIn)] public class GLText : INotifyPropertyChanged Inheritance object GLText Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLText(in Matrix4x4, string, float?, Color?, GLTextVHAlignment?) Create a gl text. public GLText(in Matrix4x4 cs, string text, float? height = null, Color? color = null, GLTextVHAlignment? alignment = null) Parameters cs Matrix4x4 Coordinate system which origin represents the text insertion point and XY plane where text resides. Use MakeScreenCS(in Vector3?) for screenMode text. text string Text string. Supports multiline with '\\n' newline character. height float? Text height. color Color? Text color. alignment GLTextVHAlignment? Text alignment. Properties Alignment Text alignment. [JsonProperty] public GLTextVHAlignment Alignment { get; set; } Property Value GLTextVHAlignment See Also GLTextVHAlignment BuiltinFontPathfilename Builtin font pathfilename. public static string BuiltinFontPathfilename { get; } Property Value string See Also BUILTIN_FONTFILE CS Coordinate system which origin represents the text insertion point and XY plane where text resides. public Matrix4x4 CS { get; set; } Property Value Matrix4x4 Color Text color. [JsonProperty] public Color Color { get; set; } Property Value Color Font Skia font object with this font typeface. public SKFont Font { get; set; } Property Value SKFont Height Text height. [JsonProperty] public float Height { get; set; } Property Value float SpacingBetweenLines Space between lines (em). [JsonProperty] public float SpacingBetweenLines { get; set; } Property Value float Text Text string. Supports multiline with '\\n' newline character. [JsonProperty] public string Text { get; set; } Property Value string Methods OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLTextCharFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLTextCharFigure.html",
    "title": "Class GLTextCharFigure | netcore-opengl",
    "keywords": "Class GLTextCharFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Triangles figure with texture mapped to represent a char. [JsonObject(MemberSerialization.OptIn)] public class GLTextCharFigure : GLTriangleFigure, IGLTriangleFigure, IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLFigureBase GLFigureTypeBase<GLTriangle> GLTriangleFigure GLTextCharFigure Implements IGLTriangleFigure IGLFigure IGLVertexManagerObject INotifyPropertyChanged Inherited Members GLTriangleFigure.DefaultComputeNormal GLTriangleFigure.Texture2D GLTriangleFigure.ComputeNormal GLTriangleFigure.ComputeNormalMean GLTriangleFigure.SetupComputeNormal(bool, ComputeTriangleNormalDelegate) GLTriangleFigure.RebuildNormal(bool) GLTriangleFigure.Mirror(in Matrix4x4) GLTriangleFigure.PrimitiveType GLTriangleFigure.Triangles GLTriangleFigure.SimpleCmd() GLFigureTypeBase<GLTriangle>.Primitives GLFigureTypeBase<GLTriangle>.PrimitivesOBC GLFigureTypeBase<GLTriangle>.RemovePrimitive(GLPrimitiveBase) GLFigureTypeBase<GLTriangle>.Add(GLTriangle) GLFigureTypeBase<GLTriangle>.Remove(GLTriangle) GLFigureBase.PropertyChanged GLFigureBase.OnPropertyChanged(string) GLFigureBase.ParentVertexManager GLFigureBase.CopyBase() GLFigureBase.Copy() GLFigureBase.FigureInvalidated GLFigureBase.ExcludeFromShadeWithEdge GLFigureBase.ObjectMatrixIsIdentity GLFigureBase.ObjectMatrix GLFigureBase.Visible GLFigureBase.Order GLFigureBase.Highlight GLFigureBase.Alpha GLFigureBase.Selected GLFigureBase.ScreenCoordMode GLFigureBase.Tag GLFigureBase.ExpandBBox GLFigureBase.Indexes GLFigureBase.LBBox GLFigureBase.OBBox GLFigureBase.Invalidate() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLTextCharFigure(GLText, int) Create gl text char figure. public GLTextCharFigure(GLText glText, int textOff) Parameters glText GLText Gl text object. textOff int Offset in gl text objec text string. Properties EvalInShadowMap Don't drop shadow. public override bool EvalInShadowMap { get; } Property Value bool GLText Gl text object. [JsonProperty] public GLText GLText { get; set; } Property Value GLText TextOff Offset in Text for the char here representing. public int TextOff { get; } Property Value int Methods CopySpecialized(GLFigureBase) protected override void CopySpecialized(GLFigureBase other) Parameters other GLFigureBase MakeInstance() Create an instance of derived type. protected override GLFigureBase MakeInstance() Returns GLFigureBase See Also Copy() ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLTextVHAlignment.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLTextVHAlignment.html",
    "title": "Enum GLTextVHAlignment | netcore-opengl",
    "keywords": "Enum GLTextVHAlignment Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Gl text alignment respect given insertion point. public enum GLTextVHAlignment Fields BottomCenter = 7 BottomLeft = 6 BottomRight = 8 MiddleCenter = 4 MiddleLeft = 3 MiddleRight = 5 TopCenter = 1 TopLeft = 0 TopRight = 2 See Also GLText"
  },
  "api/SearchAThing.OpenGL.Core.GLTexture2D.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLTexture2D.html",
    "title": "Class GLTexture2D | netcore-opengl",
    "keywords": "Class GLTexture2D Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Handle reference to gl texture. [JsonObject(MemberSerialization.OptIn)] public class GLTexture2D : IGLContextObject, IGLTexture2D, IDisposable Inheritance object GLTexture2D Implements IGLContextObject IGLTexture2D IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLTexture2D(GLContext, SKBitmap, InternalFormat, PixelFormat) Create gl texture 2d. public GLTexture2D(GLContext glContext, SKBitmap bitmap, InternalFormat internalFormat = InternalFormat.Rgba8, PixelFormat pixelFormat = PixelFormat.Rgba) Parameters glContext GLContext Gl context. bitmap SKBitmap Skia bitmap that hold texture bitmap. internalFormat InternalFormat Gpu internal storage format. pixelFormat PixelFormat Image buffer format. Properties Bitmap Skia bitmap that hold texture bitmap. public SKBitmap Bitmap { get; } Property Value SKBitmap GL Gl api. public GL GL { get; } Property Value GL GLContext Gl context. public GLContext GLContext { get; set; } Property Value GLContext Height Height of the bitmap (pixels). [JsonProperty] public uint Height { get; } Property Value uint InternalFormat Gpu internal storage format. [JsonProperty] public InternalFormat InternalFormat { get; } Property Value InternalFormat PixelFormat Image buffer format. [JsonProperty] public PixelFormat PixelFormat { get; } Property Value PixelFormat TextureId Texture id. public uint TextureId { get; } Property Value uint Width Width of the bitmap (pixels). [JsonProperty] public uint Width { get; } Property Value uint Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~GLTexture2D() protected ~GLTexture2D()"
  },
  "api/SearchAThing.OpenGL.Core.GLTriangle.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLTriangle.html",
    "title": "Class GLTriangle | netcore-opengl",
    "keywords": "Class GLTriangle Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll [JsonObject(MemberSerialization.OptIn)] public class GLTriangle : GLPrimitiveBase, IGLTriangle, IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLPrimitiveBase GLTriangle Implements IGLTriangle IGLPrimitive IGLVertexManagerObject INotifyPropertyChanged Inherited Members GLPrimitiveBase.PropertyChanged GLPrimitiveBase.OnPropertyChanged(string) GLPrimitiveBase.ParentFigure GLPrimitiveBase.ParentVertexManager GLPrimitiveBase.PrimitiveType GLPrimitiveBase.CopyBase() GLPrimitiveBase.Copy() GLPrimitiveBase.Order GLPrimitiveBase.Selected GLPrimitiveBase.LBBox GLPrimitiveBase.SetColor(in Color) GLPrimitiveBase.SetColor(in Vector4) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Intersect(GLTriangle, float, GLTriangle, out bool) Ext.ToTriangle3D(GLTriangle) Ext.Segments(IGLTriangle) Toolkit.AverageColor(IGLTriangle) Toolkit.DefaultTriangleNormal(IGLTriangle) Toolkit.ToDxfFace3D(IGLTriangle) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLTriangle(GLVertex, GLVertex, GLVertex) Create an opengl triangle by given three vertexes. public GLTriangle(GLVertex v1, GLVertex v2, GLVertex v3) Parameters v1 GLVertex First vertex. v2 GLVertex Second vertex. v3 GLVertex Third vertex. GLTriangle(in Vector3, in Vector3, in Vector3) Create an opengl triangle by given three coordinates. public GLTriangle(in Vector3 p1, in Vector3 p2, in Vector3 p3) Parameters p1 Vector3 First position. p2 Vector3 Second position. p3 Vector3 Third position. Properties Plane Compute default triangle plane such as: origin = V1 normal = Normalize((V2-V1) x (V3-V1)) public Matrix4x4 Plane { get; } Property Value Matrix4x4 See Also DefaultTriangleNormal(IGLTriangle) PlaneNZ Compute triangle plane such as: origin = V1 basez is concordant to owner figure ComputeNormal delegate. public Matrix4x4 PlaneNZ { get; } Property Value Matrix4x4 V1 Triangle first vertex. [JsonProperty] public GLVertex V1 { get; set; } Property Value GLVertex V2 Triangle second vertex. [JsonProperty] public GLVertex V2 { get; set; } Property Value GLVertex V3 Triangle third vertex. [JsonProperty] public GLVertex V3 { get; set; } Property Value GLVertex Vertexes Enumerate primitive gl vertexes. public override IEnumerable<GLVertex> Vertexes { get; } Property Value IEnumerable<GLVertex> Methods Contains(in Vector3) States if given point is contained in the triangle, borders included. public bool Contains(in Vector3 point) Parameters point Vector3 Point to test. Returns bool CopySpecialized(GLPrimitiveBase) protected override void CopySpecialized(GLPrimitiveBase other) Parameters other GLPrimitiveBase Lines() Enumerate triangle as opengl lines (V1,V2), (V2,V3) and (V3,V1). public IEnumerable<GLLine> Lines() Returns IEnumerable<GLLine> MakeInstance() protected override GLPrimitiveBase MakeInstance() Returns GLPrimitiveBase Mirror(in Matrix4x4) Create a mirrored primitive against given xy plane. public override GLPrimitiveBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLPrimitiveBase Mirrored primitive. SimpleCmd(bool) [t ]x1,y1,z1,x2,y2,z2,x3,y3,z3 public override string SimpleCmd(bool includeHeader = true) Parameters includeHeader bool Returns string ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLTriangleFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLTriangleFigure.html",
    "title": "Class GLTriangleFigure | netcore-opengl",
    "keywords": "Class GLTriangleFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Specialization of typed figure within the GLTriangle primitive. public class GLTriangleFigure : GLFigureTypeBase<GLTriangle>, IGLTriangleFigure, IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLFigureBase GLFigureTypeBase<GLTriangle> GLTriangleFigure Implements IGLTriangleFigure IGLFigure IGLVertexManagerObject INotifyPropertyChanged Derived GLTextCharFigure Inherited Members GLFigureTypeBase<GLTriangle>.Primitives GLFigureTypeBase<GLTriangle>.PrimitivesOBC GLFigureTypeBase<GLTriangle>.RemovePrimitive(GLPrimitiveBase) GLFigureTypeBase<GLTriangle>.Add(GLTriangle) GLFigureTypeBase<GLTriangle>.Remove(GLTriangle) GLFigureBase.PropertyChanged GLFigureBase.OnPropertyChanged(string) GLFigureBase.ParentVertexManager GLFigureBase.CopyBase() GLFigureBase.Copy() GLFigureBase.FigureInvalidated GLFigureBase.ExcludeFromShadeWithEdge GLFigureBase.ObjectMatrixIsIdentity GLFigureBase.ObjectMatrix GLFigureBase.Visible GLFigureBase.Order GLFigureBase.Highlight GLFigureBase.Alpha GLFigureBase.Selected GLFigureBase.ScreenCoordMode GLFigureBase.Tag GLFigureBase.ExpandBBox GLFigureBase.Indexes GLFigureBase.LBBox GLFigureBase.OBBox GLFigureBase.EvalInShadowMap GLFigureBase.Invalidate() GLFigureBase.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLTriangleFigure(params GLTriangle[]) Create a triangle typed figure with the given set of GLTriangle. public GLTriangleFigure(params GLTriangle[] triangles) Parameters triangles GLTriangle[] GLTriangleFigure(IEnumerable<GLTriangle>) Create a triangle typed figure with the given set of GLTriangle. public GLTriangleFigure(IEnumerable<GLTriangle> triangles) Parameters triangles IEnumerable<GLTriangle> Fields DefaultComputeNormal Default triangle compute normal function. DefaultTriangleNormal(IGLTriangle) public static readonly ComputeTriangleNormalDelegate DefaultComputeNormal Field Value ComputeTriangleNormalDelegate Properties ComputeNormal public ComputeTriangleNormalDelegate ComputeNormal { get; } Property Value ComputeTriangleNormalDelegate ComputeNormalMean public bool ComputeNormalMean { get; } Property Value bool PrimitiveType Enum that describe which type underlying to the instance. public override GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Texture2D Optional texture 2d object associated to this triangle. TextureST vertex coords of triangles vertexes will be used to map the texture. Changing this property emits FigureInvalidated event. [JsonProperty] public GLTexture2D? Texture2D { get; set; } Property Value GLTexture2D Triangles Enumeration of triangle primitives of this figure. public IEnumerable<GLTriangle> Triangles { get; } Property Value IEnumerable<GLTriangle> Methods CopySpecialized(GLFigureBase) protected override void CopySpecialized(GLFigureBase other) Parameters other GLFigureBase MakeInstance() Create an instance of derived type. protected override GLFigureBase MakeInstance() Returns GLFigureBase See Also Copy() Mirror(in Matrix4x4) Create a mirrored figure against given xy plane. public override GLFigureBase? Mirror(in Matrix4x4 xyPlane) Parameters xyPlane Matrix4x4 XY mirror plane. Returns GLFigureBase Mirrored figure. RebuildNormal(bool) Execute ComputeNormal function foreach triangle of this figure updating Normal. Optionally mean these values if ComputeNormalMean was set. public void RebuildNormal(bool onlyMean = false) Parameters onlyMean bool If true, vertex normal will not recomputed, only mean on their values will be set. SetupComputeNormal(bool, ComputeTriangleNormalDelegate?) Set the triangle compute normal function. If no argument given a default per triangle normal compute will be done. Changing this property imply RebuildNormal(bool) event. public void SetupComputeNormal(bool mean = false, ComputeTriangleNormalDelegate? computeNormal = null) Parameters mean bool If true a mean of normals triangle vertexes grouped by position will be computed. computeNormal ComputeTriangleNormalDelegate Allow to override default triangle normal function DefaultComputeNormal. SimpleCmd() Retrieve simple cmd for a list of triangles. Coordinates of v1,v2,v3 are separated with comma so there are 9 float separated by comma. Further triangles are appended by semi-colon separator. [t ]ax1,ay1,az1,ax2,ay2,az2,ax3,ay3,az3;bx1,by1,bz1,bx2,by2,bz2,bx3,by3,bz3;... public override string SimpleCmd() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLVertex.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLVertex.html",
    "title": "Class GLVertex | netcore-opengl",
    "keywords": "Class GLVertex Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public class GLVertex : IGLVertex, IGLVertexManagerObject, INotifyPropertyChanged Inheritance object GLVertex Implements IGLVertex IGLVertexManagerObject INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.PositionSignature(IGLVertex, float) Ext.SetColor(IGLVertex, in Color) Ext.SetColor(IGLVertex, in Vector4) Ext.ToDxfVector3(IGLVertex) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Constructors GLVertex() Create a gl vertex ( default 0,0,0 ) [object]. public GLVertex() GLVertex(in Vector3, in Color?) Create a gl vertex with given position [object] and color. public GLVertex(in Vector3 position, in Color? color) Parameters position Vector3 Vertex position [object]. color Color? Vertex color. GLVertex(in Vector3, in Vector4?, in Vector3?, in Vector3?, in Vector2?) Create a gl vertex with given position [object]. public GLVertex(in Vector3 position, in Vector4? rgbaColor = null, in Vector3? materialProperties = null, in Vector3? normal = null, in Vector2? textureST = null) Parameters position Vector3 Vertex position [object]. rgbaColor Vector4? (Optional) Vertex color encoded in vector4 (range 0..1) as (red, green, blue, alpha). Alpha=1 (full opaque). Alpha=0 (full transparent). (Default: white). materialProperties Vector3? (Optional) Describe the strength (0..1) of the ambient, diffuse, specular light effects. (Default: ambient:0.8, diffuse:0.6, strength:0.6). normal Vector3? (Optional) Vertex normal [object]. (Default: zero). textureST Vector2? (Optional) Vertex texture mapping in the range [0,0]...[1,1]. GLVertex(in Vector3, in Vector2) Create a gl vertex with given position [object] and texture coord. public GLVertex(in Vector3 position, in Vector2 textureST) Parameters position Vector3 Vector position [object]. textureST Vector2 Texture position in the ranage [0,0]...[1,1]. Properties EffectiveNormal Vertex normal [local] eventually inverted if flag InvertNormal present. public Vector3 EffectiveNormal { get; } Property Value Vector3 Flags Vertex flags can used to switch some vertex feature. By default no flags are active. GLVertexFlag [JsonProperty] public GLVertexFlag Flags { get; set; } Property Value GLVertexFlag Index GLVertexManager vertex index associated to this gl vertex or null if not yet registered to. public uint? Index { get; } Property Value uint? InvertNormal Invert the normal flag ( used by Mirror(in Matrix4x4). public bool InvertNormal { get; set; } Property Value bool See Also EffectiveNormal IsAttached States if this vertex is already registed to a vertex manager. public bool IsAttached { get; } Property Value bool MaterialColor Color encoded in vector4 (range 0..1) as (red, green, blue, alpha). Alpha=1 (full opaque). Alpha=0 (full transparent). public Vector4 MaterialColor { get; set; } Property Value Vector4 MaterialProperties Describe the strength (0..1) of the ambient, diffuse, specular light effects. public Vector3 MaterialProperties { get; set; } Property Value Vector3 Normal Vertex normal [local]. public Vector3 Normal { get; set; } Property Value Vector3 ParentFigure Figure referencing this vertex in one of their primitive's components. Its null if related figure not yet added to the vertex manager. public IGLFigure? ParentFigure { get; } Property Value IGLFigure ParentPrimitive Primitive referencing this vertex in one of their components. Its null if related figure not yet added to the vertex manager. public IGLPrimitive? ParentPrimitive { get; } Property Value IGLPrimitive ParentVertexManager Vertex manager which this object is registered to. Before the object is added to the GLModel, therefore to the GLVertexManager, or after the object is removed from, this pointer is null. public GLVertexManager? ParentVertexManager { get; } Property Value GLVertexManager Position Vertex position [local]. public Vector3 Position { get; set; } Property Value Vector3 ScreenCoordMode Evaluated through parent IGLFigure it states if this vertex has to be processed in the gl shader pipeline within UNINAME_uFigureScreenCoord uniform flag. public bool ScreenCoordMode { get; } Property Value bool See Also ScreenModelMatrix ScreenProjectionMatrix Signature String signature of this vertex, used by GLVertexManager to keep a unique vertex array of GLVertexStruct. public string Signature { get; } Property Value string TextureST Vertex texture offset ( range [0,0] to [1,1] ). public Vector2 TextureST { get; set; } Property Value Vector2 Methods Copy() Create a copy of this gl vertex manager object copying all relevant data except the ParentVertexManager that will default to null for copies object until added to a vertex manager. public IGLVertexManagerObject Copy() Returns IGLVertexManagerObject Mirror(in Matrix4x4) Mirror this vertex to the other side of given xy plane. public GLVertex? Mirror(in Matrix4x4 refXYPlane) Parameters refXYPlane Matrix4x4 Reference xy plane. Returns GLVertex Copy of this vertex, mirrored. OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string ToString() public override string ToString() Returns string ToStruct() Create a struct representation of this vertex. Some information used only by framework itself not pertinent to those used by the shader, such as Index are omitted. public GLVertexStruct ToStruct() Returns GLVertexStruct See Also GLVertexStruct Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLVertexArrayObject-1.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLVertexArrayObject-1.html",
    "title": "Class GLVertexArrayObject<PacketStructure> | netcore-opengl",
    "keywords": "Class GLVertexArrayObject<PacketStructure> Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Helper to define and enable Vertex Array Object in order to declare how to access vertex buffer object at i-th packet structure components. public class GLVertexArrayObject<PacketStructure> : IDisposable where PacketStructure : unmanaged Type Parameters PacketStructure Type of packet structure used to store data GLVertexStruct Inheritance object GLVertexArrayObject<PacketStructure> Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GLVertexArrayObject(GL) Execute glGenVertexArray() to create vertex array handle and glBindVertexArray on given target. It will automatically disposed with glDeleteVertexArray(). public GLVertexArrayObject(GL GL) Parameters GL GL Methods AttribIPointer(uint, int, int, VertexAttribIType, uint?) Define and enable location to access vertex buffer object at i-th packet structure components (uint types). public void AttribIPointer(uint location, int offset, int components, VertexAttribIType componentType, uint? stride = null) Parameters location uint Index of attribute location. offset int Offset in bytes from the packet structure begin. components int Nr. of components (vec3=3; vec4=4). componentType VertexAttribIType Component data type. stride uint? Sizeof in bytes of packet structure or null to get sizeof packet structure. AttribPointer(uint, int, int, VertexAttribPointerType, bool, uint?) Define and enable location to access vertex buffer object at i-th packet structure components . public void AttribPointer(uint location, int offset, int components, VertexAttribPointerType componentType, bool normalized, uint? stride = null) Parameters location uint Index of attribute location. offset int Offset in bytes from the packet structure begin. components int Nr. of components (vec3=3; vec4=4). componentType VertexAttribPointerType Component data type. normalized bool If true normalization will applied. stride uint? Sizeof in bytes of packet structure or null to get sizeof packet structure. Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~GLVertexArrayObject() protected ~GLVertexArrayObject() ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLVertexBufferObject-1.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLVertexBufferObject-1.html",
    "title": "Class GLVertexBufferObject<T> | netcore-opengl",
    "keywords": "Class GLVertexBufferObject<T> Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Manage mapping of given template typed data to gpu memory. public class GLVertexBufferObject<T> : IDisposable where T : unmanaged Type Parameters T Type of packet structure. Inheritance object GLVertexBufferObject<T> Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GLVertexBufferObject(GL, BufferTargetARB, Span<T>, BufferUsageARB) Executes gLGenBuffer() to create buffer handle and gLBindBuffer() on given target, then gLBufferData() to map on given data. It will be automatically disposed with the call of glDeleteBuffer(). public GLVertexBufferObject(GL GL, BufferTargetARB target, Span<T> data, BufferUsageARB usage = BufferUsageARB.DynamicDraw) Parameters GL GL target BufferTargetARB data Span<T> usage BufferUsageARB Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool ~GLVertexBufferObject() protected ~GLVertexBufferObject() ReplaceItems(int, Span<T>) public void ReplaceItems(int offset, Span<T> newdata) Parameters offset int newdata Span<T> ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.GLVertexFlag.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLVertexFlag.html",
    "title": "Enum GLVertexFlag | netcore-opengl",
    "keywords": "Enum GLVertexFlag Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll 32bit vertex flags public enum GLVertexFlag Fields Selected = 1 VERTEX_FLAG_SELECTED : if set the vertex will coloured to appears as selected."
  },
  "api/SearchAThing.OpenGL.Core.GLVertexManager.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLVertexManager.html",
    "title": "Class GLVertexManager | netcore-opengl",
    "keywords": "Class GLVertexManager Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public class GLVertexManager : IGLVertexManager, INotifyPropertyChanged Inheritance object GLVertexManager Implements IGLVertexManager INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLVertexManager(bool) Create a new gl vertex manager that can be added to the gl model through AddCustomVertexManager(GLVertexManager). public GLVertexManager(bool expandModelBBox = true) Parameters expandModelBBox bool If false adding vertexes to this vertex manager doesn't affects the gl model bbox. (Default: true). Properties ExpandModelBBox Flag to state if vertex added to this vertex manager imply expansion of the gl model (Default: true). More (custom) vertex manager can be registered into the gl model, may for temporary purpose and setting this variable to false at the construct of these custom vertex manager allow to unaffect the gl model bbox. Should be used to avoid the zoomfit to evaluate temporary vertex manager figures. GLVertexManager public bool ExpandModelBBox { get; } Property Value bool FigureCount Actual size of registered figures list. public int FigureCount { get; set; } Property Value int Figures Enumerates vertex manager registered figures. public IEnumerable<GLFigureBase> Figures { get; } Property Value IEnumerable<GLFigureBase> LBBox BBox of registered figure vertexes [local]. public BBox LBBox { get; } Property Value BBox TriangleCount Actual count of gl triangles belonging to added figures. public int TriangleCount { get; set; } Property Value int VertexCount Actual size of GLVertexStruct vertex list. public int VertexCount { get; set; } Property Value int Methods AddFigure(GLFigureBase) Adds given figure to the vertex manager. All vertexes belonging to the figure's primitives will be added. Emits FigureAdded event. public void AddFigure(GLFigureBase figure) Parameters figure GLFigureBase Figure to add. AddFigure(params GLFigureBase[]) Adds given figures to the vertex manager. All vertexes belonging to the figures primitives will be added. Emits FigureAdded event. public void AddFigure(params GLFigureBase[] figures) Parameters figures GLFigureBase[] Figures to add. AddFigure(IEnumerable<GLFigureBase>) Adds given figures to the vertex manager. All vertexes belonging to the figures primitives will be added. Emits FigureAdded event. public void AddFigure(IEnumerable<GLFigureBase> figures) Parameters figures IEnumerable<GLFigureBase> Figures to add. Clear() Clear all vertexes and figures from the vertex manager, and emit FiguresCleared and Invalidated event. public void Clear() GetVboArray() Used internally by the GLModel.RenderVertexManager to render the scene. Contains the list of vertex structs directly mapped to the gpu. This array will be built each time a vertex changes from the ToArray() of the list Vertexes. To avoid performance penalty in a scenario where you need to change the position of a figure you can use ObjectMatrix that doesn't affects at all vertexes because is a figure related information forwarded to the gl pipeline shader through UNINAME_uObject. public GLVertexStruct[] GetVboArray() Returns GLVertexStruct[] OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string RecomputeLBBox() Recompute bbox [local] of all figure/primitive vertexes upading LBBox. Used internally after figure/primitive deletion. REVIEW: may improved public BBox RecomputeLBBox() Returns BBox RemoveFigure(GLFigureBase) Remove given figure from the vertex manager. All vertexes belonging to the figures primitives will be removed. Emits FigureRemoved event. public bool RemoveFigure(GLFigureBase figure) Parameters figure GLFigureBase Figure to remove. Returns bool True if figure effectively removed. RemoveFigure(params GLFigureBase[]) Remove given figures from the vertex manager. All vertexes belonging to the figures primitives will be removed. Emits FigureRemoved event. public int RemoveFigure(params GLFigureBase[] figures) Parameters figures GLFigureBase[] Figures to remove. Returns int Count of figures effectively removed. RemoveFigure(IEnumerable<GLFigureBase>) Remove given figures from the vertex manager. All vertexes belonging to the figures primitives will be removed. Emits FigureRemoved event. public int RemoveFigure(IEnumerable<GLFigureBase> figures) Parameters figures IEnumerable<GLFigureBase> Figures to remove. Returns int Count of figures effectively removed. Events FigureAdded Event emitted when a figure was added. public event FigureEvent? FigureAdded Event Type FigureEvent FigureRemoved Event emitted when a figure was removed. public event FigureEvent? FigureRemoved Event Type FigureEvent FiguresCleared Event emitted when all figures cleared. The list of figures removed is reported through the event argument of FiguresEvent delegate. public event FiguresEvent? FiguresCleared Event Type FiguresEvent Invalidated Event emitted when a vertex was added or removed or all vertexes cleared. Its used by the GLModel to track the model changes and emit a ViewInvalidated event. public event VertexManagerInvalidatedDelegate? Invalidated Event Type VertexManagerInvalidatedDelegate See Also Clear() PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.GLVertexStruct.html": {
    "href": "api/SearchAThing.OpenGL.Core.GLVertexStruct.html",
    "title": "Struct GLVertexStruct | netcore-opengl",
    "keywords": "Struct GLVertexStruct Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Structure used by the vertex manager when register a vertex inside it. This structure has an explicit layout for unmanaged access by the gpu and its used in GLControl during the phase of rendering. public struct GLVertexStruct Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Flags Vertex flags. public uint Flags Field Value uint MatColor Vertex color encoded in vector4 (range 0..1) as (red, green, blue, alpha). Alpha=1 (full opaque). Alpha=0 (full transparent). public Vector4 MatColor Field Value Vector4 MatProp Describe the strength (0..1) of the ambient, diffuse, specular light effects. public Vector3 MatProp Field Value Vector3 Normal Vertex (effective) normal [local]. public Vector3 Normal Field Value Vector3 See Also EffectiveNormal Position Vertex position [local]. public Vector3 Position Field Value Vector3 TextureST Texture mapping position in the range [0,0]...[1,1]. public Vector2 TextureST Field Value Vector2 Methods ToString() public override string ToString() Returns string See Also GLVertexArrayObject<PacketStructure>"
  },
  "api/SearchAThing.OpenGL.Core.IGLContextObject.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLContextObject.html",
    "title": "Interface IGLContextObject | netcore-opengl",
    "keywords": "Interface IGLContextObject Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll General inteface for objects that carrier a reference to Gl context. public interface IGLContextObject Properties GLContext GLContext GLContext { get; } Property Value GLContext See Also GLModel GLPipeline GLTexture2D"
  },
  "api/SearchAThing.OpenGL.Core.IGLFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLFigure.html",
    "title": "Interface IGLFigure | netcore-opengl",
    "keywords": "Interface IGLFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll This is the direct child of a vertex manager. A figure contains primitives and primitive contains vertexes. The figure is useful to group together primitives and handle properties such as Visibile, Order, ObjectMatrix, ScreenCoord mode. [JsonObject(MemberSerialization.OptIn)] public interface IGLFigure : IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.Vertexes(IGLFigure) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Remarks All properties are INotifyPropertyChanged managed and allow to be ui reactive. Properties Alpha Allow to change alpha (0:full transparent, 1:full opaque) of the figure without the need to change primitives color. If null figure primitives alpha will not overriden. (Default: null) Changing this property emits FigureInvalidated event. [JsonProperty] float? Alpha { get; set; } Property Value float? EvalInShadowMap States if this figure has to be considered for building of the shadow map. While is true by default in GLFigureBase, is overriden to false by GLTextCharFigure specialization of GLTriangleFigure in order to avoid dropping shadows of the triangles used by the font textures. bool EvalInShadowMap { get; } Property Value bool ExcludeFromShadeWithEdge If true figure will rendered w/out \"shade with edge\" shader regardless the option is active in the gl control. (Default: false) bool ExcludeFromShadeWithEdge { get; } Property Value bool ExpandBBox States if this figure is considered in bbox expansion (Default: true). Useful to avoid cs figure or non related to content of interest to decrease view and zoom experience. bool ExpandBBox { get; set; } Property Value bool Highlight Enable highlight of a figure with a color ( Default: Yellow ). Changing this property emits FigureInvalidated event. bool Highlight { get; set; } Property Value bool Indexes List of vertex manager vertex indexes used by this figure. Used in the final render phase where GL.DrawElements take place to mapped as opengl ElementArrayBuffer. IEnumerable<uint> Indexes { get; } Property Value IEnumerable<uint> LBBox (cached) Bounding box of this figure vertexes [local]. BBox LBBox { get; } Property Value BBox OBBox Bounding bbox of this figure vertexes [object]. BBox OBBox { get; } Property Value BBox ObjectMatrix Object coord [object] to local space coord [local] transformation matrix. Changing this property emits FigureInvalidated event. [JsonProperty] Matrix4x4 ObjectMatrix { get; set; } Property Value Matrix4x4 Remarks While each control has separate model/view/projection matrixes, the figure object matrix is common to all controls that uses the same model containing this figure instance. Order Figure order appareance ( Default: 0 ). Higher order figure appears front to lower order figures. From the opengl point of view figures with higher order ( front ) are drawn firstly then lower order ( back ). Changing this property emits FigureInvalidated event. [JsonProperty] int Order { get; set; } Property Value int PrimitiveType Enum that describe which type underlying to the instance. GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Primitives A figure can contains primitives that in turn can contains vertexes. ReadOnlyObservableCollection<GLPrimitiveBase> Primitives { get; } Property Value ReadOnlyObservableCollection<GLPrimitiveBase> ScreenCoordMode Enable handling of figure primitive vertexes as screen coord. At vertex manager level these vertexes coord not distinguish from non screen coord vertexes types, these can share the same memory region, but when render cycles through figures at each a uniform variable inform the shader to transform within screen scoped projection/model matrixes designed to make a unscaled orthografic projection with a model translated by (-sw/2, -sh/2) where sw,sh = screen width,height. Changing this property emits FigureInvalidated event. [JsonProperty] bool ScreenCoordMode { get; set; } Property Value bool Selected States if figure is actually selected. It true the figure is listed in model selected figures SelectedFigures. bool Selected { get; } Property Value bool Tag User object object? Tag { get; set; } Property Value object Visible Figure visibility. Changing this property emits FigureInvalidated event. [JsonProperty] bool Visible { get; set; } Property Value bool Remarks Changing visbility of a figure affects all controls that uses the same model containing this figure instance. Methods Invalidate() Invoke FigureInvalidated. Used for internal purpose by the GLPrimitiveBase. void Invalidate() RemovePrimitive(GLPrimitiveBase) Remove primitive from this figure. void RemovePrimitive(GLPrimitiveBase primitive) Parameters primitive GLPrimitiveBase Gl primitive to remove. SimpleCmd() Retrieve e simple cmd representation of this figure. Its a textual representation of figure information useful to regen in a separate tool. string SimpleCmd() Returns string Events FigureInvalidated This event is managed internally by the GLModel and signal that a model figure changed some of its vertex propertties. When a model figure emit this event the model emit ViewInvalidated. event FigureInvalidatedDelegate? FigureInvalidated Event Type FigureInvalidatedDelegate"
  },
  "api/SearchAThing.OpenGL.Core.IGLLine.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLLine.html",
    "title": "Interface IGLLine | netcore-opengl",
    "keywords": "Interface IGLLine Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Primitive for the GL_LINES opengl element. [JsonObject(MemberSerialization.OptIn)] public interface IGLLine : IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLPrimitive.ParentFigure IGLPrimitive.Vertexes IGLPrimitive.PrimitiveType IGLPrimitive.Order IGLPrimitive.LBBox IGLPrimitive.SimpleCmd(bool) IGLPrimitive.Selected IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.AverageColor(IGLLine) Ext.ToDxfLine(IGLLine) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties From Line from vertex. [JsonProperty] GLVertex From { get; set; } Property Value GLVertex Remarks Changing this property will: checks that the incoming value is a detached vertex ( EnsureDetached(IGLVertexManagerObject) ). use RemoveVertex(GLVertex) set the value use AddVertex To Line to vertex. [JsonProperty] GLVertex To { get; set; } Property Value GLVertex Remarks Changing this property will: checks that the incoming value is a detached vertex ( EnsureDetached(IGLVertexManagerObject) ). use RemoveVertex(GLVertex) set the value use AddVertex(GLVertex, bool)"
  },
  "api/SearchAThing.OpenGL.Core.IGLLineFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLLineFigure.html",
    "title": "Interface IGLLineFigure | netcore-opengl",
    "keywords": "Interface IGLLineFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Specialization of IGLFigure for the type GLLine. public interface IGLLineFigure : IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLFigure.FigureInvalidated IGLFigure.Invalidate() IGLFigure.Primitives IGLFigure.RemovePrimitive(GLPrimitiveBase) IGLFigure.PrimitiveType IGLFigure.ExcludeFromShadeWithEdge IGLFigure.ObjectMatrix IGLFigure.Visible IGLFigure.Order IGLFigure.ScreenCoordMode IGLFigure.Highlight IGLFigure.Selected IGLFigure.Alpha IGLFigure.Indexes IGLFigure.LBBox IGLFigure.OBBox IGLFigure.ExpandBBox IGLFigure.EvalInShadowMap IGLFigure.Tag IGLFigure.SimpleCmd() IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Methods Add(GLLine) Add given line to the figure primitives set. void Add(GLLine line) Parameters line GLLine Remove(GLLine) Remove given line from the figure primitives set. void Remove(GLLine line) Parameters line GLLine"
  },
  "api/SearchAThing.OpenGL.Core.IGLPoint.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLPoint.html",
    "title": "Interface IGLPoint | netcore-opengl",
    "keywords": "Interface IGLPoint Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Primitive for GL_POINTS opengl element. [JsonObject(MemberSerialization.OptIn)] public interface IGLPoint : IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLPrimitive.ParentFigure IGLPrimitive.Vertexes IGLPrimitive.PrimitiveType IGLPrimitive.Order IGLPrimitive.LBBox IGLPrimitive.SimpleCmd(bool) IGLPrimitive.Selected IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.ToDxfPoint(IGLPoint) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties Vertex Vertex of the gl point. [JsonProperty] GLVertex Vertex { get; set; } Property Value GLVertex"
  },
  "api/SearchAThing.OpenGL.Core.IGLPointFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLPointFigure.html",
    "title": "Interface IGLPointFigure | netcore-opengl",
    "keywords": "Interface IGLPointFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Specialization of IGLFigure for the type GLPoint. [JsonObject(MemberSerialization.OptIn)] public interface IGLPointFigure : IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLFigure.FigureInvalidated IGLFigure.Invalidate() IGLFigure.Primitives IGLFigure.RemovePrimitive(GLPrimitiveBase) IGLFigure.PrimitiveType IGLFigure.ExcludeFromShadeWithEdge IGLFigure.ObjectMatrix IGLFigure.Visible IGLFigure.Order IGLFigure.ScreenCoordMode IGLFigure.Highlight IGLFigure.Selected IGLFigure.Alpha IGLFigure.Indexes IGLFigure.LBBox IGLFigure.OBBox IGLFigure.ExpandBBox IGLFigure.EvalInShadowMap IGLFigure.Tag IGLFigure.SimpleCmd() IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties PointSize Size of the point in pixels [screen] ( Default: 10 ). Changing this property emits FigureInvalidated event. [JsonProperty] float PointSize { get; set; } Property Value float Methods Add(GLPoint) Add given point to the figure primitives set. void Add(GLPoint point) Parameters point GLPoint Remove(GLPoint) Remove given point from the figure primitives set. void Remove(GLPoint point) Parameters point GLPoint"
  },
  "api/SearchAThing.OpenGL.Core.IGLPrimitive.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLPrimitive.html",
    "title": "Interface IGLPrimitive | netcore-opengl",
    "keywords": "Interface IGLPrimitive Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll A primitive such a GLPoint, GLLine or GLTriangle can be added to a figure through its add method. A primitive can consists of 1, 2 or 3 GLVertex that will be registered into GLVertexManager when the primitive added to the figure and figure to the model through AddFigure(IEnumerable<GLFigureBase>). [JsonObject(MemberSerialization.OptIn)] public interface IGLPrimitive : IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties LBBox (cached) Bounding box of the primitive [local]. BBox LBBox { get; } Property Value BBox Order Primitive order appareance ( Default: 0 ). Higher order primitives appears front to lower order primitives of the same figure. From the opengl point of view figures with higher order ( front ) are drawn firstly then lower order ( back ). Changing this property emits FigureInvalidated event. [JsonProperty] int Order { get; set; } Property Value int ParentFigure Reference to the parent figure. IGLFigure? ParentFigure { get; } Property Value IGLFigure PrimitiveType Enum that describe which type underlying to the instance. GLPrimitiveType PrimitiveType { get; } Property Value GLPrimitiveType Selected States if primitive is actually selected. It true the primitive is listed in model selected primitives SelectedPrimitives. bool Selected { get; } Property Value bool Vertexes Enumerate primitive gl vertexes. IEnumerable<GLVertex> Vertexes { get; } Property Value IEnumerable<GLVertex> Methods SimpleCmd(bool) Retrieve e simple cmd representation of this primtiive. Its a textual representation of primitive information useful to regen in a separate tool. string SimpleCmd(bool includeHeader = true) Parameters includeHeader bool If true header will prepended to form a complete command. Returns string"
  },
  "api/SearchAThing.OpenGL.Core.IGLTexture2D.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLTexture2D.html",
    "title": "Interface IGLTexture2D | netcore-opengl",
    "keywords": "Interface IGLTexture2D Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Interface that describe the object hold a reference to a gl texture 2d. public interface IGLTexture2D Properties TextureId Id of gl texture created through GLTexture2D uint TextureId { get; } Property Value uint"
  },
  "api/SearchAThing.OpenGL.Core.IGLTriangle.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLTriangle.html",
    "title": "Interface IGLTriangle | netcore-opengl",
    "keywords": "Interface IGLTriangle Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Primitive for GL_TRIANGLES opengl element. public interface IGLTriangle : IGLPrimitive, IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLPrimitive.ParentFigure IGLPrimitive.Vertexes IGLPrimitive.PrimitiveType IGLPrimitive.Order IGLPrimitive.LBBox IGLPrimitive.SimpleCmd(bool) IGLPrimitive.Selected IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.Segments(IGLTriangle) Toolkit.AverageColor(IGLTriangle) Toolkit.DefaultTriangleNormal(IGLTriangle) Toolkit.ToDxfFace3D(IGLTriangle) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties Plane Compute default triangle plane such as: origin = V1 normal = Normalize((V2-V1) x (V3-V1)) Matrix4x4 Plane { get; } Property Value Matrix4x4 See Also DefaultTriangleNormal(IGLTriangle) PlaneNZ Compute triangle plane such as: origin = V1 basez is concordant to owner figure ComputeNormal delegate. Matrix4x4 PlaneNZ { get; } Property Value Matrix4x4 V1 Triangle first vertex. GLVertex V1 { get; set; } Property Value GLVertex V2 Triangle second vertex. GLVertex V2 { get; set; } Property Value GLVertex V3 Triangle third vertex. GLVertex V3 { get; set; } Property Value GLVertex Methods Contains(in Vector3) States if given point is contained in the triangle, borders included. bool Contains(in Vector3 point) Parameters point Vector3 Point to test. Returns bool"
  },
  "api/SearchAThing.OpenGL.Core.IGLTriangleFigure.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLTriangleFigure.html",
    "title": "Interface IGLTriangleFigure | netcore-opengl",
    "keywords": "Interface IGLTriangleFigure Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Specialization of IGLFigure for the type GLTriangle. public interface IGLTriangleFigure : IGLFigure, IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLFigure.FigureInvalidated IGLFigure.Invalidate() IGLFigure.Primitives IGLFigure.RemovePrimitive(GLPrimitiveBase) IGLFigure.PrimitiveType IGLFigure.ExcludeFromShadeWithEdge IGLFigure.ObjectMatrix IGLFigure.Visible IGLFigure.Order IGLFigure.ScreenCoordMode IGLFigure.Highlight IGLFigure.Selected IGLFigure.Alpha IGLFigure.Indexes IGLFigure.LBBox IGLFigure.OBBox IGLFigure.ExpandBBox IGLFigure.EvalInShadowMap IGLFigure.Tag IGLFigure.SimpleCmd() IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.BuildVertexPosDict(IGLFigure, float) Ext.Center(IGLFigure) Ext.Vertexes(IGLFigure) Ext.Move<T>(T, in Vector3, bool) Ext.Move<T>(T, float, float, float, bool) Ext.SetAlpha<T>(T, float?) Ext.SetColor<T>(T, in Color) Ext.SetColor<T>(T, in Vector4) Ext.SetOrder<T>(T, int) Ext.SetScreenMode<T>(T, bool) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties Texture2D Optional texture 2d object associated to this triangle. TextureST vertex coords of triangles vertexes will be used to map the texture. Changing this property emits FigureInvalidated event. GLTexture2D? Texture2D { get; set; } Property Value GLTexture2D Methods Add(GLTriangle) Add given point to the figure primitives set. void Add(GLTriangle point) Parameters point GLTriangle Remove(GLTriangle) Add given point to the figure primitives set. void Remove(GLTriangle point) Parameters point GLTriangle SetupComputeNormal(bool, ComputeTriangleNormalDelegate?) Set the triangle compute normal function. If no argument given a default per triangle normal compute will be done. Changing this property imply RebuildNormal(bool) event. void SetupComputeNormal(bool mean, ComputeTriangleNormalDelegate? computeNormal) Parameters mean bool If true a mean of normals triangle vertexes grouped by position will be computed. computeNormal ComputeTriangleNormalDelegate Allow to override default triangle normal function DefaultComputeNormal."
  },
  "api/SearchAThing.OpenGL.Core.IGLVertex.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLVertex.html",
    "title": "Interface IGLVertex | netcore-opengl",
    "keywords": "Interface IGLVertex Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Represent a vertex and its the base object managed by the GLVertexManager. Primitives such as GLPoint, GLLine and GLTriangle store their vertex information using this type. When the gl render happens ( see Render(IRenderDevice?) ) all the model vertexes are mapped to the gpu ram and figures with their vertex indexes are feed into. Internally the GLVertexManager hold a struct projection of this object, the GLVertexStruct. [JsonObject(MemberSerialization.OptIn)] public interface IGLVertex : IGLVertexManagerObject, INotifyPropertyChanged Inherited Members IGLVertexManagerObject.ParentVertexManager IGLVertexManagerObject.Copy() INotifyPropertyChanged.PropertyChanged Extension Methods Ext.PositionSignature(IGLVertex, float) Ext.SetColor(IGLVertex, in Color) Ext.SetColor(IGLVertex, in Vector4) Ext.ToDxfVector3(IGLVertex) Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Remarks In order to manage operations such as addition and removal of figures with related vertexes the vertex manager doesn't allow to register a gl vertex twice, thus two figures cannot share the same gl vertex reference. Note: Internally the vertex manager doesn't duplicate any vertex equals to other existing. Properties EffectiveNormal Vertex normal [local] eventually inverted if flag InvertNormal present. Vector3 EffectiveNormal { get; } Property Value Vector3 Index GLVertexManager vertex index associated to this gl vertex or null if not yet registered to. uint? Index { get; } Property Value uint? InvertNormal Invert the normal flag ( used by Mirror(in Matrix4x4). [JsonProperty] bool InvertNormal { get; set; } Property Value bool See Also EffectiveNormal IsAttached States if this vertex is already registed to a vertex manager. bool IsAttached { get; } Property Value bool MaterialColor Color encoded in vector4 (range 0..1) as (red, green, blue, alpha). Alpha=1 (full opaque). Alpha=0 (full transparent). [JsonProperty] Vector4 MaterialColor { get; set; } Property Value Vector4 MaterialProperties Describe the strength (0..1) of the ambient, diffuse, specular light effects. [JsonProperty] Vector3 MaterialProperties { get; set; } Property Value Vector3 Normal Vertex normal [local]. [JsonProperty] Vector3 Normal { get; set; } Property Value Vector3 ParentFigure Figure referencing this vertex in one of their primitive's components. Its null if related figure not yet added to the vertex manager. IGLFigure? ParentFigure { get; } Property Value IGLFigure ParentPrimitive Primitive referencing this vertex in one of their components. Its null if related figure not yet added to the vertex manager. IGLPrimitive? ParentPrimitive { get; } Property Value IGLPrimitive Position Vertex position [local]. [JsonProperty] Vector3 Position { get; set; } Property Value Vector3 ScreenCoordMode Evaluated through parent IGLFigure it states if this vertex has to be processed in the gl shader pipeline within UNINAME_uFigureScreenCoord uniform flag. bool ScreenCoordMode { get; } Property Value bool See Also ScreenModelMatrix ScreenProjectionMatrix Signature String signature of this vertex, used by GLVertexManager to keep a unique vertex array of GLVertexStruct. string Signature { get; } Property Value string TextureST Vertex texture offset ( range [0,0] to [1,1] ). [JsonProperty] Vector2 TextureST { get; set; } Property Value Vector2 Methods ToStruct() Create a struct representation of this vertex. Some information used only by framework itself not pertinent to those used by the shader, such as Index are omitted. GLVertexStruct ToStruct() Returns GLVertexStruct See Also GLVertexStruct"
  },
  "api/SearchAThing.OpenGL.Core.IGLVertexManager.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLVertexManager.html",
    "title": "Interface IGLVertexManager | netcore-opengl",
    "keywords": "Interface IGLVertexManager Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Vertex manager primary purpose is to keep a linear sequence of distinct GLVertexStruct structs that will populated by the gl vertex GLVertex objects. The same GLVertex reference cannot be registered twice in vertex manager, these stay connected to their figure primitives until removed from. public interface IGLVertexManager : INotifyPropertyChanged Inherited Members INotifyPropertyChanged.PropertyChanged Properties ExpandModelBBox Flag to state if vertex added to this vertex manager imply expansion of the gl model (Default: true). More (custom) vertex manager can be registered into the gl model, may for temporary purpose and setting this variable to false at the construct of these custom vertex manager allow to unaffect the gl model bbox. Should be used to avoid the zoomfit to evaluate temporary vertex manager figures. GLVertexManager bool ExpandModelBBox { get; } Property Value bool FigureCount Actual size of registered figures list. int FigureCount { get; } Property Value int Figures Enumerates vertex manager registered figures. IEnumerable<GLFigureBase> Figures { get; } Property Value IEnumerable<GLFigureBase> LBBox BBox of registered figure vertexes [local]. BBox LBBox { get; } Property Value BBox TriangleCount Actual count of gl triangles belonging to added figures. int TriangleCount { get; } Property Value int VertexCount Actual size of GLVertexStruct vertex list. int VertexCount { get; } Property Value int Methods AddFigure(GLFigureBase) Adds given figure to the vertex manager. All vertexes belonging to the figure's primitives will be added. Emits FigureAdded event. void AddFigure(GLFigureBase figure) Parameters figure GLFigureBase Figure to add. Clear() Clear all vertexes and figures from the vertex manager, and emit FiguresCleared and Invalidated event. void Clear() GetVboArray() Used internally by the GLModel.RenderVertexManager to render the scene. Contains the list of vertex structs directly mapped to the gpu. This array will be built each time a vertex changes from the ToArray() of the list Vertexes. To avoid performance penalty in a scenario where you need to change the position of a figure you can use ObjectMatrix that doesn't affects at all vertexes because is a figure related information forwarded to the gl pipeline shader through UNINAME_uObject. GLVertexStruct[] GetVboArray() Returns GLVertexStruct[] RemoveFigure(GLFigureBase) Remove given figure from the vertex manager. All vertexes belonging to the figure's primitives will be removed. Emits FigureRemoved event. bool RemoveFigure(GLFigureBase figure) Parameters figure GLFigureBase Figure to remove. Returns bool Events FigureAdded Event emitted when a figure was added. event FigureEvent FigureAdded Event Type FigureEvent FigureRemoved Event emitted when a figure was removed. event FigureEvent FigureRemoved Event Type FigureEvent FiguresCleared Event emitted when all figures cleared. The list of figures removed is reported through the event argument of FiguresEvent delegate. event FiguresEvent FiguresCleared Event Type FiguresEvent Invalidated Event emitted when a vertex was added or removed or all vertexes cleared. Its used by the GLModel to track the model changes and emit a ViewInvalidated event. event VertexManagerInvalidatedDelegate Invalidated Event Type VertexManagerInvalidatedDelegate See Also Clear()"
  },
  "api/SearchAThing.OpenGL.Core.IGLVertexManagerObject.html": {
    "href": "api/SearchAThing.OpenGL.Core.IGLVertexManagerObject.html",
    "title": "Interface IGLVertexManagerObject | netcore-opengl",
    "keywords": "Interface IGLVertexManagerObject Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Interface for GL objects such as IGLFigure, IGLPrimitive and IGLVertex. The purpose is to ensure that each object implementing this interface allow parent traversal till root vertex manager object which purpouse is to manage the collection of vertexes. public interface IGLVertexManagerObject Extension Methods Ext.EnsureDetached(IGLVertexManagerObject) Ext.IsAttached(IGLVertexManagerObject) Properties ParentVertexManager Vertex manager which this object is registered to. Before the object is added to the GLModel, therefore to the GLVertexManager, or after the object is removed from, this pointer is null. GLVertexManager? ParentVertexManager { get; } Property Value GLVertexManager Methods Copy() Create a copy of this gl vertex manager object copying all relevant data except the ParentVertexManager that will default to null for copies object until added to a vertex manager. IGLVertexManagerObject Copy() Returns IGLVertexManagerObject"
  },
  "api/SearchAThing.OpenGL.Core.IRenderDevice.html": {
    "href": "api/SearchAThing.OpenGL.Core.IRenderDevice.html",
    "title": "Interface IRenderDevice | netcore-opengl",
    "keywords": "Interface IRenderDevice Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll A render device will read pixels from given gl context through ReadPixels and write to an appropriate device implementation ( avalonia, offscreen, dummy devices available ). public interface IRenderDevice : INotifyPropertyChanged Inherited Members INotifyPropertyChanged.PropertyChanged Properties Size Retrieve actual size of the device screen (pixels). Size Size { get; } Property Value Size TransferGLPixelsCount Stats counter of TransferGLPixels(GL) calls. int TransferGLPixelsCount { get; } Property Value int Methods Post(Action) Used by GLControl to emit PropertyChanged event. This is needed in most frameworks that allow ui interactions only from the ui thread itself. Its necessary expecially if want to access ui data from a separate Task running in parallel. void Post(Action action) Parameters action Action Action to be executed in ui thread. TransferGLPixels(GL) Use given GL object to issue a ReadPixel and transfer them to destination device. Following some details how this function is involved in the rendering process: image \\image html ReactiveUI.svg width=100% Here an example implementation given from the TransferGLPixels(GL): \\snippet{'trimleft'} src/render/OffscreenRenderDevice.cs OffscreenTrasferGLPixels void TransferGLPixels(GL GL) Parameters GL GL"
  },
  "api/SearchAThing.OpenGL.Core.InvalidateEnum.html": {
    "href": "api/SearchAThing.OpenGL.Core.InvalidateEnum.html",
    "title": "Enum InvalidateEnum | netcore-opengl",
    "keywords": "Enum InvalidateEnum Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Type of GLControl invalidation. public enum InvalidateEnum Fields None = 0 Do not render. RebuildModelAndRedraw = 2 Render forcing regeneration of model through BuildModel. RedrawOnly = 1 Render without forcing BuildModel."
  },
  "api/SearchAThing.OpenGL.Core.Line.html": {
    "href": "api/SearchAThing.OpenGL.Core.Line.html",
    "title": "Class Line | netcore-opengl",
    "keywords": "Class Line Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Geometric entity 3d line. Internally encoded as From and V vectors, where To = From + V. Can be created through static methods FromTo(in Vector3, in Vector3) and PointV(in Vector3, in Vector3). public class Line Inheritance object Line Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Ext.Intersect(Line, float, GLFigureBase) Ext.ToGLLine(Line, in Color, in Color) Ext.ToGLLine(Line, in Color?) Ext.ToLine3D(Line) Ext.Transform(Line, in Matrix4x4) Properties From Coordinate \"from\" of the line. public Vector3 From { get; } Property Value Vector3 Length Length of the line segment. public float Length { get; } Property Value float MidPoint Line midpoint as (From + To) / 2. public Vector3 MidPoint { get; } Property Value Vector3 To Coordinate \"to\" of the line. public Vector3 To { get; } Property Value Vector3 V Vector extension of the line so that To = From + V. public Vector3 V { get; } Property Value Vector3 Methods Contains(float, in Vector3, out Vector3, bool) States if this line contains given point within given tolerance. public float? Contains(float tol, in Vector3 p, out Vector3 prj, bool segmentMode = false) Parameters tol float Comparision tolerance. p Vector3 Point to test if its contained in this line. prj Vector3 Point projected onto this line. segmentMode bool If true line will treated as a segment ( Default: false ). Returns float? Distance to projected point if contained under given tolerance, null otherwise. FromTo(in Vector3, in Vector3) Create a line by two given points. public static Line FromTo(in Vector3 from, in Vector3 to) Parameters from Vector3 From point. to Vector3 To point. Returns Line Intersect(in Matrix4x4) Test if this line intersect given plane and retrieve intersection point or null if no intersect. public Vector3? Intersect(in Matrix4x4 plane) Parameters plane Matrix4x4 Plane to test line intersection with. ( MakeCS(in Vector3, in Vector3) to create planes ) Returns Vector3? Intersection point or null if no intersection found. Remarks References: https://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection Intersect(float, in Line, out float, bool, bool) Intresect this line to the given other. public Vector3? Intersect(float tol, in Line other, out float dst, bool thisAsSegment = false, bool otherAsSegment = false) Parameters tol float Length tolerance comparision. other Line Other line. dst float Distance between two intersecting lines. thisAsSegment bool Treat this line as a segment from,to. otherAsSegment bool Treat other line as a segment from,to. Returns Vector3? Intersection point or null if line parallel or no intersects. PointV(in Vector3, in Vector3) Create a line by the from position and given extension. public static Line PointV(in Vector3 point, in Vector3 v) Parameters point Vector3 From coordinate. v Vector3 Extension vector. Returns Line Scale(in Vector3, float) Create a new line by scaling from, to coordinates respect the given reference point and scale factor. public Line Scale(in Vector3 refpt, float factor) Parameters refpt Vector3 Reference point. factor float Scale factor. Returns Line Scaled line. ToString() public override string ToString() Returns string"
  },
  "api/SearchAThing.OpenGL.Core.MaterialProperties.html": {
    "href": "api/SearchAThing.OpenGL.Core.MaterialProperties.html",
    "title": "Struct MaterialProperties | netcore-opengl",
    "keywords": "Struct MaterialProperties Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Describe the strength (0..1) of the ambient, diffuse, specular light effects. public struct MaterialProperties Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Ambient Ambient strength ( 0..1 ). public float Ambient Field Value float Diffuse Diffuse strength ( 0..1 ). public float Diffuse Field Value float Specular Specular strength ( 0..1 ). public float Specular Field Value float Properties Default Default material properties. public static MaterialProperties Default { get; } Property Value MaterialProperties Methods ToVector3() public Vector3 ToVector3() Returns Vector3"
  },
  "api/SearchAThing.OpenGL.Core.ModelViewInvalidated.html": {
    "href": "api/SearchAThing.OpenGL.Core.ModelViewInvalidated.html",
    "title": "Delegate ModelViewInvalidated | netcore-opengl",
    "keywords": "Delegate ModelViewInvalidated Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Use for ViewInvalidated event emitted when a vertex of the model change. public delegate void ModelViewInvalidated(GLModel model) Parameters model GLModel GL model reference."
  },
  "api/SearchAThing.OpenGL.Core.MouseStart.html": {
    "href": "api/SearchAThing.OpenGL.Core.MouseStart.html",
    "title": "Class MouseStart | netcore-opengl",
    "keywords": "Class MouseStart Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Helper class to save GLControl gl matrixes and a screen start point mainly used for pan and rotate at the beginning of operation. public class MouseStart Inheritance object MouseStart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MouseStart(GLControl, in Vector2) public MouseStart(GLControl glControl, in Vector2 startPt) Parameters glControl GLControl startPt Vector2 Properties GLMatrixes public GLMatrixes GLMatrixes { get; } Property Value GLMatrixes StartPt public Vector2 StartPt { get; } Property Value Vector2"
  },
  "api/SearchAThing.OpenGL.Core.NotificationDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.NotificationDelegate.html",
    "title": "Delegate NotificationDelegate | netcore-opengl",
    "keywords": "Delegate NotificationDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Used by the avalonia GL control to listen for notification coming from the model. These notification will displayed using gui notification manager. public delegate void NotificationDelegate(string title, string msg, GLNotificationType type = GLNotificationType.Information) Parameters title string Title of notification. msg string Message of notification. type GLNotificationType Icon/color type of notification."
  },
  "api/SearchAThing.OpenGL.Core.OffscreenRenderDevice.html": {
    "href": "api/SearchAThing.OpenGL.Core.OffscreenRenderDevice.html",
    "title": "Class OffscreenRenderDevice | netcore-opengl",
    "keywords": "Class OffscreenRenderDevice Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Render device for offscreen mode that acts as a bitmap file writer. public class OffscreenRenderDevice : IRenderDevice, INotifyPropertyChanged Inheritance object OffscreenRenderDevice Implements IRenderDevice INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OffscreenRenderDevice(string, in Size) Create an offscreen render device. public OffscreenRenderDevice(string pathfilename, in Size size) Parameters pathfilename string Target bitmap pathfilename. size Size Size of image created. Properties Pathfilename Pathfilename public string Pathfilename { get; set; } Property Value string Size Retrieve actual size of the device screen (pixels). public Size Size { get; set; } Property Value Size TransferGLPixelsCount Stats counter of TransferGLPixels(GL) calls. public int TransferGLPixelsCount { get; set; } Property Value int Methods OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Post(Action) Used by GLControl to emit PropertyChanged event. This is needed in most frameworks that allow ui interactions only from the ui thread itself. Its necessary expecially if want to access ui data from a separate Task running in parallel. public void Post(Action action) Parameters action Action Action to be executed in ui thread. TransferGLPixels(GL) Use given GL object to issue a ReadPixel and transfer them to destination device. Following some details how this function is involved in the rendering process: image \\image html ReactiveUI.svg width=100% Here an example implementation given from the TransferGLPixels(GL): \\snippet{'trimleft'} src/render/OffscreenRenderDevice.cs OffscreenTrasferGLPixels public void TransferGLPixels(GL GL) Parameters GL GL Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.Plate.html": {
    "href": "api/SearchAThing.OpenGL.Core.Plate.html",
    "title": "Class Plate | netcore-opengl",
    "keywords": "Class Plate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Plate geometry composed by four vertexes, used primarly to be converted in triangles with GetTriangles(Plate, in Color?, bool). public class Plate Inheritance object Plate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Ext.GetTriangles(Plate, Color?, Color?, Color?, Color?, bool) Ext.GetTriangles(Plate, in Color?, bool) Constructors Plate(in Vector3, in Vector3, in Vector3, in Vector3) Create a plate with given four points. public Plate(in Vector3 p1, in Vector3 p2, in Vector3 p3, in Vector3 p4) Parameters p1 Vector3 First point. p2 Vector3 Second point. p3 Vector3 Third point. p4 Vector3 Fourth point. Properties Center Mean point of the plate. public Vector3 Center { get; } Property Value Vector3 P1 First plate point. public Vector3 P1 { get; } Property Value Vector3 P2 Second plate point. public Vector3 P2 { get; } Property Value Vector3 P3 Third plate point. public Vector3 P3 { get; } Property Value Vector3 P4 Fourth plate point. public Vector3 P4 { get; } Property Value Vector3 Methods Invert() Create a new plate with point P1, P2, P3, P4 sequence reversed to P4. P3, P2, P1. This is useful to invert normals of plate generated triangles (GetTriangles(Plate, in Color?, bool)). public Plate Invert() Returns Plate Move(in Vector3) Create a new plate moved by the given delta vector. public Plate Move(in Vector3 delta) Parameters delta Vector3 Delta vector. Returns Plate Moved plate."
  },
  "api/SearchAThing.OpenGL.Core.PointTransformNfo.html": {
    "href": "api/SearchAThing.OpenGL.Core.PointTransformNfo.html",
    "title": "Class PointTransformNfo | netcore-opengl",
    "keywords": "Class PointTransformNfo Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Helper class used by SearchAThing.OpenGL.GUI.GLDevTool. Given the vertex, size, gl matrixes it will update object, normal, local, world, eye, clip, screen transformed coordinates. public class PointTransformNfo : INotifyPropertyChanged Inheritance object PointTransformNfo Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PointTransformNfo(GLControl, GLVertex, bool) public PointTransformNfo(GLControl glControl, GLVertex vertex, bool deferredRecompute = false) Parameters glControl GLControl vertex GLVertex deferredRecompute bool Properties Clip Clip public Vector4 Clip { get; } Property Value Vector4 DeferredRecompute public bool DeferredRecompute { get; } Property Value bool Eye Eye public Vector3 Eye { get; } Property Value Vector3 GLControl public GLControl? GLControl { get; } Property Value GLControl Local Local public Vector3 Local { get; } Property Value Vector3 NDC ClipW public Vector3 NDC { get; } Property Value Vector3 Normal Normal public Vector3 Normal { get; } Property Value Vector3 Object Object public Vector3 Object { get; } Property Value Vector3 Screen Screen public Vector2 Screen { get; } Property Value Vector2 Vertex public GLVertex Vertex { get; } Property Value GLVertex World World public Vector3 World { get; } Property Value Vector3 Methods Fmt(string) public string Fmt(string prefix) Parameters prefix string Returns string OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.Core.RayCastHitTest.html": {
    "href": "api/SearchAThing.OpenGL.Core.RayCastHitTest.html",
    "title": "Class RayCastHitTest | netcore-opengl",
    "keywords": "Class RayCastHitTest Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Hold raycast hit test info. Intersect(Line, float, GLFigureBase) public class RayCastHitTest Inheritance object RayCastHitTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RayCastHitTest(GLFigureBase, GLPrimitiveBase, Vector3, float) Create ray cast hit test nfo object. public RayCastHitTest(GLFigureBase figure, GLPrimitiveBase primitive, Vector3 hitCoord, float distance) Parameters figure GLFigureBase Figure hitted. primitive GLPrimitiveBase Figure primitive hitted. hitCoord Vector3 Hit coord [object]. distance float Distance of the ray from hitted primitive. Properties Distance Distance of the ray from hitted primitive. For point and line entity this is the distance of the ray projection to entity. for triangle entity this value is 0. public float Distance { get; } Property Value float Figure Figure hitted. public GLFigureBase Figure { get; } Property Value GLFigureBase HitCoord Hit coord [object]. public Vector3 HitCoord { get; } Property Value Vector3 Primitive Figure primitive hitted. public GLPrimitiveBase Primitive { get; } Property Value GLPrimitiveBase"
  },
  "api/SearchAThing.OpenGL.Core.RenderPreviewDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.RenderPreviewDelegate.html",
    "title": "Delegate RenderPreviewDelegate | netcore-opengl",
    "keywords": "Delegate RenderPreviewDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Used by NotEmptyRenderPreview when notify the first non empty bbox render. public delegate void RenderPreviewDelegate(GLControl glControl) Parameters glControl GLControl GL control reference."
  },
  "api/SearchAThing.OpenGL.Core.Toolkit.html": {
    "href": "api/SearchAThing.OpenGL.Core.Toolkit.html",
    "title": "Class Toolkit | netcore-opengl",
    "keywords": "Class Toolkit Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public static class Toolkit Inheritance object Toolkit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ArbitraryAxisAlghorithm(in Vector3, out Vector3, out Vector3, out Vector3) Build world matrix using Arbitrary Axis Algorithm. public static void ArbitraryAxisAlghorithm(in Vector3 n, out Vector3 x, out Vector3 y, out Vector3 z) Parameters n Vector3 Normalized normal vector to which based the AAA construction. x Vector3 Computed xbase.. y Vector3 Computed ybase. z Vector3 Computed zbase. Remarks Origin has to be specified apart ( MakeCS(in Vector3, in Vector3) ). References: https://images.autodesk.com/adsk/files/autocad_2012_pdf_dxf-reference_enu.pdf ( page 252 ) AverageColor(IGLTriangle) Average color of triangles vertexes color. public static Color AverageColor(this IGLTriangle tri) Parameters tri IGLTriangle Returns Color CameraRotate(float, float, in Vector3, in Vector3, in Vector3, out Vector3, out Vector3) Rotate the camera [view] a given rotation center [local]. public static void CameraRotate(float sAngleXRad, float sAngleYRad, in Vector3 wCameraPos, in Vector3 wCameraTarget, in Vector3 wCameraUp, out Vector3 wRotatedCameraTarget, out Vector3 wRotatedCameraUp) Parameters sAngleXRad float Camera rotation screen X angle (rad).. sAngleYRad float Camera rotation screen Y angle (rad). wCameraPos Vector3 Actual camera position [world]. wCameraTarget Vector3 Actual camera target [world]. wCameraUp Vector3 Actual camera up [world]. wRotatedCameraTarget Vector3 Rotated camera target [world]. wRotatedCameraUp Vector3 Rotated camera up [world]. CameraTilt(float, in Vector3, out Vector3) Tilt camera [view] by rotating it's up vector around [view] z axis. public static void CameraTilt(float angleRad, in Vector3 cu, out Vector3 cuTilted) Parameters angleRad float Tilt angle (rad) [view]. cu Vector3 Camera up vector (x,y,z) [view]. cuTilted Vector3 Tilted camera up vector (x,y,z) [view]. ClipToEye(in Vector4, in Matrix4x4) Converts given clip space coord to the corresponding eye space coord. Makes use of the inverse of the given projection matrix. public static Vector3 ClipToEye(in Vector4 clip, in Matrix4x4 pm) Parameters clip Vector4 Clip space coord (x,y,z,w). pm Matrix4x4 Projection matrix. Returns Vector3 Eye space coord (x,y,z). ClipToLocal(in Vector4, in Matrix4x4, in Matrix4x4) Converts given clip space coord to the corresponding local space coord. It makes use of the inverse of given modelview matrix and projection matrix. public static Vector3 ClipToLocal(in Vector4 clip, in Matrix4x4 mvm, in Matrix4x4 pm) Parameters clip Vector4 Clip space coord (x,y,z,w). mvm Matrix4x4 Modelview matrix (model * view). pm Matrix4x4 Projection matrix. Returns Vector3 Local space coord (x,y,z). ClipToNDC(in Vector4) Converts given clip coord to the corresponding ndc space coord. public static Vector3 ClipToNDC(in Vector4 clip) Parameters clip Vector4 Clip space coord (x,y,z,w). Returns Vector3 Normalized device coord (x,y,z). ClipToScreen(in Vector4, in Vector2) Converts given clip space coord to the corresponding screen coord. public static Vector2 ClipToScreen(in Vector4 clip, in Vector2 size) Parameters clip Vector4 Clip space coord (x,y,z,w). size Vector2 Screen size (x,y). Returns Vector2 Screen space coord (x,y). ComputeEBBox(IEnumerable<Vector3>, in Matrix4x4, in Matrix4x4, out Vector2, out Vector2) Compute the eye space bounding box (x,y,z) of all local space coordinates (x,y,z) given. public static void ComputeEBBox(IEnumerable<Vector3> lPts, in Matrix4x4 mm, in Matrix4x4 vm, out Vector2 eMin, out Vector2 eMax) Parameters lPts IEnumerable<Vector3> Local space coordinates (x,y,z) [local] to include in evaluation of th eye space bbox. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. eMin Vector2 Computed minimum eye space coordinate (x,y,z) [eye], eMax Vector2 Computed maximum eye space coordinate (x,y,z) [eye]. ComputeSBBox(IEnumerable<Vector3>, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, out Vector2, out Vector2, BBox?) Compute the screen space bounding box (x,y) of all local space coordinates (x,y,z) given. public static void ComputeSBBox(IEnumerable<Vector3> lPts, in Vector2 size, in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, out Vector2 sMin, out Vector2 sMax, BBox? lBBox = null) Parameters lPts IEnumerable<Vector3> Local space coordinates (x,y,z) [local] to include in evaluation of screen space bbox. size Vector2 Screen size (x,y) [screen]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. pm Matrix4x4 Projection matrix [eye]. sMin Vector2 Computed minimum screen space coordinate (x,y) [screen]. sMax Vector2 Computed maximum screen space coordinate (x,y) [screen]. lBBox BBox If given a non null BBox, the corresponding local space bbox [local] will emitted. CreateModelMatrix(in Vector3, in Quaternion, in Vector3, out Matrix4x4) Create model matrix to convert [local] space to [world] space. It's a SRT ( Scale-Rotate-Translate ) transformations matrix. It's used for one touch rotation of the model space objects. public static void CreateModelMatrix(in Vector3 scale, in Quaternion rotation, in Vector3 translation, out Matrix4x4 mm) Parameters scale Vector3 Scale factor (x,y). rotation Quaternion Rotation quaternion (x,y,z,w). translation Vector3 Translation (x,y,z). mm Matrix4x4 Model matrix [local]. See Also ModelRotate(float, float, in Vector3, in Matrix4x4, in Matrix4x4, out Matrix4x4) CreateOrthogonalProjectionMatrix(in Vector2, float, float, float, in Matrix4x4, out Matrix4x4) Create projection matrix ( Orthogonal mode ) to convert [eye] to [clip] space. public static void CreateOrthogonalProjectionMatrix(in Vector2 size, float eOrthoZoom, float near, float far, in Matrix4x4 vm, out Matrix4x4 pm) Parameters size Vector2 screen size (x,y) [screen]. eOrthoZoom float [eye] zoom factor about screen size used as a reference. near float Absolute position along [eye] z axis of the near clipping plane. far float Absolute position along [eye] z axis of the far clipping plane. vm Matrix4x4 pm Matrix4x4 CreatePerspectiveProjectionMatrix(float, float, float, float, out Matrix4x4) Create projection matrix ( Perspective mode ) to convert [eye] to [clip] space. It's used to create perspective field of view in perspective mode. public static void CreatePerspectiveProjectionMatrix(float fovDeg, float ar, float near, float far, out Matrix4x4 pm) Parameters fovDeg float Angle of view [deg]. ar float Projection screen aspection ratio (x/y). near float Absolute position along [eye] z axis of the near clipping plane. far float Absolute position along [eye] z axis of the far clipping plane. pm Matrix4x4 Projection matrix [eye]. See Also PreventZFighting(BBox, in Matrix4x4, in Matrix4x4, in Vector3, out float, out float) CreateViewMatrix(in Vector3, in Vector3, in Vector3, out Matrix4x4) Create view matrix to convert [world] to [eye] space. It's used for pan, camera movements functions and either for scale function in perspective mode. public static void CreateViewMatrix(in Vector3 cameraPos, in Vector3 cameraTarget, in Vector3 cameraUp, out Matrix4x4 vm) Parameters cameraPos Vector3 Camera position (x,y,z) [world]. cameraTarget Vector3 Camera target (x,y,z) [world]. cameraUp Vector3 Camera up (x,y,z) [world]. vm Matrix4x4 View matrix [world]. See Also OrthoPan(in Vector2, in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) PerspectivePan(in Vector3, in Vector2, in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) CameraRotate(float, float, in Vector3, in Vector3, in Vector3, out Vector3, out Vector3) CameraTilt(float, in Vector3, out Vector3) PerspectiveZoom(float, BBox, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) DefaultTriangleNormal(IGLTriangle) Default triangle compute normal function: Normalize((V2-V1) x (V3-V1)) public static Vector3 DefaultTriangleNormal(this IGLTriangle tri) Parameters tri IGLTriangle Triangle which compute default normal. Returns Vector3 Triangle default normal. DeserializeMatrix4x4(string) Deserialize to a Matrix4x4 from a string of 16 float space separated ( invariant ). public static Matrix4x4 DeserializeMatrix4x4(string txt) Parameters txt string Serialized Matrix4x4 text input. Returns Matrix4x4 See Also Serialize(in Matrix4x4) EyeToClip(in Vector3, in Matrix4x4) Converts given world eye coord to the corresponding clip space coord. public static Vector4 EyeToClip(in Vector3 eye, in Matrix4x4 pm) Parameters eye Vector3 Eye coord (x,y,z). pm Matrix4x4 Projection matrix. Returns Vector4 Clip space coord (x,y,z,w). EyeToLocal(in Vector3, in Matrix4x4) Converts given eye space coord to the corresponding local space coord. It makes use of the inverse of given modelview matrix. public static Vector3 EyeToLocal(in Vector3 eye, in Matrix4x4 mvm) Parameters eye Vector3 Eye space (x,y,z) coord. mvm Matrix4x4 Modelview matrix (model * view). Returns Vector3 Local space coord (x,y,z). EyeToWorld(in Vector3, in Matrix4x4) Converts given eye space coord to the corresponding world space coord. Makes use of the inverse of the given view matrix. public static Vector3 EyeToWorld(in Vector3 eye, in Matrix4x4 vm) Parameters eye Vector3 Eye space coord (x,y,z). vm Matrix4x4 View matrix. Returns Vector3 World space coord (x,y,z). GetContourColor(float, int, int, bool) Retrieve color that is in the given offset in given hue range. Default: hue range [240, 300] generating gradients in offeset range [0, 1] traversing following colors ( [blue, cyan, green, yellow, orange, red, fuchsia]. Following some colors hue values: 240 = Blue (0,0,255) 180 = Cyan (0,255,255) 120 = Green (0,255,0) 60 = Yellow (255,255,0) 30 = Orange (255,128,0) 0 = Red (255,0,0) 300 = Fuchsia (255,0,255) 270 = Violet (128,0,255) ref: https://en.wikipedia.org/wiki/HSL_and_HSV public static Color GetContourColor(float offset, int hueFrom = 240, int hueTo = 300, bool decreaseHue = true) Parameters offset float Offset in range [0,1] of the color to choose in given hue range. hueFrom int Hue of color range from. hueTo int Hue of color range to. decreaseHue bool If true (default) offset traverse hue range decreasing hue starting by \"from\" toward \"to\". Otherwise \"to\" hue will reached by the \"from\" through increment of hue. Returns Color Color corresponding given range offset. GroupByAdjacency(float, IEnumerable<Line>) From a set of lines makes groups of them where each group is a set of lines that constitute a single polyline within lines sorted by adjacency (from,to not necessary contiguous). Lines with zero length will discarded. public static List<List<Line>> GroupByAdjacency(float tol, IEnumerable<Line> lines) Parameters tol float Comparision length tolerance. lines IEnumerable<Line> Input lines. Returns List<List<Line>> Line groups. See Also DistinctPoints(IEnumerable<Line>, float) LocalToEye(in Vector3, in Matrix4x4) Converts given local space coord to the corresponding eye coord. public static Vector3 LocalToEye(in Vector3 local, in Matrix4x4 mvm) Parameters local Vector3 Local space coord (x,y,z). mvm Matrix4x4 Modelview matrix ( model * view ). Returns Vector3 Eye space coord (x,y,z). LocalToObject(in Vector3, in Matrix4x4) Converts given local space coord to the corresponding object space coord. Makes use of the inverse of the given object matrix. public static Vector3 LocalToObject(in Vector3 local, in Matrix4x4 om) Parameters local Vector3 Local space coord (x,y,z). om Matrix4x4 Object matrix. Returns Vector3 Object space coord (x,y,z). LocalToScreen(in Vector3, in Vector2, in Matrix4x4) Converts given local space coord to the corresponding screen coord. public static Vector2 LocalToScreen(in Vector3 local, in Vector2 size, in Matrix4x4 mvpm) Parameters local Vector3 Local space coord (x,y,z). size Vector2 Sceen size (x,y). mvpm Matrix4x4 ModelViewProjection matrix ( model * view * projection ). Returns Vector2 Screen space coord (x,y). LocalToWorld(in Vector3, in Matrix4x4) Converts given local space coord to the corresponding world space coord. public static Vector3 LocalToWorld(in Vector3 local, in Matrix4x4 mm) Parameters local Vector3 Local space coord (x,y,z). mm Matrix4x4 Model matrix. Returns Vector3 World space coord (x,y,z). MakeCCS(in Vector3, in Vector3, in Vector3) Make a world matrix that represent the one used by the camera [world]. Basey = Normalized(cameraUp) Basez = Normalized(cameraPos - cameraTarget) public static Matrix4x4 MakeCCS(in Vector3 cameraPos, in Vector3 cameraTarget, in Vector3 cameraUp) Parameters cameraPos Vector3 Camera position [world]. cameraTarget Vector3 Camera target [world]. cameraUp Vector3 Camera up versor [world]. Returns Matrix4x4 MakeCS(in Vector3, in Vector3) Build world matrix using ArbitraryAxisAlghorithm(in Vector3, out Vector3, out Vector3, out Vector3) and sets the origin to the given one. public static Matrix4x4 MakeCS(in Vector3 origin, in Vector3 N) Parameters origin Vector3 Origin to set to the created world matrix. N Vector3 Normalized normal vector. Returns Matrix4x4 World matrix. MakeCS(in Vector3, in Vector3, in Vector3) Create a right-hand rule world matrix with given origin and normalized orthonormal x, y base vectors. public static Matrix4x4 MakeCS(in Vector3 origin, in Vector3 baseX, in Vector3 baseY) Parameters origin Vector3 World origin. baseX Vector3 World basex. baseY Vector3 World basey. Returns Matrix4x4 World matrix. MakeCS(in Vector3, in Vector3, in Vector3, bool) Create a right-hand rule world matrix with given origin and reference vectors vx, vy. public static Matrix4x4 MakeCS(in Vector3 origin, in Vector3 vx, in Vector3 vy, bool makeOrthonormalization = false) Parameters origin Vector3 World origin. vx Vector3 Reference vector to compute basex. vy Vector3 Reference vector to compute basey. makeOrthonormalization bool If false (default) vx and vy must given already normalized and ensured to be orthonormal. If true base vector are computed by giving hinting vx, vy arguments: - baseZ = Normalize(vx x vy) - baseX = Normalize(vx) - baseY = baseZ x baseX Returns Matrix4x4 World matrix with basex aligned to given vx. MakeCS(in Vector3, in Vector3, in Vector3, in Vector3) Create world matrix with given origin and normalized orthonormal x, y, z base vectors. public static Matrix4x4 MakeCS(in Vector3 origin, in Vector3 baseX, in Vector3 baseY, in Vector3 baseZ) Parameters origin Vector3 World origin. baseX Vector3 World basex. baseY Vector3 World basey. baseZ Vector3 World basez. Returns Matrix4x4 World matrix. MakeFrustum(GLControl) Generate a gl figure that represents the camera frustum object. public static List<GLFigureBase> MakeFrustum(this GLControl glControl) Parameters glControl GLControl Returns List<GLFigureBase> MakeFrustum(in Vector3, in Vector3, in Vector3, float, float, float, in Matrix4x4) Generate a gl figure that represent the camera frustum object. public static List<GLFigureBase> MakeFrustum(in Vector3 cameraPos, in Vector3 cameraTarget, in Vector3 cameraUp, float near, float far, float fov, in Matrix4x4 mm) Parameters cameraPos Vector3 Camera position [world]. cameraTarget Vector3 Camera target [world]. cameraUp Vector3 Camera up [world]. near float Near plane [world]. far float Far plane [world]. fov float Field of view (rad). mm Matrix4x4 Model matrix [world]. Returns List<GLFigureBase> frustum figures MakeScreenCS(in Vector3?) Create a screen matrix using given origin. That is the same of a world matrix with y flipped like the screen coordinates are with (0,0) on (left,top). public static Matrix4x4 MakeScreenCS(in Vector3? origin = null) Parameters origin Vector3? Screen origin. Returns Matrix4x4 Screen matrix. MakeTextFigure(GLContext, GLText) Generate a triangle figure textured to represents the given GLText public static List<GLTriangleFigure> MakeTextFigure(this GLContext glContext, GLText glText) Parameters glContext GLContext Gl context ( used to access GLFontCharManager ). glText GLText Gl text. Returns List<GLTriangleFigure> Gl triangle figure. MakeTextFigure(GLModel, GLText) Generate a triangle figure textured to represents the given GLText public static List<GLTriangleFigure> MakeTextFigure(this GLModel glModel, GLText glText) Parameters glModel GLModel Gl model ( used to access GLFontCharManager ). glText GLText Gl text. Returns List<GLTriangleFigure> Gl triangle figure. MakeWCS(in Vector3?) Create world matrix using given origin and basex=(1,0,0), basey=(0,1,0), basez=(0,0,1). public static Matrix4x4 MakeWCS(in Vector3? origin = null) Parameters origin Vector3? World origin. Returns Matrix4x4 World matrix. MakeWCS(float, float, float) Create world matrix using given origin and basex=(1,0,0), basey=(0,1,0), basez=(0,0,1). public static Matrix4x4 MakeWCS(float ox, float oy, float oz) Parameters ox float World x origin. oy float World y origin. oz float World z origin. Returns Matrix4x4 World matrix. ModelRotate(float, float, in Vector3, in Matrix4x4, in Matrix4x4, out Matrix4x4) Rotate the model by given [eye] x,y angles around given [local] rotation center. public static void ModelRotate(float angleXRad, float angleYRad, in Vector3 rot_center, in Matrix4x4 mm, in Matrix4x4 vm, out Matrix4x4 mmRotated) Parameters angleXRad float Eye space x angle rotation (rad). angleYRad float Eye space y angle rotation (rad). rot_center Vector3 Local space (x,y,z) rotation center [local]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. mmRotated Matrix4x4 Rotated model matrix [local]. NDCToClip_virtual(in Vector3, float) Converts given normalized device coord to virtual clip space coord (w=1). public static Vector4 NDCToClip_virtual(in Vector3 ndc, float w = 1) Parameters ndc Vector3 (x,y,z) ndc coord w float Value of 4-th component to set in computed clip space coord ( Default: 1 ) Returns Vector4 (virtual) Clip space coord (x,y,z,w). NDCToScreen(in Vector3, in Vector2) Convert given normalized device coord to the corresponding screen coord. Depending on YAxisOrientation ( default: YPositiveDown ): YPositiveDown : ndc (-1,+1,), ..., (+1,-1,) to screen (0, 0), ..., (w-1, h-1) YPositiveUp : ndc (-1,-1,), ..., (+1,+1,) to screen (0, 0), ..., (w-1, h-1) public static Vector2 NDCToScreen(in Vector3 ndc, in Vector2 size) Parameters ndc Vector3 Normalized device coord (x,y,z). size Vector2 Screen size (x,y). Returns Vector2 Screen coord (x,y). ObjectToLocal(in Vector3, in Matrix4x4) Converts given object space coord to the corresponding local space coord. public static Vector3 ObjectToLocal(in Vector3 obj, in Matrix4x4 om) Parameters obj Vector3 Object space coord (x,y,z). om Matrix4x4 Object matrix. Returns Vector3 Local space coord (x,y,z). OrthoPan(in Vector2, in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) Pan the view ( Orthogonal mode ) by the given screen translation coord generating new camera config. public static void OrthoPan(in Vector2 from, in Vector2 to, in Vector2 size, in Matrix4x4 vm, in Matrix4x4 pm, in Vector3 cameraPos, in Vector3 cameraTarget, out Vector3 panCameraPos, out Vector3 panCameraTarget) Parameters from Vector2 Screen pan from coord (x,y) [screen]. to Vector2 Screen pan \"from\" coord (x,y) [screen]. size Vector2 Screen size (x,y) [screen]. vm Matrix4x4 View matrix [world]. pm Matrix4x4 Projection matrix [eye]. cameraPos Vector3 Camera position (x,y,z) [world]. cameraTarget Vector3 Camera target (x,y,z) [world]. panCameraPos Vector3 Pan result new camera position (x,y,z) [world]. panCameraTarget Vector3 Pan result new camera target (x,y,z) [world]. OrthoZoom(float, float, out float) Scale by given factor the given [eye] zoom ( Orthogonal mode ). public static void OrthoZoom(float scale, float orthoZoom, out float scaledOrthoZoom) Parameters scale float Zoom scale factor. orthoZoom float Eye space ortho zoom. scaledOrthoZoom float Computed eye space ortho zoom. OrthoZoomFit(IEnumerable<Vector3>, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, float, float, float, Vector3, Vector3, Vector3, out float, out Vector3, out Vector3) Fit current model view for orthographic projection public static void OrthoZoomFit(IEnumerable<Vector3> pts, in Vector2 size, in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, float orthoZoom, float near, float far, Vector3 cameraPos, Vector3 cameraTarget, Vector3 cameraUp, out float fitOrthoZoom, out Vector3 panCameraPos, out Vector3 panCameraTarget) Parameters pts IEnumerable<Vector3> model points [local] size Vector2 size [screen] mm Matrix4x4 mm [local] vm Matrix4x4 vm [world] pm Matrix4x4 pm [eye] orthoZoom float orthoZoom [eye] near float near [world] far float far [world] cameraPos Vector3 cameraPos [world] cameraTarget Vector3 cameraTarget [world] cameraUp Vector3 cameraUp [world] fitOrthoZoom float fitOrthoZoom [eye] panCameraPos Vector3 panCameraPos [world] panCameraTarget Vector3 panCameraTarget [world] ParseVector3(string, int) Depending on given pointCnt argument make an invariant parse: (pointCnt=1) p1x,p1y,p1z;... (pointCnt=2) p1x,p1y,p1z,p2x,p2y,p2z;... (pointCnt=3) p1x,p1y,p1z,p2x,p2y,p2z,p3x,p3y,p3z;... public static IEnumerable<Vector3> ParseVector3(string vstr, int pointCnt = 1) Parameters vstr string pointCnt int Returns IEnumerable<Vector3> PerspectiveCenter(IEnumerable<Vector3>, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3, out BBox) Center the view ( Perspective mode ) by computing camera [world] position and target. public static void PerspectiveCenter(IEnumerable<Vector3> pts, in Vector2 size, in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, in Vector3 cameraPos, in Vector3 cameraTarget, out Vector3 panCameraPos, out Vector3 panCameraTarget, out BBox lBBox) Parameters pts IEnumerable<Vector3> Local space point that represents entire model [local]. size Vector2 Screen size (x,y) [screen]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. pm Matrix4x4 Projection matrix [eye]. cameraPos Vector3 Camera position (x,y,z) [world]. cameraTarget Vector3 Camera target (x,y,z) [world]. panCameraPos Vector3 Computed pan camera pos [world]. panCameraTarget Vector3 Computed pan camera target [world]. lBBox BBox Computed local space bbox [local]. PerspectivePan(in Vector3, in Vector2, in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) Pan the view ( Perspective mode ) by the given screen translation coord generating new camera config. public static void PerspectivePan(in Vector3 refPt, in Vector2 from, in Vector2 to, in Vector2 size, in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, in Vector3 cameraPos, in Vector3 cameraTarget, out Vector3 panCameraPos, out Vector3 panCameraTarget) Parameters refPt Vector3 A reference point [local] inside model bbox ( generally BBox.Middle ) for relative coord calc. from Vector2 Screen pan from coord (x,y) [screen]. to Vector2 Screen pan \"from\" coord (x,y) [screen]. size Vector2 Screen pan \"to\" coord (x,y) [screen]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. pm Matrix4x4 Projection matrix [eye]. cameraPos Vector3 Camera position (x,y,z) [world]. cameraTarget Vector3 Camera target (x,y,z) [world]. panCameraPos Vector3 Pan result new camera position (x,y,z) [world]. panCameraTarget Vector3 Pan result new camera target (x,y,z) [world]. PerspectiveZoom(float, BBox, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, out Vector3, out Vector3) Zoom the view [eye] ( Perspective mode ) by the given scale factor. public static void PerspectiveZoom(float scale, BBox bbox, in Matrix4x4 mm, in Matrix4x4 vm, in Vector3 cameraPos, in Vector3 cameraTarget, out Vector3 scaledCameraPos, out Vector3 scaledCameraTarget) Parameters scale float Zoom scale factor. bbox BBox Model bbox [local]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. cameraPos Vector3 Camera position (x,y,z) [world]. cameraTarget Vector3 Camera target (x,y,z) [world]. scaledCameraPos Vector3 Computed camera position (x,y,z) [world]. scaledCameraTarget Vector3 Computed camera target (x,y,z) [world]. PerspectiveZoomFit(IEnumerable<Vector3>, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, in Vector3, in Vector3, float, out Vector3, out Vector3, int, float) Fit current model view for perspective projection public static void PerspectiveZoomFit(IEnumerable<Vector3> pts, in Vector2 size, in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, in Vector3 cameraPos, in Vector3 cameraTarget, in Vector3 cameraUp, float fovDeg, out Vector3 fitCameraPos, out Vector3 fitCameraTarget, int LOOP_CNT_MAX = 10, float FACTOR_TOL = 0.01) Parameters pts IEnumerable<Vector3> model or bbox points [local] size Vector2 size [screen] mm Matrix4x4 mm [local] vm Matrix4x4 vm [world] pm Matrix4x4 pm [eye] cameraPos Vector3 cameraPos [world] cameraTarget Vector3 cameraTarget [world] cameraUp Vector3 cameraUp [world] fovDeg float fovDeg [world] fitCameraPos Vector3 fitCameraPos [world] fitCameraTarget Vector3 fitCameraTarget [world] LOOP_CNT_MAX int nr of max loop to compute fit FACTOR_TOL float break fit loop when factor equals 1 with given factor tolerance PreventZFighting(BBox, in Matrix4x4, in Matrix4x4, in Vector3, out float, out float) Compute best fitting near and far values based on local space bbox given. public static void PreventZFighting(BBox bbox, in Matrix4x4 mm, in Matrix4x4 vm, in Vector3 cameraPos, out float near, out float far) Parameters bbox BBox Local space bbox of model for which compute best near, far [local]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. cameraPos Vector3 Camera position [world]. near float Computed absolute position along [eye] z axis of the near clipping plane. far float Computed absolute position along [eye] z axis of the far clipping plane. RayCastLocal(in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, in Matrix4x4, in Vector3, bool) Create a raycast line [local] suitable to hit test of figure primitives. public static Line RayCastLocal(in Vector2 screen, in Vector2 size, in Matrix4x4 mm, in Matrix4x4 vm, in Matrix4x4 pm, in Vector3 cp, bool perspective) Parameters screen Vector2 Screen coord (x,y) [screen]. size Vector2 Screen size (x,y) [screen]. mm Matrix4x4 Model matrix [local]. vm Matrix4x4 View matrix [world]. pm Matrix4x4 Projection matrix [eye]. cp Vector3 Camera position [world]. perspective bool Perspective mode. Returns Line Raycast line [local]. RightHandXFromYZ(in Vector3, in Vector3) Detect basex from given normalized basey and basez vectors using right-hand rule. public static Vector3 RightHandXFromYZ(in Vector3 y, in Vector3 z) Parameters y Vector3 Basey versor. z Vector3 Basez versor. Returns Vector3 Basex versor. ScreenToClip_virtual(in Vector2, in Vector2, float) Converts given screen space coord to corresponding virtual in clip space coord (z=0, w=1). public static Vector4 ScreenToClip_virtual(in Vector2 screen, in Vector2 size, float w = 1) Parameters screen Vector2 Screen coord (x,y). size Vector2 Screen size (x,y). w float Value of 4-th component to set in computed clip space coord ( Default: 1 ). Returns Vector4 (virtual) Clip space coord (x,y,z,w). ScreenToEye_virtual(in Vector2, in Vector2, in Matrix4x4, float) Converts given screen space coord to corresponding virtual in eye space coord (z=0, w=1, eye_z=-1). It makes use of the inverse of given projection matrix. public static Vector3 ScreenToEye_virtual(in Vector2 screen, in Vector2 size, in Matrix4x4 pm, float eye_z = -1) Parameters screen Vector2 Screen coord (x,y). size Vector2 Screen size (x,y). pm Matrix4x4 Projection matrix. eye_z float Value of 3-th component to set in computed eye space coord ( Default: -1 ). Returns Vector3 (virtual) Eye space coord (x,y,z). ScreenToLocal_virtual(in Vector2, in Vector2, in Matrix4x4, in Matrix4x4, float, float) Converts given screen space coord to corresponding virtual in local space coord (z=0, w=1, eye_z=-1). It makes use of the inverse of given modelview matrix and projection matrix. public static Vector3 ScreenToLocal_virtual(in Vector2 screen, in Vector2 size, in Matrix4x4 mvm, in Matrix4x4 pm, float eye_z = -1, float w = 1) Parameters screen Vector2 Screen coord (x,y). size Vector2 Screen size (x,y). mvm Matrix4x4 Modelview matrix (model * view). pm Matrix4x4 Projection matrix. eye_z float Value of 3-th component to set in computed eye space coord ( Default: -1 ). w float Value of 4-th component to set in computed clip space coord ( Default: 1 ). Returns Vector3 (virtual) Local space coord (x,y,z). ScreenToNDC_virtual(in Vector2, in Vector2) Converts given screen coord to virtual normalized device coord (z=0). Actual YAxisOrientation will considered. public static Vector3 ScreenToNDC_virtual(in Vector2 screen, in Vector2 size) Parameters screen Vector2 (x,y) screen coord size Vector2 (x,y) screen size Returns Vector3 (virtual) normalized device coord (x,y,z). Serialize(in Matrix4x4) Serialize to a string of 16 float space separated ( invariant ). public static string Serialize(in Matrix4x4 m) Parameters m Matrix4x4 Returns string SetupClosedXMLFonts() Helper to overcome ClosedXML font issue when adjust columns contents of an xlsx document. public static void SetupClosedXMLFonts() SortByAdjacency(float, IList<Line>) Sort given line list by adjacency. public static List<Line> SortByAdjacency(float tol, IList<Line> lines) Parameters tol float Comparision length tolerance. lines IList<Line> Input lines. Returns List<Line> List of lines sorted by their adjacency. SortByAdjacency(float, IList<Line>, DebugVtxMgr?) public static List<Line> SortByAdjacency(float tol, IList<Line> lines, DebugVtxMgr? debug) Parameters tol float lines IList<Line> debug DebugVtxMgr Returns List<Line> ToDxfFace3D(IGLTriangle) Retrieve dxf face from given triangle. public static Face3D ToDxfFace3D(this IGLTriangle tri) Parameters tri IGLTriangle Gl triangle. Returns Face3D Dxf face. ToFigure(IEnumerable<GLLine>) Create line figure from given line set. public static GLLineFigure ToFigure(this IEnumerable<GLLine> lines) Parameters lines IEnumerable<GLLine> Returns GLLineFigure ToFigure(IEnumerable<Line>) Create line figure from given line set. public static GLLineFigure ToFigure(this IEnumerable<Line> lines) Parameters lines IEnumerable<Line> Returns GLLineFigure ToGLLines(IEnumerable<Vector3>, bool) Enumerate given point set with gl lines. public static IEnumerable<GLLine> ToGLLines(this IEnumerable<Vector3> pts, bool closed = false) Parameters pts IEnumerable<Vector3> Points set. closed bool If true a line will added between last and first point. Returns IEnumerable<GLLine> WordlToEye(in Vector3, in Matrix4x4) Converts given world space coord to the corresponding eye space coord. public static Vector3 WordlToEye(in Vector3 world, in Matrix4x4 vm) Parameters world Vector3 World coord (x,y,z). vm Matrix4x4 View matrix. Returns Vector3 Eye space coord (x,y,z). WorldToLocal(in Vector3, in Matrix4x4) Converts given world space coord to the corresponding local space coord. Makes use of the inverse of the given model matrix. public static Vector3 WorldToLocal(in Vector3 world, in Matrix4x4 mm) Parameters world Vector3 World space coord (x,y,z). mm Matrix4x4 Model matrix. Returns Vector3 Local space coord (x,y,z)."
  },
  "api/SearchAThing.OpenGL.Core.VertexManagerInvalidatedDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Core.VertexManagerInvalidatedDelegate.html",
    "title": "Delegate VertexManagerInvalidatedDelegate | netcore-opengl",
    "keywords": "Delegate VertexManagerInvalidatedDelegate Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Delegate for the Invalidated event. public delegate void VertexManagerInvalidatedDelegate(IGLVertexManager vertexManager) Parameters vertexManager IGLVertexManager Delegate for the event."
  },
  "api/SearchAThing.OpenGL.Core.ViewNfo.html": {
    "href": "api/SearchAThing.OpenGL.Core.ViewNfo.html",
    "title": "Class ViewNfo | netcore-opengl",
    "keywords": "Class ViewNfo Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll public class ViewNfo Inheritance object ViewNfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CameraPos public Vector3 CameraPos { get; set; } Property Value Vector3 CameraTarget public Vector3 CameraTarget { get; set; } Property Value Vector3 CameraUp public Vector3 CameraUp { get; set; } Property Value Vector3 Far public float Far { get; set; } Property Value float Lights public List<GLPointLight>? Lights { get; set; } Property Value List<GLPointLight> ModelMatrix public Matrix4x4 ModelMatrix { get; set; } Property Value Matrix4x4 Near public float Near { get; set; } Property Value float OrthoZoom public float OrthoZoom { get; set; } Property Value float Perspective public bool Perspective { get; set; } Property Value bool ShadeWithEdge public bool ShadeWithEdge { get; set; } Property Value bool ShowCameraObject public bool ShowCameraObject { get; set; } Property Value bool Title public string Title { get; set; } Property Value string UseShadow public bool UseShadow { get; set; } Property Value bool VertexVisibility public bool VertexVisibility { get; set; } Property Value bool Wireframe public bool Wireframe { get; set; } Property Value bool"
  },
  "api/SearchAThing.OpenGL.Core.YAxisOrientationEnum.html": {
    "href": "api/SearchAThing.OpenGL.Core.YAxisOrientationEnum.html",
    "title": "Enum YAxisOrientationEnum | netcore-opengl",
    "keywords": "Enum YAxisOrientationEnum Namespace SearchAThing.OpenGL.Core Assembly netcore-opengl-core.dll Orientation of y axis [eye]. public enum YAxisOrientationEnum Fields YPositiveDown = 0 Screen GL standard. YPositiveUp = 1 Cad standard."
  },
  "api/SearchAThing.OpenGL.Core.html": {
    "href": "api/SearchAThing.OpenGL.Core.html",
    "title": "Namespace SearchAThing.OpenGL.Core | netcore-opengl",
    "keywords": "Namespace SearchAThing.OpenGL.Core Classes BBox Bounding box of a set of points. It can be an oriented bounding box if created with custom coordinate system, WCS elsewhere is used as default. ColorConverterPatch Constants DebugVtxMgr Debug object containing a vertex manager to allow create figures and a gl control to allow invalidate the view. Used for debug purpose. DummyRenderDevice A render device that doesn't write GL pixel anywhere. This object can be used for testing purpouse. Ext GLContext Gl context object with purpose to: create Silk.NET gl window Silk.NET.Windowing.IWindow. expose Silk.NET.OpenGL.GL interface. handle font char cache through instance of GLFontCharManager. load GLPipeline objects used by the framework. handle environment variable \"OPENGL_LIBRARY_PATH\" for mesa win library } loading. Useful for windows guest on virtualbox linux host. handle gl debug messages by using DebugMessageCallback. GLControl Provides basic opengl abstraction to create entities such as GLPoint, GLLine and GLTriangle. It provides high level functions to manage camera view and related pan/zoom functions. The Invalidate(InvalidateEnum) emit a RenderInvalidated event that SearchAThing.OpenGL.GUI.AvaloniaGLControl listen to invalidte its visual. image \\image html Render.svg width=100% GLFigureBase Base abstract class for point, line, triangle figures. GLFigureTypeBase<P> Template typed GLPrimitiveBase figure base operations such as Add and Remove primitives from the figure. GLFontChar Holds a single font character bitmap and allocated texture. GLFontCharManager Gl font char manager, allocated through gl context. It manage the cache of GLFontChar avoid there are duplicates of the same gl font char for the same font/character. GLLine Opengl line primitive. GLLineFigure Specialization of typed figure within the GLLine primitive. GLMatrixes Helper class to store model/view/projection and camera pos/target/up in a single object. GLModel Gl model. contains the associated GLVertexManager the list of model figures GLFigureBase point lights GLPointLight. custom vertex managers AddCustomVertexManager(GLVertexManager) contains the default build model action. GLPipeline Gl pipeline object. Contains vertex, geometry and fragment shaders where defined and helper method to set uniforms, attributes ans storage blocks. GLPoint GLPointFigure Specialization of typed figure within the GLPoint} primitive. GLPointLight Gl point light. GLPrimitiveBase GLShaderStorageBlock<T> Manage mapping of given template typed data to gpu memory. GLText Gl text object. GLTextCharFigure Triangles figure with texture mapped to represent a char. GLTexture2D Handle reference to gl texture. GLTriangle GLTriangleFigure Specialization of typed figure within the GLTriangle primitive. GLVertex GLVertexArrayObject<PacketStructure> Helper to define and enable Vertex Array Object in order to declare how to access vertex buffer object at i-th packet structure components. GLVertexBufferObject<T> Manage mapping of given template typed data to gpu memory. GLVertexManager Line Geometric entity 3d line. Internally encoded as From and V vectors, where To = From + V. Can be created through static methods FromTo(in Vector3, in Vector3) and PointV(in Vector3, in Vector3). MouseStart Helper class to save GLControl gl matrixes and a screen start point mainly used for pan and rotate at the beginning of operation. OffscreenRenderDevice Render device for offscreen mode that acts as a bitmap file writer. Plate Plate geometry composed by four vertexes, used primarly to be converted in triangles with GetTriangles(Plate, in Color?, bool). PointTransformNfo Helper class used by SearchAThing.OpenGL.GUI.GLDevTool. Given the vertex, size, gl matrixes it will update object, normal, local, world, eye, clip, screen transformed coordinates. RayCastHitTest Hold raycast hit test info. Intersect(Line, float, GLFigureBase) Toolkit ViewNfo Structs GLMatrix4x4Struct Structure that contains a matrix4x4. It will be used by the RenderVertexManager(Func<GLFigureBase, bool>, GLPipeline, GLVertexManager, GLPointLightStruct[], GLMatrix4x4Struct[]) and loaded into gpu pipeline through GLShaderStorageBlock<T>. GLPointLightStruct Structure that contains gl point light info. It will be used by the RenderVertexManager(Func<GLFigureBase, bool>, GLPipeline, GLVertexManager, GLPointLightStruct[], GLMatrix4x4Struct[]) and loaded into the gpu pipeline through GLShaderStorageBlock<T> GLVertexStruct Structure used by the vertex manager when register a vertex inside it. This structure has an explicit layout for unmanaged access by the gpu and its used in GLControl during the phase of rendering. MaterialProperties Describe the strength (0..1) of the ambient, diffuse, specular light effects. Interfaces IGLContextObject General inteface for objects that carrier a reference to Gl context. IGLFigure This is the direct child of a vertex manager. A figure contains primitives and primitive contains vertexes. The figure is useful to group together primitives and handle properties such as Visibile, Order, ObjectMatrix, ScreenCoord mode. IGLLine Primitive for the GL_LINES opengl element. IGLLineFigure Specialization of IGLFigure for the type GLLine. IGLPoint Primitive for GL_POINTS opengl element. IGLPointFigure Specialization of IGLFigure for the type GLPoint. IGLPrimitive A primitive such a GLPoint, GLLine or GLTriangle can be added to a figure through its add method. A primitive can consists of 1, 2 or 3 GLVertex that will be registered into GLVertexManager when the primitive added to the figure and figure to the model through AddFigure(IEnumerable<GLFigureBase>). IGLTexture2D Interface that describe the object hold a reference to a gl texture 2d. IGLTriangle Primitive for GL_TRIANGLES opengl element. IGLTriangleFigure Specialization of IGLFigure for the type GLTriangle. IGLVertex Represent a vertex and its the base object managed by the GLVertexManager. Primitives such as GLPoint, GLLine and GLTriangle store their vertex information using this type. When the gl render happens ( see Render(IRenderDevice?) ) all the model vertexes are mapped to the gpu ram and figures with their vertex indexes are feed into. Internally the GLVertexManager hold a struct projection of this object, the GLVertexStruct. IGLVertexManager Vertex manager primary purpose is to keep a linear sequence of distinct GLVertexStruct structs that will populated by the gl vertex GLVertex objects. The same GLVertex reference cannot be registered twice in vertex manager, these stay connected to their figure primitives until removed from. IGLVertexManagerObject Interface for GL objects such as IGLFigure, IGLPrimitive and IGLVertex. The purpose is to ensure that each object implementing this interface allow parent traversal till root vertex manager object which purpouse is to manage the collection of vertexes. IRenderDevice A render device will read pixels from given gl context through ReadPixels and write to an appropriate device implementation ( avalonia, offscreen, dummy devices available ). Enums CameraViewType CursorMode GLNotificationType Type of notification emitted by gl control. GLPrimitiveType Enum that specify which type of primitive belong to a figure. GLTextVHAlignment Gl text alignment respect given insertion point. GLVertexFlag 32bit vertex flags InvalidateEnum Type of GLControl invalidation. YAxisOrientationEnum Orientation of y axis [eye]. Delegates ComputeTriangleNormalDelegate Compute normal function delegate. ControlFigureVisibileDelegate Delegate for ControlFigureVisible. It allow to customize the visilibty of a figure in relation within a Gl control. FigureEvent Generic figure event from the vertex manager. FigureInvalidatedDelegate Delegate for FigureInvalidated. This event is managed internally by the GLModel and signal that a model figure changed some of its vertex propertties. FiguresEvent Generic figures event from the vertex manager. GLBuildModelDelegate Build model action that will executed each time the model requires a full rebuild because invalidated. ModelViewInvalidated Use for ViewInvalidated event emitted when a vertex of the model change. NotificationDelegate Used by the avalonia GL control to listen for notification coming from the model. These notification will displayed using gui notification manager. RenderPreviewDelegate Used by NotEmptyRenderPreview when notify the first non empty bbox render. VertexManagerInvalidatedDelegate Delegate for the Invalidated event."
  },
  "api/SearchAThing.OpenGL.GUI.AColorConverter.html": {
    "href": "api/SearchAThing.OpenGL.GUI.AColorConverter.html",
    "title": "Class AColorConverter | netcore-opengl",
    "keywords": "Class AColorConverter Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Converter Color to Avalonia.Media.Color public class AColorConverter : IValueConverter Inheritance object AColorConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AColorConverter() public AColorConverter() Properties Instance public static AColorConverter Instance { get; } Property Value AColorConverter Methods Convert(object?, Type, object?, CultureInfo) Converts a value. public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception. ConvertBack(object?, Type, object?, CultureInfo) Converts a value. public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception."
  },
  "api/SearchAThing.OpenGL.GUI.AvaloniaControlEvent.html": {
    "href": "api/SearchAThing.OpenGL.GUI.AvaloniaControlEvent.html",
    "title": "Delegate AvaloniaControlEvent | netcore-opengl",
    "keywords": "Delegate AvaloniaControlEvent Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Generic delegate used by AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) for control create/remove events. public delegate void AvaloniaControlEvent(AvaloniaGLControl ctl) Parameters ctl AvaloniaGLControl Gl control reference."
  },
  "api/SearchAThing.OpenGL.GUI.AvaloniaControlInitialEvent.html": {
    "href": "api/SearchAThing.OpenGL.GUI.AvaloniaControlInitialEvent.html",
    "title": "Delegate AvaloniaControlInitialEvent | netcore-opengl",
    "keywords": "Delegate AvaloniaControlInitialEvent Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Used by AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) to notify focused control change. public delegate void AvaloniaControlInitialEvent(AvaloniaGLControlSplit split, AvaloniaGLControl ctl, bool isInitial) Parameters split AvaloniaGLControlSplit GL split belonging the focused control. ctl AvaloniaGLControl Gl focused control isInitial bool True if this is the firstest control that the gl split has focused."
  },
  "api/SearchAThing.OpenGL.GUI.AvaloniaGLControl.html": {
    "href": "api/SearchAThing.OpenGL.GUI.AvaloniaGLControl.html",
    "title": "Class AvaloniaGLControl | netcore-opengl",
    "keywords": "Class AvaloniaGLControl Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Avalonia gl control. It's a graphical ui IRenderDevice used to transfer GLControl pixels to the window bitmap through the override of the avalonia Render(DrawingContext) method that will be called by the avalonia framework every time the visual invalidates. When control size changed Invalidate(InvalidateEnum) will be invoked and GLSizeChanged event emitted. public class AvaloniaGLControl : Control, IDataContextProvider, ILogical, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, IInputElement, IDataTemplateHost, INamed, ISetterValue, IRenderDevice, INotifyPropertyChanged Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control AvaloniaGLControl Implements IDataContextProvider ILogical IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable IInputElement IDataTemplateHost INamed ISetterValue IRenderDevice INotifyPropertyChanged Inherited Members Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.GetTemplateFocusTarget() Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnCreateAutomationPeer() Control.OnKeyUp(KeyEventArgs) Control.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.ApplyTemplate() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.MeasureOverride(Size) Layoutable.ArrangeCore(Rect) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) StyledElement.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.StyleKeyOverride StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AvaloniaGLControl() Create an avalonia render device gl control. public AvaloniaGLControl() Fields CameraRotateDownGesture Key gesture associated to CameraRotateDown(). public KeyGesture? CameraRotateDownGesture Field Value KeyGesture CameraRotateLeftGesture Key gesture associated to CameraRotateLeft(). public KeyGesture? CameraRotateLeftGesture Field Value KeyGesture CameraRotateRightGesture Key gesture associated to CameraRotateRight(). public KeyGesture? CameraRotateRightGesture Field Value KeyGesture CameraRotateUpGesture Key gesture associated to CameraRotateUp(). public KeyGesture? CameraRotateUpGesture Field Value KeyGesture CameraTiltLeftGesture Key gesture associated to TiltLeft(). public KeyGesture? CameraTiltLeftGesture Field Value KeyGesture CameraTiltRightGesture Key gesture associated to TiltRight(). public KeyGesture? CameraTiltRightGesture Field Value KeyGesture CameraZoomInGesture Key gesture associated to CameraZoomIn(float, bool). public KeyGesture? CameraZoomInGesture Field Value KeyGesture CameraZoomOutGesture Key gesture associated to CameraZoomOut(float, bool). public KeyGesture? CameraZoomOutGesture Field Value KeyGesture ClearSelectionGesture Key gesture associated to ClearSelection(bool). public KeyGesture? ClearSelectionGesture Field Value KeyGesture CopySimpleCmdOfSelectionGesture Key gesture associated to GetSelectionSimpleCmd(). public KeyGesture? CopySimpleCmdOfSelectionGesture Field Value KeyGesture DeleteSelectedGesture Key gesture associated to DeleteSelected(). public KeyGesture? DeleteSelectedGesture Field Value KeyGesture InvalidateGesture Key gesture associated to Invalidate(InvalidateEnum). public KeyGesture? InvalidateGesture Field Value KeyGesture ModelRotateDownGesture Key gesture associated to ModelRotateDown(). public KeyGesture? ModelRotateDownGesture Field Value KeyGesture ModelRotateLeftGesture Key gesture associated to ModelRotateLeft(). public KeyGesture? ModelRotateLeftGesture Field Value KeyGesture ModelRotateRightGesture Key gesture associated to ModelRotateRight(). public KeyGesture? ModelRotateRightGesture Field Value KeyGesture ModelRotateUpGesture Key gesture associated to ModelRotateUp(). public KeyGesture? ModelRotateUpGesture Field Value KeyGesture PanDownGesture Key gesture associated to PanDown(). public KeyGesture? PanDownGesture Field Value KeyGesture PanLeftGesture Key gesture associated to PanLeft(). public KeyGesture? PanLeftGesture Field Value KeyGesture PanRightGesture Key gesture associated to PanRight(). public KeyGesture? PanRightGesture Field Value KeyGesture PanUpGesture Key gesture associated to PanUp(). public KeyGesture? PanUpGesture Field Value KeyGesture PasteSimpleCmdGesture Key gesture associated to PasteSimpleCmd(string). public KeyGesture? PasteSimpleCmdGesture Field Value KeyGesture RestoreViewGesture Key gesture associated to LoadView(string?). public KeyGesture? RestoreViewGesture Field Value KeyGesture RestoreViewLayoutGesture Key gesture associated to LoadViewLayout(string?). public KeyGesture? RestoreViewLayoutGesture Field Value KeyGesture SaveViewGesture Key gesture associated to SaveView(string?). public KeyGesture? SaveViewGesture Field Value KeyGesture SaveViewLayoutGesture Key gesture associated to SaveViewLayout(string?). public KeyGesture? SaveViewLayoutGesture Field Value KeyGesture SetRotationCenterGesture Key gesture associated to SetRotationCenter(bool). public KeyGesture? SetRotationCenterGesture Field Value KeyGesture ShowDevToolGesture Key gesture associated to ShowDevTool(). public KeyGesture? ShowDevToolGesture Field Value KeyGesture SplitViewCloseGesture Key gesture associated to SplitClose(). public KeyGesture? SplitViewCloseGesture Field Value KeyGesture SplitViewHorizontalGesture Key gesture associated to SplitHorizontal(). public KeyGesture? SplitViewHorizontalGesture Field Value KeyGesture SplitViewVerticalGesture Key gesture associated to SplitVertical(). public KeyGesture? SplitViewVerticalGesture Field Value KeyGesture SwitchSelectionModeGesture Key gesture associated to SwitchSelectionMode(bool). public KeyGesture? SwitchSelectionModeGesture Field Value KeyGesture ToggleCameraObjectGesture Key gesture associated to ShowCameraObject. public KeyGesture? ToggleCameraObjectGesture Field Value KeyGesture ToggleIdentifyCoordGesture Key gesture associated to ToggleIdentifyCoord(). public KeyGesture? ToggleIdentifyCoordGesture Field Value KeyGesture ToggleModelBBoxGesture Key gesture associated to ShowModelBBox. public KeyGesture? ToggleModelBBoxGesture Field Value KeyGesture TogglePerspectiveGesture Key gesture associated to TogglePerspective(bool). public KeyGesture? TogglePerspectiveGesture Field Value KeyGesture ToggleShadeWithEdgeGesture Key gesture associated to ToggleShadeWithEdge(bool). public KeyGesture? ToggleShadeWithEdgeGesture Field Value KeyGesture ToggleShowNormals Key gesture associated to ToggleShowNormals(bool). public KeyGesture? ToggleShowNormals Field Value KeyGesture ToggleUseShadowGesture Key gesture associated to ToggleUseShadow(bool). public KeyGesture? ToggleUseShadowGesture Field Value KeyGesture ToggleUseTextureGesture Key gesture associated to ToggleUseTexture(bool). public KeyGesture? ToggleUseTextureGesture Field Value KeyGesture ToggleVertexVisibilityGesture Key gesture associated to ToggleVertexVisibility(bool). public KeyGesture? ToggleVertexVisibilityGesture Field Value KeyGesture ToggleWireframeGesture Key gesture associated to ToggleWireframe(bool). public KeyGesture? ToggleWireframeGesture Field Value KeyGesture ViewBackGesture Key gesture associated to CameraView(CameraViewType, bool, bool) with Back. public KeyGesture? ViewBackGesture Field Value KeyGesture ViewBottomGesture Key gesture associated to CameraView(CameraViewType, bool, bool) with Bottom. public KeyGesture? ViewBottomGesture Field Value KeyGesture ViewFrontGesture Key gesture associated to CameraView(CameraViewType, bool, bool) with Front. public KeyGesture? ViewFrontGesture Field Value KeyGesture ViewLeftGesture Key gesture associated to CameraView(CameraViewType, bool, bool) with Left. public KeyGesture? ViewLeftGesture Field Value KeyGesture ViewRightGesture Key gesture associated to CameraView(CameraViewType, bool, bool) with Right. public KeyGesture? ViewRightGesture Field Value KeyGesture ViewTopGesture Key gesture associated to CameraView(CameraViewType, bool, bool) with Top. public KeyGesture? ViewTopGesture Field Value KeyGesture ZoomFitGesture Key gesture associated to ZoomFit(bool). public KeyGesture? ZoomFitGesture Field Value KeyGesture Properties GLContext public GLContext GLContext { get; } Property Value GLContext GLControl Gl control allow operations on the gl model. public GLControl GLControl { get; set; } Property Value GLControl GLWindow Retrieve gl window associated to this avalonia gl control. public GLWindow? GLWindow { get; } Property Value GLWindow GridSplitterManager Retrieve attached gl split manager. public AvaloniaGLControlSplit GridSplitterManager { get; } Property Value AvaloniaGLControlSplit Size Retrieve actual size of the device screen (pixels). public Size Size { get; } Property Value Size TransferGLPixelsCount Stats counter of TransferGLPixels(GL) calls. public int TransferGLPixelsCount { get; } Property Value int Methods ClearKeyGestures() Deassociate all key gestures. public void ClearKeyGestures() GetViewNfo(bool) Retrieve an object that can be serialized to save current GLControl view config. public ViewNfo GetViewNfo(bool includeLights = true) Parameters includeLights bool If true (default) lights will saved within view nfo. Returns ViewNfo HandleKeyDown(KeyEventArgs) public void HandleKeyDown(KeyEventArgs e) Parameters e KeyEventArgs LoadViewLayout(string?) Load all GLControl view config from the given pathfilename. public void LoadViewLayout(string? pathfilename = null) Parameters pathfilename string (Optional) pathfilename which store view config. If null LayoutDefaultPathfilename will be used. OnPointerMoved(PointerEventArgs) Called before the Avalonia.Input.InputElement.PointerMoved event occurs. protected override void OnPointerMoved(PointerEventArgs e) Parameters e PointerEventArgs The event args. OnPointerPressed(PointerPressedEventArgs) Called before the Avalonia.Input.InputElement.PointerPressed event occurs. protected override void OnPointerPressed(PointerPressedEventArgs e) Parameters e PointerPressedEventArgs The event args. OnPointerReleased(PointerReleasedEventArgs) Called before the Avalonia.Input.InputElement.PointerReleased event occurs. protected override void OnPointerReleased(PointerReleasedEventArgs e) Parameters e PointerReleasedEventArgs The event args. OnPointerWheelChanged(PointerWheelEventArgs) Called before the Avalonia.Input.InputElement.PointerWheelChanged event occurs. protected override void OnPointerWheelChanged(PointerWheelEventArgs e) Parameters e PointerWheelEventArgs The event args. OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Post(Action) Used by GLControl to emit PropertyChanged event. This is needed in most frameworks that allow ui interactions only from the ui thread itself. Its necessary expecially if want to access ui data from a separate Task running in parallel. public void Post(Action action) Parameters action Action Action to be executed in ui thread. Render(DrawingContext) Renders the visual to a Avalonia.Media.DrawingContext. public override void Render(DrawingContext context) Parameters context DrawingContext The drawing context. SaveViewLayout(string?) Save all GLControl view config to the given pathfilename. public void SaveViewLayout(string? pathfilename = null) Parameters pathfilename string (Optional) pathfilename which store view config. If null LayoutDefaultPathfilename will be used. SetDefaultKeyGestures() Set all default key gestures. public void SetDefaultKeyGestures() SetViewNfo(ViewNfo, bool) Restore GLControl view settings from given nfo object. public void SetViewNfo(ViewNfo nfo, bool includeLights = true) Parameters nfo ViewNfo includeLights bool If true (default) lights set to the model. ShowDevTool() Activates the GLDevTool developer tool. public void ShowDevTool() Split(GridSplitDirection) Split current view in given direction. public void Split(GridSplitDirection direction) Parameters direction GridSplitDirection Split direction. SplitClose() Close current view ( if not is the last one ). public void SplitClose() SplitHorizontal() Split current view horizontally. public void SplitHorizontal() SplitVertical() Split current view vertically. public void SplitVertical() TransferGLPixels(GL) Use given GL object to issue a ReadPixel and transfer them to destination device. Following some details how this function is involved in the rendering process: image \\image html ReactiveUI.svg width=100% Here an example implementation given from the TransferGLPixels(GL): \\snippet{'trimleft'} src/render/OffscreenRenderDevice.cs OffscreenTrasferGLPixels public void TransferGLPixels(GL GL) Parameters GL GL Events GLSizeChanged Event emitted when size change detected. public event EventHandler? GLSizeChanged Event Type EventHandler PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.GUI.AvaloniaGLControlSplit.html": {
    "href": "api/SearchAThing.OpenGL.GUI.AvaloniaGLControlSplit.html",
    "title": "Class AvaloniaGLControlSplit | netcore-opengl",
    "keywords": "Class AvaloniaGLControlSplit Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Gl split control attached to GLWindow for stand-alone application or Avalonia.Controls.Window on mvvm applications. It creates GLView at start then allow to create more when split activated through associated key gestures. public class AvaloniaGLControlSplit : GridSplitterManager<GLView>, INotifyPropertyChanged, IDataContextProvider, ILogical, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, IInputElement, IDataTemplateHost, INamed, ISetterValue, IChildIndexProvider Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control Panel Grid GridSplitterManager<GLView> AvaloniaGLControlSplit Implements INotifyPropertyChanged IDataContextProvider ILogical IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable IInputElement IDataTemplateHost INamed ISetterValue IChildIndexProvider Inherited Members GridSplitterManager<GLView>.PropertyChanged GridSplitterManager<GLView>.OnPropertyChanged(string) GridSplitterManager<GLView>.FocusedControl GridSplitterManager<GLView>.Children GridSplitterManager<GLView>.FocusedControlBorderThickness GridSplitterManager<GLView>.FocusedControlBorderBrush GridSplitterManager<GLView>.CreateControl GridSplitterManager<GLView>.SplitterThickness GridSplitterManager<GLView>.SplitterBrush GridSplitterManager<GLView>.DistributeSplitSize GridSplitterManager<GLView>.DebugWriter GridSplitterManager<GLView>.ControlCreated GridSplitterManager<GLView>.ControlRemoved GridSplitterManager<GLView>.Clear() GridSplitterManager<GLView>.JsonSettings GridSplitterManager<GLView>.ScanGrid(GridSplitterManager<GLView>.ConfigControlDelegate, Action<(GridSplitterManagerLayoutItem item, Control control)>) GridSplitterManager<GLView>.SaveStructure(GridSplitterManager<GLView>.ConfigControlDelegate) GridSplitterManager<GLView>.LoadStructure(GridSplitterManagerLayoutItem, GridSplitterManager<GLView>.ConfigControlDelegate) GridSplitterManager<GLView>.Split(GridSplitDirection, params double[]) GridSplitterManager<GLView>.Split(GridSplitDirection) GridSplitterManager<GLView>.Remove() Grid.ShowGridLinesProperty Grid.ColumnProperty Grid.RowProperty Grid.ColumnSpanProperty Grid.RowSpanProperty Grid.IsSharedSizeScopeProperty Grid.SetColumn(Control, int) Grid.GetColumn(Control) Grid.SetRow(Control, int) Grid.GetRow(Control) Grid.SetColumnSpan(Control, int) Grid.GetColumnSpan(Control) Grid.SetRowSpan(Control, int) Grid.GetRowSpan(Control) Grid.SetIsSharedSizeScope(Control, bool) Grid.GetIsSharedSizeScope(Control) Grid.MeasureOverride(Size) Grid.ArrangeOverride(Size) Grid.ChildrenChanged(object, NotifyCollectionChangedEventArgs) Grid.ShowGridLines Grid.ColumnDefinitions Grid.RowDefinitions Panel.BackgroundProperty Panel.Render(DrawingContext) Panel.AffectsParentArrange<TPanel>(params AvaloniaProperty[]) Panel.AffectsParentMeasure<TPanel>(params AvaloniaProperty[]) Panel.Background Panel.IsItemsHost Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.GetTemplateFocusTarget() Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnCreateAutomationPeer() Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.ApplyTemplate() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.ArrangeCore(Rect) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) StyledElement.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.StyleKeyOverride StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AvaloniaGLControlSplit(GLModel) public AvaloniaGLControlSplit(GLModel glModel) Parameters glModel GLModel Methods Invalidate(InvalidateEnum) Invalidates all gl controls children of this gl split. public void Invalidate(InvalidateEnum invalidate = InvalidateEnum.RedrawOnly) Parameters invalidate InvalidateEnum Type of invalidation (Default: RedrawOnly). LoadViewLayout(string?) Load all GLControl view config from the given pathfilename. public void LoadViewLayout(string? pathfilename = null) Parameters pathfilename string (Optional) pathfilename which store view config. If null LayoutDefaultPathfilename will be used. SaveViewLayout(string?) Save all GLControl view config to the given pathfilename. public void SaveViewLayout(string? pathfilename = null) Parameters pathfilename string (Optional) pathfilename which store view config. If null LayoutDefaultPathfilename will be used."
  },
  "api/SearchAThing.OpenGL.GUI.ColorHexStringConverter.html": {
    "href": "api/SearchAThing.OpenGL.GUI.ColorHexStringConverter.html",
    "title": "Class ColorHexStringConverter | netcore-opengl",
    "keywords": "Class ColorHexStringConverter Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Converter Color to hex string public class ColorHexStringConverter : IValueConverter Inheritance object ColorHexStringConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColorHexStringConverter() public ColorHexStringConverter() Properties Instance public static ColorHexStringConverter Instance { get; } Property Value ColorHexStringConverter Methods Convert(object?, Type, object?, CultureInfo) Converts a value. public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception. ConvertBack(object?, Type, object?, CultureInfo) Converts a value. public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception."
  },
  "api/SearchAThing.OpenGL.GUI.Constants.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Constants.html",
    "title": "Class Constants | netcore-opengl",
    "keywords": "Class Constants Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll public static class Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DEFAULT_CameraPanDownGesture (Default) Camera pan down key gesture. public static readonly KeyGesture DEFAULT_CameraPanDownGesture Field Value KeyGesture DEFAULT_CameraPanLeftGesture (Default) Camera pan left key gesture. public static readonly KeyGesture DEFAULT_CameraPanLeftGesture Field Value KeyGesture DEFAULT_CameraPanRightGesture (Default) Camera pan right key gesture. public static readonly KeyGesture DEFAULT_CameraPanRightGesture Field Value KeyGesture DEFAULT_CameraPanUpGesture (Default) Camera pan up key gesture. public static readonly KeyGesture DEFAULT_CameraPanUpGesture Field Value KeyGesture DEFAULT_CameraRotateDownGesture (Default) Camera rotate down key gesture. public static readonly KeyGesture DEFAULT_CameraRotateDownGesture Field Value KeyGesture DEFAULT_CameraRotateLeftGesture (Default) Camera rotate left key gesture. public static readonly KeyGesture DEFAULT_CameraRotateLeftGesture Field Value KeyGesture DEFAULT_CameraRotateRightGesture (Default) Camera rotate right key gesture. public static readonly KeyGesture DEFAULT_CameraRotateRightGesture Field Value KeyGesture DEFAULT_CameraRotateUpGesture (Default) Camera rotate up key gesture. public static readonly KeyGesture DEFAULT_CameraRotateUpGesture Field Value KeyGesture DEFAULT_CameraTiltLeftGesture (Default) Camera tilt left key gesture. public static readonly KeyGesture DEFAULT_CameraTiltLeftGesture Field Value KeyGesture DEFAULT_CameraTiltRightGesture (Default) Camera tilt right key gesture. public static readonly KeyGesture DEFAULT_CameraTiltRightGesture Field Value KeyGesture DEFAULT_CameraZoomInGesture (Default) Camera zoom in key gesture. public static readonly KeyGesture DEFAULT_CameraZoomInGesture Field Value KeyGesture DEFAULT_CameraZoomOutGesture (Default) Camera zoom out key gesture. public static readonly KeyGesture DEFAULT_CameraZoomOutGesture Field Value KeyGesture DEFAULT_ClearSelectionGesture (Default) Set clear selection key gesture. public static readonly KeyGesture DEFAULT_ClearSelectionGesture Field Value KeyGesture DEFAULT_CopySimpleCmdOfSelectionGesture (Default) Copy SimpleCmd of selection key gesture. public static readonly KeyGesture DEFAULT_CopySimpleCmdOfSelectionGesture Field Value KeyGesture DEFAULT_DeleteSelectedGesture (Default) Delete selected primitives/figures key gesture. public static readonly KeyGesture DEFAULT_DeleteSelectedGesture Field Value KeyGesture DEFAULT_DevTool (Default) Open dev tool key gesture. public static readonly KeyGesture DEFAULT_DevTool Field Value KeyGesture DEFAULT_InvalidateGesture (Default) Invalidate view key gesture. public static readonly KeyGesture DEFAULT_InvalidateGesture Field Value KeyGesture DEFAULT_ModelRotateDownGesture (Default) Model rotate down key gesture. public static readonly KeyGesture DEFAULT_ModelRotateDownGesture Field Value KeyGesture DEFAULT_ModelRotateLeftGesture (Default) Model rotate left key gesture. public static readonly KeyGesture DEFAULT_ModelRotateLeftGesture Field Value KeyGesture DEFAULT_ModelRotateRightGesture (Default) Model rotate right key gesture. public static readonly KeyGesture DEFAULT_ModelRotateRightGesture Field Value KeyGesture DEFAULT_ModelRotateUpGesture (Default) Model rotate up key gesture. public static readonly KeyGesture DEFAULT_ModelRotateUpGesture Field Value KeyGesture DEFAULT_PasteSimpleCmdGesture (Default) Paste SimpleCmd key gesture. public static readonly KeyGesture DEFAULT_PasteSimpleCmdGesture Field Value KeyGesture DEFAULT_RestoreView (Default) Restore control view key gesture. public static readonly KeyGesture DEFAULT_RestoreView Field Value KeyGesture DEFAULT_RestoreViewLayout (Default) Restore gl split layout view key gesture. public static readonly KeyGesture DEFAULT_RestoreViewLayout Field Value KeyGesture DEFAULT_SaveView (Default) Save control view key gesture. public static readonly KeyGesture DEFAULT_SaveView Field Value KeyGesture DEFAULT_SaveViewLayout (Default) Save gl split layout view key gesture. public static readonly KeyGesture DEFAULT_SaveViewLayout Field Value KeyGesture DEFAULT_SetRotationCenterGesture (Default) Set rotation center key gesture. public static readonly KeyGesture DEFAULT_SetRotationCenterGesture Field Value KeyGesture DEFAULT_SplitViewClose (Default) Split view closed current view key gesture. public static readonly KeyGesture DEFAULT_SplitViewClose Field Value KeyGesture DEFAULT_SplitViewHorizontal (Default) Split current view horizontally key gesture. public static readonly KeyGesture DEFAULT_SplitViewHorizontal Field Value KeyGesture DEFAULT_SplitViewVertical (Default) Split current view vertically key gesture. public static readonly KeyGesture DEFAULT_SplitViewVertical Field Value KeyGesture DEFAULT_SwitchSelectionModeGesture (Default) Switch selection mode key gesture. public static readonly KeyGesture DEFAULT_SwitchSelectionModeGesture Field Value KeyGesture DEFAULT_ToggleCameraObject (Default) Toggle camera object key gesture. public static readonly KeyGesture DEFAULT_ToggleCameraObject Field Value KeyGesture DEFAULT_ToggleIdentifyCoordGesture (Default) Toggle identify coord key gesture. public static readonly KeyGesture DEFAULT_ToggleIdentifyCoordGesture Field Value KeyGesture DEFAULT_ToggleModelBBox (Default) Toggle model bbox key gesture. public static readonly KeyGesture DEFAULT_ToggleModelBBox Field Value KeyGesture DEFAULT_TogglePerspectiveGesture (Default) Toggle perspective key gesture. public static readonly KeyGesture DEFAULT_TogglePerspectiveGesture Field Value KeyGesture DEFAULT_ToggleShadeWithEdgeGesture (Default) Toggle shade width edge key gesture. public static readonly KeyGesture DEFAULT_ToggleShadeWithEdgeGesture Field Value KeyGesture DEFAULT_ToggleShowNormalsGesture (Default) Toggle show normals key gesture. public static readonly KeyGesture DEFAULT_ToggleShowNormalsGesture Field Value KeyGesture DEFAULT_ToggleUseShadowGesture (Default) Toggle use shadow key gesture. public static readonly KeyGesture DEFAULT_ToggleUseShadowGesture Field Value KeyGesture DEFAULT_ToggleUseTextureGesture (Default) Toggle use texture key gesture. public static readonly KeyGesture DEFAULT_ToggleUseTextureGesture Field Value KeyGesture DEFAULT_ToggleVertexVisibilityGesture (Default) Toggle vertex visibility key gesture. public static readonly KeyGesture DEFAULT_ToggleVertexVisibilityGesture Field Value KeyGesture DEFAULT_ToggleWireframeGesture (Default) Toggle wireframe key gesture. public static readonly KeyGesture DEFAULT_ToggleWireframeGesture Field Value KeyGesture DEFAULT_View (Default) Gl control camera view. public const CameraViewType DEFAULT_View = Top Field Value CameraViewType DEFAULT_ViewBackGesture (Default) View back key gesture. public static readonly KeyGesture DEFAULT_ViewBackGesture Field Value KeyGesture DEFAULT_ViewBottomGesture (Default) View bottom key gesture. public static readonly KeyGesture DEFAULT_ViewBottomGesture Field Value KeyGesture DEFAULT_ViewFrontGesture (Default) View front key gesture. public static readonly KeyGesture DEFAULT_ViewFrontGesture Field Value KeyGesture DEFAULT_ViewLeftGesture (Default) View left key gesture. public static readonly KeyGesture DEFAULT_ViewLeftGesture Field Value KeyGesture DEFAULT_ViewRightGesture (Default) View right key gesture. public static readonly KeyGesture DEFAULT_ViewRightGesture Field Value KeyGesture DEFAULT_ViewTopGesture (Default) View top gesture. public static readonly KeyGesture DEFAULT_ViewTopGesture Field Value KeyGesture DEFAULT_ZoomFitGesture (Default) Zoom fit key gesture. public static readonly KeyGesture DEFAULT_ZoomFitGesture Field Value KeyGesture DEVTOOL_HEIGHT (Default) Gl dev tool window height (screen pixel). public const double DEVTOOL_HEIGHT = 500 Field Value double DEVTOOL_WIDTH (Default) Gl dev tool window width (screen pixel). public const double DEVTOOL_WIDTH = 1200 Field Value double GRID_SPLITTER_MANAGER_FocusedControlBorderBrush (Default) gl split focused control border brush. public static readonly ISolidColorBrush GRID_SPLITTER_MANAGER_FocusedControlBorderBrush Field Value ISolidColorBrush GRID_SPLITTER_MANAGER_FocusedControlBorderThickness (Default) gl split focused control border thickness ( screen pixels ). public const double GRID_SPLITTER_MANAGER_FocusedControlBorderThickness = 2 Field Value double GRID_SPLITTER_MANAGER_SplitterBrush (Default) gl split grid splitter brush. public static readonly ISolidColorBrush GRID_SPLITTER_MANAGER_SplitterBrush Field Value ISolidColorBrush GRID_SPLITTER_MANAGER_SplitterColor (Default) gl split grid splitter color. public static readonly Color GRID_SPLITTER_MANAGER_SplitterColor Field Value Color NETCORE_OPENGL_GUI_ASSEMBLY_NAME SearchAThing.OpenGL.Gui assembly name (regex). public const string NETCORE_OPENGL_GUI_ASSEMBLY_NAME = \"netcore-opengl-gui\" Field Value string NOTIFICATION_TITLE_INPUT_OUTPUT (Default) Notification title for I/O events. public const string NOTIFICATION_TITLE_INPUT_OUTPUT = \"Input/Output\" Field Value string Properties LayoutDefaultPathfilename (Default) Gl split layout pathfilename: AppDomainBaseDir/layout.json public static string LayoutDefaultPathfilename { get; } Property Value string Methods GuiAssetResourceName(string) Retrieve resource name of gui asset. public static string GuiAssetResourceName(string filename) Parameters filename string File name of the asset resource. Returns string"
  },
  "api/SearchAThing.OpenGL.GUI.Ext.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Ext.html",
    "title": "Class Ext | netcore-opengl",
    "keywords": "Class Ext Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll public static class Ext Inheritance object Ext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToAvaloniaColor(in Color) Convert given drawing color to avalonia color. public static Color ToAvaloniaColor(this in Color color) Parameters color Color Returns Color ToAvaloniaNotificationType(GLNotificationType) Convert given gl notification type to corresponding avalonia notification type. public static NotificationType ToAvaloniaNotificationType(this GLNotificationType type) Parameters type GLNotificationType Returns NotificationType ToRenderSize(in Size) Convert avalonia Size object to drawing Size. public static Size ToRenderSize(this in Size size) Parameters size Size Returns Size ToVector2(in Point) Convert given avalonia point to vector2. public static Vector2 ToVector2(this in Point pt) Parameters pt Point Returns Vector2"
  },
  "api/SearchAThing.OpenGL.GUI.GLControlCreatedDelegate.html": {
    "href": "api/SearchAThing.OpenGL.GUI.GLControlCreatedDelegate.html",
    "title": "Delegate GLControlCreatedDelegate | netcore-opengl",
    "keywords": "Delegate GLControlCreatedDelegate Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Delegate used by the GLWindow to customize action following the creation of the gl control into the window. public delegate void GLControlCreatedDelegate(AvaloniaGLControl avaloniaGLControl) Parameters avaloniaGLControl AvaloniaGLControl Avalonia gl control reference."
  },
  "api/SearchAThing.OpenGL.GUI.GLControlFocusedDelegate.html": {
    "href": "api/SearchAThing.OpenGL.GUI.GLControlFocusedDelegate.html",
    "title": "Delegate GLControlFocusedDelegate | netcore-opengl",
    "keywords": "Delegate GLControlFocusedDelegate Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Delegate used by the GLWindow to customize action following change of focused gl control. public delegate void GLControlFocusedDelegate(AvaloniaGLControlSplit glSplit, AvaloniaGLControl avaloniaGLControl, bool isInitial) Parameters glSplit AvaloniaGLControlSplit Gl split reference. avaloniaGLControl AvaloniaGLControl Focused avalonia gl control. isInitial bool True if this is the first-est focused control of the gl split."
  },
  "api/SearchAThing.OpenGL.GUI.GLDevTool.html": {
    "href": "api/SearchAThing.OpenGL.GUI.GLDevTool.html",
    "title": "Class GLDevTool | netcore-opengl",
    "keywords": "Class GLDevTool Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Developer tool to inspect vertex manager at runtime. public class GLDevTool : Window, IDataContextProvider, IThemeVariantHost, IResourceHost, IResourceNode, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, IDataTemplateHost, INamed, ISetterValue, IRenderRoot, ICloseable, IStyleHost, ILogicalRoot, ILogical, ITextInputMethodRoot, IInputRoot, IInputElement, IFocusScope, ILayoutRoot, INotifyPropertyChanged Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl TopLevel WindowBase Window GLDevTool Implements IDataContextProvider IThemeVariantHost IResourceHost IResourceNode ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable IDataTemplateHost INamed ISetterValue IRenderRoot ICloseable IStyleHost ILogicalRoot ILogical ITextInputMethodRoot IInputRoot IInputElement IFocusScope ILayoutRoot INotifyPropertyChanged Inherited Members Window.SizeToContentProperty Window.ExtendClientAreaToDecorationsHintProperty Window.ExtendClientAreaChromeHintsProperty Window.ExtendClientAreaTitleBarHeightHintProperty Window.IsExtendedIntoWindowDecorationsProperty Window.WindowDecorationMarginProperty Window.OffScreenMarginProperty Window.SystemDecorationsProperty Window.ShowActivatedProperty Window.ShowInTaskbarProperty Window.WindowStateProperty Window.TitleProperty Window.IconProperty Window.WindowStartupLocationProperty Window.CanResizeProperty Window.WindowClosedEvent Window.WindowOpenedEvent Window.BeginMoveDrag(PointerPressedEventArgs) Window.BeginResizeDrag(WindowEdge, PointerPressedEventArgs) Window.Close() Window.Close(object) Window.ExtendClientAreaToDecorationsChanged(bool) Window.Hide() Window.Show() Window.IsVisibleChanged(AvaloniaPropertyChangedEventArgs) Window.Show(Window) Window.ShowDialog(Window) Window.ShowDialog<TResult>(Window) Window.MeasureOverride(Size) Window.ArrangeSetBounds(Size) Window.OnClosing(WindowClosingEventArgs) Window.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Window.OnCreateAutomationPeer() Window.PlatformImpl Window.OwnedWindows Window.SizeToContent Window.Title Window.ExtendClientAreaToDecorationsHint Window.ExtendClientAreaChromeHints Window.ExtendClientAreaTitleBarHeightHint Window.IsExtendedIntoWindowDecorations Window.WindowDecorationMargin Window.OffScreenMargin Window.SystemDecorations Window.ShowActivated Window.ShowInTaskbar Window.WindowState Window.CanResize Window.Icon Window.WindowStartupLocation Window.Position Window.StyleKeyOverride Window.Closing WindowBase.IsActiveProperty WindowBase.OwnerProperty WindowBase.TopmostProperty WindowBase.Activate() WindowBase.EnsureInitialized() WindowBase.OnClosed(EventArgs) WindowBase.OnOpened(EventArgs) WindowBase.OnResized(WindowResizedEventArgs) WindowBase.MeasureCore(Size) WindowBase.ArrangeCore(Rect) WindowBase.IgnoreVisibilityChanges WindowBase.IsActive WindowBase.Screens WindowBase.Owner WindowBase.Topmost WindowBase.DesktopScaling WindowBase.Activated WindowBase.Deactivated WindowBase.PositionChanged WindowBase.Resized TopLevel.ClientSizeProperty TopLevel.FrameSizeProperty TopLevel.PointerOverElementProperty TopLevel.TransparencyLevelHintProperty TopLevel.ActualTransparencyLevelProperty TopLevel.TransparencyBackgroundFallbackProperty TopLevel.ActualThemeVariantProperty TopLevel.RequestedThemeVariantProperty TopLevel.SystemBarColorProperty TopLevel.BackRequestedEvent TopLevel.TryGetPlatformHandle() TopLevel.SetSystemBarColor(Control, SolidColorBrush) TopLevel.GetSystemBarColor(Control) TopLevel.GetTopLevel(Visual) TopLevel.RequestPlatformInhibition(PlatformInhibitionType, string) TopLevel.RequestAnimationFrame(Action<TimeSpan>) TopLevel.StartRendering() TopLevel.StopRendering() TopLevel.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) TopLevel.OnApplyTemplate(TemplateAppliedEventArgs) TopLevel.InvalidateMirrorTransform() TopLevel.ClientSize TopLevel.FrameSize TopLevel.TransparencyLevelHint TopLevel.ActualTransparencyLevel TopLevel.TransparencyBackgroundFallback TopLevel.RequestedThemeVariant TopLevel.RendererDiagnostics TopLevel.RenderScaling TopLevel.StorageProvider TopLevel.InsetsManager TopLevel.Clipboard TopLevel.FocusManager TopLevel.PlatformSettings TopLevel.BypassFlowDirectionPolicies TopLevel.Opened TopLevel.Closed TopLevel.ScalingChanged TopLevel.BackRequested ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Toolkit.AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) Constructors GLDevTool() public GLDevTool() GLDevTool(AvaloniaGLControlSplit) public GLDevTool(AvaloniaGLControlSplit glSplit) Parameters glSplit AvaloniaGLControlSplit Properties AvaloniaGLControl AvaloniaGLControl public AvaloniaGLControl? AvaloniaGLControl { get; set; } Property Value AvaloniaGLControl GLControl public GLControl GLControl { get; } Property Value GLControl GLModel public GLModel GLModel { get; } Property Value GLModel HighlightedVertexes HighlightedVertexes public ObservableCollection<PointTransformNfo> HighlightedVertexes { get; set; } Property Value ObservableCollection<PointTransformNfo> LightPosMaxX LightPosMaxX public float LightPosMaxX { get; set; } Property Value float LightPosMaxY LightPosMaxY public float LightPosMaxY { get; set; } Property Value float LightPosMaxZ LightPosMaxZ public float LightPosMaxZ { get; set; } Property Value float LightPosMinX LightPosMinX public float LightPosMinX { get; set; } Property Value float LightPosMinY LightPosMinY public float LightPosMinY { get; set; } Property Value float LightPosMinZ LightPosMinZ public float LightPosMinZ { get; set; } Property Value float LightPosWrap LightPosWrap public Vector3Wrap? LightPosWrap { get; set; } Property Value Vector3Wrap Methods InitializeComponent(bool, bool) Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced). public void InitializeComponent(bool loadXaml = true, bool attachDevTools = true) Parameters loadXaml bool Should the XAML be loaded into the component. attachDevTools bool Should the dev tools be attached. OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.GUI.GLSplitAttachedDelegate.html": {
    "href": "api/SearchAThing.OpenGL.GUI.GLSplitAttachedDelegate.html",
    "title": "Delegate GLSplitAttachedDelegate | netcore-opengl",
    "keywords": "Delegate GLSplitAttachedDelegate Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Delegate used by the GLWindow to customize action following the attachment of the gl split into the window. public delegate void GLSplitAttachedDelegate(AvaloniaGLControlSplit glSplit) Parameters glSplit AvaloniaGLControlSplit Gl split reference."
  },
  "api/SearchAThing.OpenGL.GUI.GLView.html": {
    "href": "api/SearchAThing.OpenGL.GUI.GLView.html",
    "title": "Class GLView | netcore-opengl",
    "keywords": "Class GLView Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Avalonia control that hold a grRoot grid inside of which take place a title and an AvaloniaGLControl. Its purpose is to separate the avalonia gl control from outer gui control, in this case the gl view for desktop widget customization ( actually the title is overlayed to ). public class GLView : UserControl, IDataContextProvider, ILogical, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, IInputElement, IDataTemplateHost, INamed, ISetterValue, INotifyPropertyChanged Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl UserControl GLView Implements IDataContextProvider ILogical IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable IInputElement IDataTemplateHost INamed ISetterValue INotifyPropertyChanged Inherited Members ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnApplyTemplate(TemplateAppliedEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnCreateAutomationPeer() Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.MeasureOverride(Size) Layoutable.ArrangeCore(Rect) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.StyleKeyOverride StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GLView() public GLView() Properties AvaloniaGLControl AvaloniaGLControl public AvaloniaGLControl AvaloniaGLControl { get; set; } Property Value AvaloniaGLControl Methods InitializeComponent(bool) Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced). public void InitializeComponent(bool loadXaml = true) Parameters loadXaml bool Should the XAML be loaded into the component. OnKeyDown(KeyEventArgs) Called before the Avalonia.Input.InputElement.KeyDown event occurs. protected override void OnKeyDown(KeyEventArgs e) Parameters e KeyEventArgs The event args. OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.GUI.GLWindow.html": {
    "href": "api/SearchAThing.OpenGL.GUI.GLWindow.html",
    "title": "Class GLWindow | netcore-opengl",
    "keywords": "Class GLWindow Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Used in stand-alone application types ( console programs ) to create an application gl window. This control automatically keeps track of created gl control and listen for their property change in order to invalidate their visual. This window contains the AvaloniaGLControlSplit that is responsible to create GLView and set to them the AvaloniaGLControl which is the target render device for the GLControl. \\snippet{'trimleft'} examples/example-0000/Program.cs example-0000 public class GLWindow : Window, IDataContextProvider, IThemeVariantHost, IResourceHost, IResourceNode, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, IDataTemplateHost, INamed, ISetterValue, IRenderRoot, ICloseable, IStyleHost, ILogicalRoot, ILogical, ITextInputMethodRoot, IInputRoot, IInputElement, IFocusScope, ILayoutRoot, INotifyPropertyChanged Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl TopLevel WindowBase Window GLWindow Implements IDataContextProvider IThemeVariantHost IResourceHost IResourceNode ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable IDataTemplateHost INamed ISetterValue IRenderRoot ICloseable IStyleHost ILogicalRoot ILogical ITextInputMethodRoot IInputRoot IInputElement IFocusScope ILayoutRoot INotifyPropertyChanged Inherited Members Window.SizeToContentProperty Window.ExtendClientAreaToDecorationsHintProperty Window.ExtendClientAreaChromeHintsProperty Window.ExtendClientAreaTitleBarHeightHintProperty Window.IsExtendedIntoWindowDecorationsProperty Window.WindowDecorationMarginProperty Window.OffScreenMarginProperty Window.SystemDecorationsProperty Window.ShowActivatedProperty Window.ShowInTaskbarProperty Window.WindowStateProperty Window.TitleProperty Window.IconProperty Window.WindowStartupLocationProperty Window.CanResizeProperty Window.WindowClosedEvent Window.WindowOpenedEvent Window.BeginMoveDrag(PointerPressedEventArgs) Window.BeginResizeDrag(WindowEdge, PointerPressedEventArgs) Window.Close() Window.Close(object) Window.ExtendClientAreaToDecorationsChanged(bool) Window.Hide() Window.Show() Window.IsVisibleChanged(AvaloniaPropertyChangedEventArgs) Window.Show(Window) Window.ShowDialog(Window) Window.ShowDialog<TResult>(Window) Window.MeasureOverride(Size) Window.ArrangeSetBounds(Size) Window.OnClosing(WindowClosingEventArgs) Window.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Window.OnCreateAutomationPeer() Window.PlatformImpl Window.OwnedWindows Window.SizeToContent Window.Title Window.ExtendClientAreaToDecorationsHint Window.ExtendClientAreaChromeHints Window.ExtendClientAreaTitleBarHeightHint Window.IsExtendedIntoWindowDecorations Window.WindowDecorationMargin Window.OffScreenMargin Window.SystemDecorations Window.ShowActivated Window.ShowInTaskbar Window.WindowState Window.CanResize Window.Icon Window.WindowStartupLocation Window.Position Window.StyleKeyOverride Window.Closing WindowBase.IsActiveProperty WindowBase.OwnerProperty WindowBase.TopmostProperty WindowBase.Activate() WindowBase.EnsureInitialized() WindowBase.OnClosed(EventArgs) WindowBase.OnOpened(EventArgs) WindowBase.OnResized(WindowResizedEventArgs) WindowBase.MeasureCore(Size) WindowBase.ArrangeCore(Rect) WindowBase.IgnoreVisibilityChanges WindowBase.IsActive WindowBase.Screens WindowBase.Owner WindowBase.Topmost WindowBase.DesktopScaling WindowBase.Activated WindowBase.Deactivated WindowBase.PositionChanged WindowBase.Resized TopLevel.ClientSizeProperty TopLevel.FrameSizeProperty TopLevel.PointerOverElementProperty TopLevel.TransparencyLevelHintProperty TopLevel.ActualTransparencyLevelProperty TopLevel.TransparencyBackgroundFallbackProperty TopLevel.ActualThemeVariantProperty TopLevel.RequestedThemeVariantProperty TopLevel.SystemBarColorProperty TopLevel.BackRequestedEvent TopLevel.TryGetPlatformHandle() TopLevel.SetSystemBarColor(Control, SolidColorBrush) TopLevel.GetSystemBarColor(Control) TopLevel.GetTopLevel(Visual) TopLevel.RequestPlatformInhibition(PlatformInhibitionType, string) TopLevel.RequestAnimationFrame(Action<TimeSpan>) TopLevel.StartRendering() TopLevel.StopRendering() TopLevel.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) TopLevel.OnApplyTemplate(TemplateAppliedEventArgs) TopLevel.InvalidateMirrorTransform() TopLevel.ClientSize TopLevel.FrameSize TopLevel.TransparencyLevelHint TopLevel.ActualTransparencyLevel TopLevel.TransparencyBackgroundFallback TopLevel.RequestedThemeVariant TopLevel.RendererDiagnostics TopLevel.RenderScaling TopLevel.StorageProvider TopLevel.InsetsManager TopLevel.Clipboard TopLevel.FocusManager TopLevel.PlatformSettings TopLevel.BypassFlowDirectionPolicies TopLevel.Opened TopLevel.Closed TopLevel.ScalingChanged TopLevel.BackRequested ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.Render(DrawingContext) Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Toolkit.AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) Constructors GLWindow() public GLWindow() GLWindow(GLControlCreatedDelegate?, GLSplitAttachedDelegate?, GLControlFocusedDelegate?) Create a gl window and contextually: a GLModel a GLContext a split gl AvaloniaGLControlSplit public GLWindow(GLControlCreatedDelegate? onGLControlCreated = null, GLSplitAttachedDelegate? onGLSplitAttached = null, GLControlFocusedDelegate? onFocusedControlChanged = null) Parameters onGLControlCreated GLControlCreatedDelegate Callback with AvaloniaGLControl argument invoked when a GLControl will be created. onGLSplitAttached GLSplitAttachedDelegate Callback with AvaloniaGLControlSplit argument invoked when a AvaloniaGLControlSplit is attached to this gl window. onFocusedControlChanged GLControlFocusedDelegate Callback after avalonia gl control focused (args: AvaloniaGLControlSplit, AvaloniaGLControl, bool isInitial) Properties FocusedControl Focused gl control. Changes if the gl split AvaloniaGLControlSplit has more than the single initial views inside it. public GLControl? FocusedControl { get; set; } Property Value GLControl GLControlSplit Reference to the application gl split control. It will automatically created and attached within the GLWindow constructor. public AvaloniaGLControlSplit? GLControlSplit { get; } Property Value AvaloniaGLControlSplit GLModel Reference to gl model within its gl context. It will automatically created within the GLWindow constructor. public GLModel GLModel { get; } Property Value GLModel NotificationManager Reference to avalonia notification manager, useful to show popup messages. public WindowNotificationManager? NotificationManager { get; set; } Property Value WindowNotificationManager Methods Create(double?, double?, GLControlCreatedDelegate?, GLSplitAttachedDelegate?, GLControlFocusedDelegate?) Create a gl window. public static GLWindow Create(double? width = null, double? height = null, GLControlCreatedDelegate? onGLControlCreated = null, GLSplitAttachedDelegate? onGLSplitAttached = null, GLControlFocusedDelegate? onFocusedControlChanged = null) Parameters width double? (Optional) window width (pixels). height double? (Optional) window height (pixels). onGLControlCreated GLControlCreatedDelegate (Optional) gl control created handler. Args (AvaloniaGLControl). onGLSplitAttached GLSplitAttachedDelegate (Optional) gl split attached. Args (AvaloniaGLControlSplit) onFocusedControlChanged GLControlFocusedDelegate Callback after avalonia gl control focused (args: AvaloniaGLControlSplit, AvaloniaGLControl, bool isInitial) Returns GLWindow InitializeComponent(bool, bool) Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced). public void InitializeComponent(bool loadXaml = true, bool attachDevTools = true) Parameters loadXaml bool Should the XAML be loaded into the component. attachDevTools bool Should the dev tools be attached. Invalidate() Invalidate gl control split. public void Invalidate() OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string ShowSync() Start avalonia engine from console mode to show up gl window. public void ShowSync() Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.GUI.LostFocusUpdateBindingBehavior.html": {
    "href": "api/SearchAThing.OpenGL.GUI.LostFocusUpdateBindingBehavior.html",
    "title": "Class LostFocusUpdateBindingBehavior | netcore-opengl",
    "keywords": "Class LostFocusUpdateBindingBehavior Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll public class LostFocusUpdateBindingBehavior : Behavior<TextBox>, INotifyPropertyChanged, IBehavior Inheritance object AvaloniaObject Behavior Behavior<TextBox> LostFocusUpdateBindingBehavior Implements INotifyPropertyChanged IBehavior Inherited Members Behavior<TextBox>.AssociatedObject Behavior.Attach(AvaloniaObject) Behavior.Detach() Behavior.OnAttachedToVisualTree() Behavior.OnDetachedFromVisualTree() AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) AvaloniaObject.OnPropertyChanged(AvaloniaPropertyChangedEventArgs) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] AvaloniaObject.PropertyChanged object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TextProperty public static readonly StyledProperty<string?> TextProperty Field Value StyledProperty<string> Properties Text public string? Text { get; set; } Property Value string Methods OnAttached() Called after the behavior is attached to the Avalonia.Xaml.Interactivity.Behavior.AssociatedObject. protected override void OnAttached() Remarks Override this to hook up functionality to the Avalonia.Xaml.Interactivity.Behavior.AssociatedObject OnDetaching() Called when the behavior is being detached from its Avalonia.Xaml.Interactivity.Behavior.AssociatedObject. protected override void OnDetaching() Remarks Override this to unhook functionality from the Avalonia.Xaml.Interactivity.Behavior.AssociatedObject"
  },
  "api/SearchAThing.OpenGL.GUI.Toolkit.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Toolkit.html",
    "title": "Class Toolkit | netcore-opengl",
    "keywords": "Class Toolkit Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll public static class Toolkit Inheritance object Toolkit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) Attach gl split to the given avalonia window. It's automatically invoked in the stand-alone console application through GLWindow and have to be attached during MainWindow constructor for mvvm application types. public static void AttachGLControlSplit(this Window owner, Grid grid, GLModel glModel, Action<AvaloniaGLControlSplit>? setGLControlSplit = null, AvaloniaControlInitialEvent? onFocusedControlChanged = null, AvaloniaControlEvent? onControlCreated = null, AvaloniaControlEvent? onControlRemoved = null) Parameters owner Window Gl split window owner. grid Grid Grid control container for gl split control. glModel GLModel Gl model. setGLControlSplit Action<AvaloniaGLControlSplit> Callback after gl split attaches (args: AvaloniaGLControlSplit). onFocusedControlChanged AvaloniaControlInitialEvent Callback after avalonia gl control focused (args: AvaloniaGLControlSplit, AvaloniaGLControl, bool isInitial) onControlCreated AvaloniaControlEvent Callback after avalonia gl control created (args: AvaloniaGLControl). onControlRemoved AvaloniaControlEvent Callback after avalonia gl control removed (args: AvaloniaGLControl). FinalizeWorksheet(IXLWorksheet) Helper to finalize xlsx worksheet. public static (IXLRange rng_used, int col_cnt, int row_cnt) FinalizeWorksheet(this IXLWorksheet ws) Parameters ws IXLWorksheet Returns (IXLRange rng_used, int col_cnt, int row_cnt) InitAvalonia() Initialize avalonia for stand-alone application. This must be called before any other avalonia control usages. public static void InitAvalonia()"
  },
  "api/SearchAThing.OpenGL.GUI.Vector2TextConverter.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Vector2TextConverter.html",
    "title": "Class Vector2TextConverter | netcore-opengl",
    "keywords": "Class Vector2TextConverter Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Converter to allow text editing of vector2 components. public class Vector2TextConverter : IValueConverter Inheritance object Vector2TextConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Vector2TextConverter(string) public Vector2TextConverter(string sep = \",\") Parameters sep string Properties Instance public static Vector2TextConverter Instance { get; } Property Value Vector2TextConverter Methods Convert(object?, Type, object?, CultureInfo) Converts a value. public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception. ConvertBack(object?, Type, object?, CultureInfo) Converts a value. public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception."
  },
  "api/SearchAThing.OpenGL.GUI.Vector3EditConverter.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Vector3EditConverter.html",
    "title": "Class Vector3EditConverter | netcore-opengl",
    "keywords": "Class Vector3EditConverter Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Converter that create a Vector3Wrap vector3 wrapper that can be used for interactive editing of vector3 components. public class Vector3EditConverter : IValueConverter Inheritance object Vector3EditConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Vector3EditConverter() public Vector3EditConverter() Properties Instance public static Vector3EditConverter Instance { get; } Property Value Vector3EditConverter Methods Convert(object?, Type, object?, CultureInfo) Converts a value. public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception. ConvertBack(object?, Type, object?, CultureInfo) Converts a value. public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception."
  },
  "api/SearchAThing.OpenGL.GUI.Vector3TextConverter.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Vector3TextConverter.html",
    "title": "Class Vector3TextConverter | netcore-opengl",
    "keywords": "Class Vector3TextConverter Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Converter to allow text editing of vector3 components. public class Vector3TextConverter : IValueConverter Inheritance object Vector3TextConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Vector3TextConverter(string) public Vector3TextConverter(string sep = \",\") Parameters sep string Properties Instance public static Vector3TextConverter Instance { get; } Property Value Vector3TextConverter Methods Convert(object?, Type, object?, CultureInfo) Converts a value. public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception. ConvertBack(object?, Type, object?, CultureInfo) Converts a value. public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception."
  },
  "api/SearchAThing.OpenGL.GUI.Vector3Wrap.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Vector3Wrap.html",
    "title": "Class Vector3Wrap | netcore-opengl",
    "keywords": "Class Vector3Wrap Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Wrap X,Y,Z components of an object containing a INotifyPropertyChanged vector3. public class Vector3Wrap : INotifyPropertyChanged Inheritance object Vector3Wrap Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Vector3Wrap(INotifyPropertyChanged, string) vector3 wrap constructor public Vector3Wrap(INotifyPropertyChanged container, string propname) Parameters container INotifyPropertyChanged object that hold rvector3 propname string property name of the rvector3 in the given container Properties X X public float X { get; set; } Property Value float Y Y public float Y { get; set; } Property Value float Z Z public float Z { get; set; } Property Value float Methods OnPropertyChanged(string?) invoke this method to forward propertchanged event notification. note: not needed to specify propertyName set by compiler service to called property. protected void OnPropertyChanged(string? propertyName = null) Parameters propertyName string Events PropertyChanged public event PropertyChangedEventHandler? PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/SearchAThing.OpenGL.GUI.Vector4TextConverter.html": {
    "href": "api/SearchAThing.OpenGL.GUI.Vector4TextConverter.html",
    "title": "Class Vector4TextConverter | netcore-opengl",
    "keywords": "Class Vector4TextConverter Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Converter to allow text editing of vector4 components. public class Vector4TextConverter : IValueConverter Inheritance object Vector4TextConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Vector4TextConverter(string) public Vector4TextConverter(string sep = \",\") Parameters sep string Properties Instance public static Vector4TextConverter Instance { get; } Property Value Vector4TextConverter Methods Convert(object?, Type, object?, CultureInfo) Converts a value. public object? Convert(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception. ConvertBack(object?, Type, object?, CultureInfo) Converts a value. public object? ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture) Parameters value object The value to convert. targetType Type The type of the target. parameter object A user-defined parameter. culture CultureInfo The culture to use. Returns object The converted value. Remarks This method should not throw exceptions. If the value is not convertible, return a Avalonia.Data.BindingNotification in an error state. Any exceptions thrown will be treated as an application exception."
  },
  "api/SearchAThing.OpenGL.GUI.ViewLayoutNfo.html": {
    "href": "api/SearchAThing.OpenGL.GUI.ViewLayoutNfo.html",
    "title": "Class ViewLayoutNfo | netcore-opengl",
    "keywords": "Class ViewLayoutNfo Namespace SearchAThing.OpenGL.GUI Assembly netcore-opengl-gui.dll Object that holds information about gl split view configuration. public class ViewLayoutNfo Inheritance object ViewLayoutNfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FocusedUIDView UID of view focused between all of the layout. public int FocusedUIDView { get; set; } Property Value int Layout Sequence of splits. public GridSplitterManagerLayoutItem? Layout { get; set; } Property Value GridSplitterManagerLayoutItem Lights List of model lights. public List<GLPointLight> Lights { get; set; } Property Value List<GLPointLight> OverrideAmbient public float? OverrideAmbient { get; set; } Property Value float? OverrideDiffuse public float? OverrideDiffuse { get; set; } Property Value float? OverrideSpecular public float? OverrideSpecular { get; set; } Property Value float? UIDView Dictionary UID view to view config itself. public Dictionary<int, ViewNfo> UIDView { get; set; } Property Value Dictionary<int, ViewNfo>"
  },
  "api/SearchAThing.OpenGL.GUI.html": {
    "href": "api/SearchAThing.OpenGL.GUI.html",
    "title": "Namespace SearchAThing.OpenGL.GUI | netcore-opengl",
    "keywords": "Namespace SearchAThing.OpenGL.GUI Classes AColorConverter Converter Color to Avalonia.Media.Color AvaloniaGLControl Avalonia gl control. It's a graphical ui IRenderDevice used to transfer GLControl pixels to the window bitmap through the override of the avalonia Render(DrawingContext) method that will be called by the avalonia framework every time the visual invalidates. When control size changed Invalidate(InvalidateEnum) will be invoked and GLSizeChanged event emitted. AvaloniaGLControlSplit Gl split control attached to GLWindow for stand-alone application or Avalonia.Controls.Window on mvvm applications. It creates GLView at start then allow to create more when split activated through associated key gestures. ColorHexStringConverter Converter Color to hex string Constants Ext GLDevTool Developer tool to inspect vertex manager at runtime. GLView Avalonia control that hold a grRoot grid inside of which take place a title and an AvaloniaGLControl. Its purpose is to separate the avalonia gl control from outer gui control, in this case the gl view for desktop widget customization ( actually the title is overlayed to ). GLWindow Used in stand-alone application types ( console programs ) to create an application gl window. This control automatically keeps track of created gl control and listen for their property change in order to invalidate their visual. This window contains the AvaloniaGLControlSplit that is responsible to create GLView and set to them the AvaloniaGLControl which is the target render device for the GLControl. \\snippet{'trimleft'} examples/example-0000/Program.cs example-0000 LostFocusUpdateBindingBehavior Toolkit Vector2TextConverter Converter to allow text editing of vector2 components. Vector3EditConverter Converter that create a Vector3Wrap vector3 wrapper that can be used for interactive editing of vector3 components. Vector3TextConverter Converter to allow text editing of vector3 components. Vector3Wrap Wrap X,Y,Z components of an object containing a INotifyPropertyChanged vector3. Vector4TextConverter Converter to allow text editing of vector4 components. ViewLayoutNfo Object that holds information about gl split view configuration. Delegates AvaloniaControlEvent Generic delegate used by AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) for control create/remove events. AvaloniaControlInitialEvent Used by AttachGLControlSplit(Window, Grid, GLModel, Action<AvaloniaGLControlSplit>?, AvaloniaControlInitialEvent?, AvaloniaControlEvent?, AvaloniaControlEvent?) to notify focused control change. GLControlCreatedDelegate Delegate used by the GLWindow to customize action following the creation of the gl control into the window. GLControlFocusedDelegate Delegate used by the GLWindow to customize action following change of focused gl control. GLSplitAttachedDelegate Delegate used by the GLWindow to customize action following the attachment of the gl split into the window."
  },
  "api/SearchAThing.OpenGL.Nurbs.Ext.html": {
    "href": "api/SearchAThing.OpenGL.Nurbs.Ext.html",
    "title": "Class Ext | netcore-opengl",
    "keywords": "Class Ext Namespace SearchAThing.OpenGL.Nurbs Assembly netcore-opengl-nurbs.dll public static class Ext Inheritance object Ext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToPoint3(IEnumerable<Vector3>) Enumerable Vector3 to Enumerable G-Shark Point3 public static IEnumerable<Point3> ToPoint3(this IEnumerable<Vector3> vs) Parameters vs IEnumerable<Vector3> Vector3 enumerable. Returns IEnumerable<Point3> G-Shark Point3 enumerable. ToPoint3(in Vector3) Vector3 to G-Shark Point3 public static Point3 ToPoint3(this in Vector3 v) Parameters v Vector3 Returns Point3 ToVector3(Point3) G-Shark Point3 to Vector3 public static Vector3 ToVector3(this Point3 p) Parameters p Point3 Returns Vector3 ToVector3(in Vector3) G-Shark Vector3 to Vector3 public static Vector3 ToVector3(this in Vector3 p) Parameters p Vector3 Returns Vector3"
  },
  "api/SearchAThing.OpenGL.Nurbs.Toolkit.html": {
    "href": "api/SearchAThing.OpenGL.Nurbs.Toolkit.html",
    "title": "Class Toolkit | netcore-opengl",
    "keywords": "Class Toolkit Namespace SearchAThing.OpenGL.Nurbs Assembly netcore-opengl-nurbs.dll public static class Toolkit Inheritance object Toolkit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NurbToGL(NurbsCurve, int) G-Shark nurb to GLLine helper public static IEnumerable<Line> NurbToGL(this NurbsCurve curve, int N = 6) Parameters curve NurbsCurve nurb curve N int number of nurb divisions Returns IEnumerable<Line> lines representing given nurb curve NurbToGL(NurbsSurface, Color?, int) G-Shark nurb to GLTriangle helper public static IEnumerable<GLTriangle> NurbToGL(this NurbsSurface nurb, Color? color = null, int N = 6) Parameters nurb NurbsSurface nurb color Color? color of triangles generated N int number of nurb divisions Returns IEnumerable<GLTriangle> triangles mesh of the nurb"
  },
  "api/SearchAThing.OpenGL.Nurbs.html": {
    "href": "api/SearchAThing.OpenGL.Nurbs.html",
    "title": "Namespace SearchAThing.OpenGL.Nurbs | netcore-opengl",
    "keywords": "Namespace SearchAThing.OpenGL.Nurbs Classes Ext Toolkit"
  },
  "api/SearchAThing.OpenGL.Shapes.Arrow.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.Arrow.html",
    "title": "Class Arrow | netcore-opengl",
    "keywords": "Class Arrow Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll Arrow shape. public class Arrow Inheritance object Arrow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Arrow(in Vector3, in Vector3, float?) Create an arrow from, to with given optional diameter. public Arrow(in Vector3 from, in Vector3 to, float? diameterFactor = null) Parameters from Vector3 Arrow from position. to Vector3 Arrow to position. diameterFactor float? (Optional) Arrow rod diameter factor to compute rod diameter as length * factor ( default:0.1 ). Properties Diameter Arrow rod diameter. public float Diameter { get; } Property Value float From Arrow from position. public Vector3 From { get; } Property Value Vector3 Length Computed arrow length as (To - From).Length(). public float Length { get; } Property Value float TipDiameter Computed tip diameter. public float TipDiameter { get; } Property Value float See Also DEFAULT_ARROW_TIP_DIAMETER_FACTOR TipLength Computed tip length. public float TipLength { get; } Property Value float See Also DEFAULT_ARROW_TIP_LEN_FACTOR To Arrow to position. public Vector3 To { get; } Property Value Vector3 Methods Figure(int, bool) Gl triangles figure that represents the arrow. public GLFigureBase Figure(int divisions = 16, bool lineMode = false) Parameters divisions int Number of divisions to refine the figure. (Min:4) lineMode bool If true a line with 3 lines instead of triangles will created (Default:false). Returns GLFigureBase Lines() GL line figure that presents the arrow. public IEnumerable<GLLine> Lines() Returns IEnumerable<GLLine> Triangles(int) Gl triangle figure that represents the arrow. public IEnumerable<GLTriangle> Triangles(int divisions = 16) Parameters divisions int Number of divisions to refine the figure. (Min:4) Returns IEnumerable<GLTriangle>"
  },
  "api/SearchAThing.OpenGL.Shapes.Box.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.Box.html",
    "title": "Class Box | netcore-opengl",
    "keywords": "Class Box Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll Box shape. public class Box Inheritance object Box Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Box(in Matrix4x4, in Vector3, Color?, bool, bool) Create a box figure. public Box(in Matrix4x4 cs, in Vector3 csSize, Color? color = null, bool csBaseIsMiddle = false, bool setTextureST = false) Parameters cs Matrix4x4 Coordinate system for the box construction. csSize Vector3 Size of the box. color Color? Color of box sides. csBaseIsMiddle bool If true CS represents the middle of the box. If false it represents the cs placed in the middle of lower face. setTextureST bool If true textureST coordinates will applied to box sides triangles. See Also GetTriangles(Plate, in Color?, bool) Properties CS Coordinate system for the box construction. public Matrix4x4 CS { get; } Property Value Matrix4x4 CSBaseIsMiddle If true CS represents the middle of the box. If false it represents the cs placed in the middle of lower face. public bool CSBaseIsMiddle { get; } Property Value bool CSSize Size of the box. public Vector3 CSSize { get; } Property Value Vector3 Center public Vector3 Center { get; } Property Value Vector3 Elevation Elevation of the box as CSSize.Z. public float Elevation { get; } Property Value float SideBack public GLTriangleFigure SideBack { get; } Property Value GLTriangleFigure SideBottom public GLTriangleFigure SideBottom { get; } Property Value GLTriangleFigure SideFront public GLTriangleFigure SideFront { get; } Property Value GLTriangleFigure SideLeft public GLTriangleFigure SideLeft { get; } Property Value GLTriangleFigure SideRight public GLTriangleFigure SideRight { get; } Property Value GLTriangleFigure SideTop public GLTriangleFigure SideTop { get; } Property Value GLTriangleFigure Sides Enumerates box sides figures ( BOTTOM, TOP, LEFT, RIGHT, FRONT, BACK ). Sides figures are initially tagged with the first letter of the side name. public IEnumerable<GLTriangleFigure> Sides { get; } Property Value IEnumerable<GLTriangleFigure> See Also Tag"
  },
  "api/SearchAThing.OpenGL.Shapes.Cone.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.Cone.html",
    "title": "Class Cone | netcore-opengl",
    "keywords": "Class Cone Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll Cone, truncated cone or pyramid shape. public class Cone Inheritance object Cone Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Cone(in Matrix4x4, float, float, float, bool, bool) Create a: Truncated cone ( if topRadius smaller than baseRadius ). Pyramic ( if topRadius equals zero ). Cone ( if baseRadius == topRadius ). public Cone(in Matrix4x4 baseCS, float baseRadius, float topRadius, float height, bool bottomCap = true, bool topCap = true) Parameters baseCS Matrix4x4 Coordinate system of the cone base. baseRadius float Base radius of the cone. topRadius float Top radius of the cone. height float Height of the cone. bottomCap bool If true figure include bottom cap (Default:true). topCap bool If true figure include top cap (Default:true). Properties BaseCS Coordinate system of the cone base. public Matrix4x4 BaseCS { get; } Property Value Matrix4x4 BaseRadius Base radius of the cone. public float BaseRadius { get; } Property Value float BottomCap If true figure include bottom closure (Default: true). public bool BottomCap { get; } Property Value bool Height Height of the cone. public float Height { get; } Property Value float TopCap If true figure include top closure (Default: true). public bool TopCap { get; } Property Value bool TopRadius Top radius of the cone. public float TopRadius { get; } Property Value float Methods Figure(int) Gl triangle figure that represents the cone. public GLTriangleFigure Figure(int divisions = 8) Parameters divisions int Number of divisions to refine the figure. (Min:4) Returns GLTriangleFigure Triangles(int) Gl triangles that represents the cone. public IEnumerable<GLTriangle> Triangles(int divisions) Parameters divisions int Number of divisions to refine the figure. (Min:4) Returns IEnumerable<GLTriangle>"
  },
  "api/SearchAThing.OpenGL.Shapes.Constants.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.Constants.html",
    "title": "Class Constants | netcore-opengl",
    "keywords": "Class Constants Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll public static class Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DEFAULT_ARROW_DIVISIONS Nr. of divisions for arrow shape. Arrow public const int DEFAULT_ARROW_DIVISIONS = 16 Field Value int DEFAULT_ARROW_TIP_DIAMETER_FACTOR Diameter of tip respect to the rod diameter. public const float DEFAULT_ARROW_TIP_DIAMETER_FACTOR = 2 Field Value float DEFAULT_ARROW_TIP_LEN_FACTOR How much tip length is included respect to arrow total length. public const float DEFAULT_ARROW_TIP_LEN_FACTOR = 0.2 Field Value float DEFAULT_CONE_DIVISIONS Nr. of divisions for cone shape. Cone public const int DEFAULT_CONE_DIVISIONS = 8 Field Value int"
  },
  "api/SearchAThing.OpenGL.Shapes.ContourLegend.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.ContourLegend.html",
    "title": "Class ContourLegend | netcore-opengl",
    "keywords": "Class ContourLegend Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll Contour Legend public class ContourLegend Inheritance object ContourLegend Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContourLegend(GLContext, string, int, double, double, float, float, CustomLegendLabelDelegate?, bool) Create a set of figures that represents a contour legend. public ContourLegend(GLContext glContext, string title, int divisions, double minVal, double maxVal, float textHeight = 20, float contourBlockSize = 10, CustomLegendLabelDelegate? customLegendLabel = null, bool useFigureBackground = true) Parameters glContext GLContext GL context ( used to make text ) title string Title of contour legend. divisions int Number of legend blocks to represent. Lower bound (MinValue) extends through given division toward upper bound (MaxValue) displaying intermediate values aside colored block legend rectangle. minVal double Minimum value of contour. maxVal double Maximum value of contour. textHeight float Text height. contourBlockSize float Size of contour legend squared block. customLegendLabel CustomLegendLabelDelegate If not null a function that will invoked to generate legend labels. args:(int offset, double val) (Default:null). useFigureBackground bool If true a black (alpha:100f/255) coloured background is placed under legend bbox. Properties ContourBlockSize Size of contour legend squared block. public float ContourBlockSize { get; } Property Value float CustomLegendLabel If not null a function that will invoked to generate legend labels. args:(int index, double val) (Default:null). public CustomLegendLabelDelegate? CustomLegendLabel { get; } Property Value CustomLegendLabelDelegate Divisions Number of legend blocks to represent. Lower bound (MinValue) extends through given division toward upper bound (MaxValue) displaying intermediate values aside colored block legend rectangle. public int Divisions { get; } Property Value int GLContext GL context ( used to make text ) public GLContext GLContext { get; } Property Value GLContext MaxValue Maximum value of contour. public double MaxValue { get; } Property Value double MinValue Minimum value of contour. public double MinValue { get; } Property Value double TextHeight Text height. public float TextHeight { get; } Property Value float Title Title of contour legend. public string Title { get; } Property Value string UseFigureBackground If true a black (alpha:100f/255) coloured background is placed under legend bbox. public bool UseFigureBackground { get; } Property Value bool Methods Figures() Retrieve list of figures that represent the contour legend [screen]. public List<GLFigureBase> Figures() Returns List<GLFigureBase>"
  },
  "api/SearchAThing.OpenGL.Shapes.CustomLegendLabelDelegate.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.CustomLegendLabelDelegate.html",
    "title": "Delegate CustomLegendLabelDelegate | netcore-opengl",
    "keywords": "Delegate CustomLegendLabelDelegate Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll Delegate for CustomLegendLabel. public delegate string CustomLegendLabelDelegate(int index, double val) Parameters index int Index of the i-th contour legend entry. val double Value of the i-th contour legend ventry. Returns string String representation of the i-th contour legend."
  },
  "api/SearchAThing.OpenGL.Shapes.Ellipse.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.Ellipse.html",
    "title": "Class Ellipse | netcore-opengl",
    "keywords": "Class Ellipse Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll Ellipse public class Ellipse Inheritance object Ellipse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Ellipse(in Matrix4x4, float, float) public Ellipse(in Matrix4x4 baseCS, float radiusX, float radiusY) Parameters baseCS Matrix4x4 radiusX float radiusY float Properties BaseCS Coordinate system of the ellipse center. public Matrix4x4 BaseCS { get; } Property Value Matrix4x4 Center Center of the ellipse public Vector3 Center { get; } Property Value Vector3 RadiusX Radius basex of the ellipse. public float RadiusX { get; } Property Value float RadiusY Radius basey of the ellipse. public float RadiusY { get; } Property Value float Methods Figure(int) Gl line figure that represents the ellipse. public GLLineFigure Figure(int divisions = 8) Parameters divisions int Number of divisions to refine the figure. Returns GLLineFigure Lines(int) Gl lines that represents the ellipse. public IEnumerable<GLLine> Lines(int divisions) Parameters divisions int Number of divisions to refine the figure. Returns IEnumerable<GLLine>"
  },
  "api/SearchAThing.OpenGL.Shapes.Toolkit.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.Toolkit.html",
    "title": "Class Toolkit | netcore-opengl",
    "keywords": "Class Toolkit Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll public static class Toolkit Inheritance object Toolkit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCSFigure(Matrix4x4, float, Color?, bool, float?) Make a figure that represents a cs with RGB X:red Y:green Z:blue axes. public static GLFigureBase MakeCSFigure(Matrix4x4 cs, float size = 1, Color? originColor = null, bool setOriginColor = true, float? solidArrowsDiameterFactor = null) Parameters cs Matrix4x4 Coordinate system to represents as a figure. size float (Optional) Axes length (Default:1). originColor Color? (Optional) Color of the origin (Default:white). setOriginColor bool (Optional) Set the color of the origin (Default:true). solidArrowsDiameterFactor float? (Optional) If not null arrows instead lines will created with specified diameter factor. Arrow(in Vector3, in Vector3, float?) (Default:null). Returns GLFigureBase cs figure. MakeRectangle(in Matrix4x4, float, float, Color?) make rectangle by specify center, width, height public static GLLineFigure MakeRectangle(in Matrix4x4 csCenter, float w, float h, Color? color = null) Parameters csCenter Matrix4x4 Coordinate system where rectangle resides. Center of rectangle is the cs origin. w float Width of rectangle. h float Height of rectangle. color Color? Color. Returns GLLineFigure Rectangle line figure. MakeWCSFigure(float, Color?, bool, Vector3?, float?) Make a figure that represents a wcs with RGB X:red Y:green Z:blue axes. public static GLFigureBase MakeWCSFigure(float size = 1, Color? originColor = null, bool setOriginColor = true, Vector3? origin = null, float? solidArrowsDiameterFactor = null) Parameters size float (Optional) Axes length (Default:1). originColor Color? (Optional) Color of the origin (Default:white). setOriginColor bool (Optional) Set the color of the origin (Default:true). origin Vector3? (Optional) Wcs origin (Default:0,0,0). solidArrowsDiameterFactor float? (Optional) If not null arrows instead lines will created with specified diameter factor. Arrow(in Vector3, in Vector3, float?) (Default:null). Returns GLFigureBase Wcs figure."
  },
  "api/SearchAThing.OpenGL.Shapes.UVSphere.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.UVSphere.html",
    "title": "Class UVSphere | netcore-opengl",
    "keywords": "Class UVSphere Namespace SearchAThing.OpenGL.Shapes Assembly netcore-opengl-shapes.dll UVSphere shape. public class UVSphere Inheritance object UVSphere Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UVSphere(in Vector3, float) Create a (uv) sphere with given center and radius. public UVSphere(in Vector3 center, float radius) Parameters center Vector3 Center of the sphere. radius float Radius of the sphere. Properties Center Center of the sphere. public Vector3 Center { get; } Property Value Vector3 Radius Radius of the sphere. public float Radius { get; } Property Value float Methods Figure(int, bool) Gl triangle figure that represents the sphere. The ComputeNormal is approriately set to compute vertex sphere normals. public GLTriangleFigure Figure(int divisions, bool setUVTexture = false) Parameters divisions int Number of divisions to refine the figure. (Min:4) setUVTexture bool If true sets vertexes texture coordinates to fit a rectangle image onto the sphere. Returns GLTriangleFigure Triangles(int, bool) Gl triangles that represents the sphere. The ComputeNormal is approriately set to compute vertex sphere normals. public IEnumerable<GLTriangle> Triangles(int divisions, bool setUVTexture = false) Parameters divisions int Number of divisions to refine the figure. (Min:4) setUVTexture bool If true sets vertexes texture coordinates to fit a rectangle image onto the sphere. Returns IEnumerable<GLTriangle>"
  },
  "api/SearchAThing.OpenGL.Shapes.html": {
    "href": "api/SearchAThing.OpenGL.Shapes.html",
    "title": "Namespace SearchAThing.OpenGL.Shapes | netcore-opengl",
    "keywords": "Namespace SearchAThing.OpenGL.Shapes Classes Arrow Arrow shape. Box Box shape. Cone Cone, truncated cone or pyramid shape. Constants ContourLegend Contour Legend Ellipse Ellipse Toolkit UVSphere UVSphere shape. Delegates CustomLegendLabelDelegate Delegate for CustomLegendLabel."
  },
  "data/pages/mainpage-doc.html": {
    "href": "data/pages/mainpage-doc.html",
    "title": "| netcore-opengl",
    "keywords": "\\mainpage netcore-opengl This is the API documentation of the netcore-opengl library. Sources and Examples Namespace Toolkit Extensions Description Toolkit Extensions Core module contains gl calculations, render abstraction over Silk.NET opengl library. Toolkit Extensions GUI module use Avalonia window in stand-alone console app and in mvvm applications to transfer gl pixels from the GL framebuffer to the control drawing context. Toolkit Extensions Shapes module provides some common figures such as box, cone, sphere, arrow. Toolkit Extensions Nurb figures."
  },
  "index.html": {
    "href": "index.html",
    "title": "netcore-opengl | netcore-opengl",
    "keywords": "netcore-opengl api"
  }
}